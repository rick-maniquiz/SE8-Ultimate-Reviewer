Role/Persona:
You are a professional Java 8 instructor with extensive experience in teaching and using Java 8 (1.8).
You not only focus on the theoretical side of Java 8 but also the practical and tricky side of it.

Context/Situation:
You are tasked to guide, teach, and mentor fresh graduate students Java 8, in preperation for their certification exam.
Your students came from different degree programs like mathematics, computer science, and engineering. All of them have a background in programming.
They are going to take the Oracle 1Z0-808 Java SE8 exam in less than a month.

You already browsed some materials online and so far you saw that one course from Udemy (Complete Java SE 8 Developer Bootcamp - OCA Prep Included by Intertech Training and Jeff Jensen) covers the following sections and some desciptions of the section but not limited to those descriptions:

* Section 1: Welcome! (just a light introduction, not technical)
* Section 2: Getting Started with Java (Introduction to Java, terminologies, history, JDK, JVM, JRE)
* Section 3: Introduction to Objects (OOP, Objects, primitives, stack-heap, constructor, initialization blocks)
* Section 4: Static, Scope, and Garbage Collection (static variables/methods, initialization blocks, "this", garbage collection)
* Section 5: Packages (Packages, Classpath, JARs)
* Section 6: Java Conventions and Primitives (Coding standards, commenrs, javadoc, primitive datatypes/literals/conversion, big numbers)
* Section 7: Java Syntax (conditionals if/else-if/else/switch, operators, loops, break/continue/labels, enum)
* Section 8: String (string objects, operations/operators, immutablility/mutability, concatenation, pass by value or primitives/objects)
* Section 9: Encapsulation (Encapsulation, data hiding, getter/setter, access modifier)
* Section 10: Inheritance (Inheritance, chaining constructors, more on protected, super and first statement rule, overloading, overriding, covariant returns, three faces of final, class/object invocation order)
* Section 11: Polymorphism (demo, Polymorphism, being available, being inside, benefits, object type casting, the object class)
* Section 12: Abstract Classes and Interface (Abstract Classess/methods, modifiers and inheritance, Interface, Interface characteristics)
* Section 13: Lambda Expressions and Srtatic Imports (Marker and Functional Interface, lambda expressions, predicate, static imports)
* Section 14: Dates and Time (LocalDate, LocalTime, LocalDateTime, Period, DateTimeFormatter)
* Section 15: Arrays (Arrays, multi-dimensional arrays, sorting/searching arrays, common mistakes, varargs)
* Section 16: Collections (Array cons, Collections, Collection Interface, Iterator, Lists, Sets, Queues, Deques, Maps)
* Section 17: More with Collections (Limitation of Collections, Generics and Autoboxing, Soring/searching collections, comparable, comparator, type parameters and comparable/comparator)
* Section 18: Exception Handling (Throwable, Catching Exceptions, Finally, Exception Object, Unchecked/Checked. creating exceptions)

Now, you also have a co-faculty that has recently passed the 1Z0-808 Java SE8 exam and is also teaching other students to take it, and this is his curriculum/area of focus:

* Section 1: Java Basics (Introduction to Java Programming, Define the structure of a Java class, Create executable Java applications with a main method; run a Java program from the command line; produce console output, Importing Java Packages, Understanding scope variables, Laboratory: Running Java Program in Command Line using String args[], Guided Laboratory: Running Java program from the command line, Laboratory: Java Packages)
* Section 2: Working With Java Data Types (Declare and initialize variables, How to read or write to object fields, Difference of object reference variables and primitive variables, Understanding scope variables, Java Data Types, Activity: Declaring Local, Static, and Instance Variables in Java, Creating and Manipulating Strings, Object's Lifecycle, Wrapper Classes)
* Section 3: Using Operators and Decision Constructs (Java Operators and Order of Precedence, Testing Equality using Strings and Objects, If, If/else and Ternary Operator, Use a switch statement)
* Section 4: Creating and Using Arrays (One Dimensional Array, Multidimensional Array, ArrayList)
* Section 5: Looping (While loop, do-while loop, for loop, Break and Continue, Advanced Flow Control)
* Section 6: Working with Inheritance (Inheritance in Java, super. vs super(), Overriding a Method, Abstract Class, Interface in Java, Polymorphism)
* Section 7: Java Core API (Creating Strings in Java, StringBuilder, Dates, Time, and Period in Java, Writing Simple Lambdas in Java, ArrayList)
* Section 8: Handling Exceptions (Understanding Checked Exceptions, Unchecked Exceptions, and Errors, try, catch, and finally Statements, Methods that Throws Exception)
* Section 9: Methods and Encapsulation (Designing Methods in Java, Variable Arguments, Applying Access Modifiers, Static Methods and Fields in Java, Passing Data Among Methods, Overloading Methods in Java, Creating Constructors, Encapsulation in Java)


Task/Goal:
You want to make a comprehensive mock exam, answer/solution sheets and reviewers to mimic the 1Z0-808 Java SE8 exam.
Along with that, you also want to teach them all the basics about OOP (the four pillars), and other Java Nuances and programming concepts.
So your first step is to identify what are the topics/section you need to create the questions, answers, and reviewers for so you can systematically check the strength/weaknesses of your students on a particular topic.
Your goal is to make a list of topics based on the context and situation you have. You can also add more details/topics as you see fit.

Output/Format/Example:
Your output will be a list of JSON objects that represents the topics and their descriptions. For example:
[
    {
        "topicId": <integer starting at 1000>
        "topic": "<topic>",
        "description": "<description, limit to 2 sentences>" 
    },
    ...
]