[{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100000,"difficulty":"easy","type":"single","question":"Which component is responsible for converting Java bytecode into machine-specific code during execution?","choices":{"0":"JDK (Java Development Kit)","1":"JIT (Just-In-Time) Compiler","2":"javac (Java Compiler)","3":"JRE (Java Runtime Environment)"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100001,"difficulty":"easy","type":"single","question":"What is the primary purpose of the \\verb|javac| command?","choices":{"0":"To execute a Java application.","1":"To bundle a Java application into a JAR file.","2":"To compile a \\verb|.java| source file into a \\verb|.class| bytecode file.","3":"To start the Java Virtual Machine."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100002,"difficulty":"easy","type":"single","question":"Which of the following is the correct and most standard signature for the main method in a Java application?","choices":{"0":"\\verb|public static void main(String args[])|","1":"\\verb|public static int main(String[] args)|","2":"\\verb|public void main(String[] args)|","3":"\\verb|static public void main()|"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100003,"difficulty":"easy","type":"single","question":"What is the file extension of a compiled Java file?","choices":{"0":"\\verb|.java|","1":"\\verb|.jar|","2":"\\verb|.exe|","3":"\\verb|.class|"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100004,"difficulty":"easy","type":"single","question":"If you want to run a Java application, which of the following must be installed on the system?","choices":{"0":"Only the JDK","1":"The JRE or the JDK","2":"Only a text editor and the command line","3":"Only the JVM"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100005,"difficulty":"easy","type":"multiple","question":"Which of the following are components of the Java Development Kit (JDK)? (Choose all that apply)","choices":{"0":"JIT Compiler","1":"Java Compiler (javac)","2":"Java Virtual Machine (JVM)","3":"An application server like Tomcat","4":"Java Runtime Environment (JRE)"},"answers":["1","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100006,"difficulty":"medium","type":"single","question":"Given the following code:\n\\begin{verbatim}\npublic class Welcome {\n    public static void main(String[] args) {\n        System.out.println(\"Welcome to Java\");\n    }\n}\n\\end{verbatim}\nWhat is the result of compiling and running this code?","choices":{"0":"The code will not compile.","1":"The code will compile but will throw an error at runtime.","2":"The code will compile and print \"Welcome to Java\" to the console.","3":"The code will compile but print nothing to the console."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100007,"difficulty":"medium","type":"single","question":"What is the output of the following command, assuming \\verb|MyApp.java| exists and contains a valid main method?\n\\begin{verbatim}\njava MyApp.java\n\\end{verbatim}","choices":{"0":"It will compile and then run the application.","1":"It will print the source code of \\verb|MyApp.java|.","2":"It will throw an error because the \\verb|java| command requires a class name, not a file name.","3":"It will run the application directly from the source file (a feature since Java 11)."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100008,"difficulty":"medium","type":"single","question":"You have a file named \\verb|Test.java|:\n\\begin{verbatim}\npublic class test {\n    public static void main(String[] args) {\n        System.out.println(\"Test\");\n    }\n}\n\\end{verbatim}\nWhat happens when you try to compile this file with \\verb|javac Test.java|?","choices":{"0":"It compiles successfully, creating \\verb|test.class|.","1":"It compiles successfully, creating \\verb|Test.class|.","2":"It fails to compile because the class name \\verb|test| does not match the filename \\verb|Test.java|.","3":"It fails to compile because of a syntax error in the main method."},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100009,"difficulty":"medium","type":"single","question":"Consider the code:\n\\begin{verbatim}\npublic class Runner {\n    public static void main(String... a) {\n        System.out.println(a[0]);\n    }\n}\n\\end{verbatim}\nWhat is the result of running the class with the command: \\verb|java Runner Hello World|?","choices":{"0":"It prints \\verb|Hello|.","1":"It prints \\verb|World|.","2":"It prints \\verb|Hello World|.","3":"It throws an \\verb|ArrayIndexOutOfBoundsException|."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100010,"difficulty":"medium","type":"single","question":"What is the primary role of the Java classpath?","choices":{"0":"To specify the location of the \\verb|java.exe| executable.","1":"To specify the location of source \\verb|.java| files for compilation.","2":"To specify the location where the JVM should look for user-defined classes and packages.","3":"To specify the version of the JDK to use for compilation."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100011,"difficulty":"medium","type":"single","question":"What is the result of the following code?\n\\begin{verbatim}\npublic class Main {\n    public static void main(String[] args) {\n        // My first Java program\n        System.out.println(\"Hello\");\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation error because of the comment.","1":"Prints \\verb|// My first Java program|","2":"Prints \\verb|Hello|","3":"Runtime error."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100012,"difficulty":"medium","type":"single","question":"Which statement best describes the relationship between JDK, JRE, and JVM?","choices":{"0":"JVM contains JRE, which contains JDK.","1":"JDK contains JRE, which contains JVM.","2":"JRE contains JDK, which contains JVM.","3":"JDK, JRE, and JVM are all separate and independent of each other."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100013,"difficulty":"medium","type":"single","question":"Which of these is NOT a valid Java identifier?","choices":{"0":"\\verb|_myVariable|","1":"\\verb|$amount|","2":"\\verb|my-variable|","3":"\\verb|top_of_page|"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100014,"difficulty":"medium","type":"single","question":"A Java source file contains two classes, \\verb|A| and \\verb|B|. Class \\verb|A| is public. What must the name of the source file be?","choices":{"0":"\\verb|A.java|","1":"\\verb|B.java|","2":"It can be named anything.","3":"\\verb|AB.java|"},"answers":["0"],"attempts":1,"attempted":true,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100015,"difficulty":"medium","type":"single","question":"What happens if a semicolon is omitted at the end of a Java statement?","choices":{"0":"A runtime error occurs.","1":"The code is automatically corrected by the JVM.","2":"A compilation error occurs.","3":"The program runs but with unpredictable results."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100016,"difficulty":"medium","type":"single","question":"Given the command: \\verb|java com.example.Main arg1 arg2|, what is the value of \\verb|args.length| inside the main method?","choices":{"0":"0","1":"1","2":"2","3":"3"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100017,"difficulty":"medium","type":"multiple","question":"Which of the following are valid declarations for the main method? (Choose all that apply)","choices":{"0":"\\verb|public static void main(String[] arguments)|","1":"\\verb|static public void main(String[] args)|","2":"\\verb|public static final void main(String[] args)|","3":"\\verb|public static void main(String... options)|","4":"\\verb|private static void main(String[] args)|"},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100018,"difficulty":"medium","type":"multiple","question":"Which statements about Java's platform independence are true? (Choose all that apply)","choices":{"0":"Java source code can be run on any platform without compilation.","1":"Java bytecode, generated by the compiler, can run on any platform with a compatible JVM.","2":"The JVM is platform-dependent, and a specific JVM is needed for each OS.","3":"The JDK is platform-independent."},"answers":["1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100019,"difficulty":"medium","type":"multiple","question":"Which of the following are reserved keywords in Java? (Choose all that apply)","choices":{"0":"\\verb|goto|","1":"\\verb|main|","2":"\\verb|const|","3":"\\verb|String|","4":"\\verb|transient|"},"answers":["0","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100020,"difficulty":"medium","type":"multiple","question":"Select all true statements about the Java execution process. (Choose all that apply)","choices":{"0":"The `java` command starts the Java Runtime Environment.","1":"Bytecode is a low-level language that is understood directly by the CPU.","2":"The JVM interprets bytecode.","3":"An object's `main` method is called to start the program."},"answers":["0","2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100021,"difficulty":"hard","type":"single","question":"Consider the following directory structure and files:\n\\begin{verbatim}\n/project\n    /src\n        /com\n            /example\n                MyClass.java\n    /bin\n\\end{verbatim}\nThe file \\verb|MyClass.java| contains:\n\\begin{verbatim}\npackage com.example;\n\npublic class MyClass {\n    public static void main(String[] args) {\n        System.out.println(\"Running MyClass\");\n    }\n}\n\\end{verbatim}\nYou are currently in the \\verb|/project| directory. Which sequence of commands will successfully compile and run \\verb|MyClass|?","choices":{"0":"\\begin{verbatim}\njavac src/com/example/MyClass.java\njava -cp src com.example.MyClass\n\\end{verbatim}","1":"\\begin{verbatim}\njavac src/com/example/MyClass.java\njava -cp bin com.example.MyClass\n\\end{verbatim}","2":"\\begin{verbatim}\njavac -d bin src/com/example/MyClass.java\njava -cp bin com.example.MyClass\n\\end{verbatim}","3":"\\begin{verbatim}\njavac -d bin src/com/example/MyClass.java\njava com.example.MyClass\n\\end{verbatim}"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100022,"difficulty":"hard","type":"single","question":"Given the code:\n\\begin{verbatim}\npublic class App {\n    public static void main(String[] args) {\n        System.out.println(args[1]);\n    }\n}\n\\end{verbatim}\nAnd the command: \\verb|java App launch|\nWhat is the result?","choices":{"0":"The code does not compile.","1":"It prints \\verb|launch|.","2":"It prints nothing.","3":"It throws an \\verb|ArrayIndexOutOfBoundsException| at runtime."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100023,"difficulty":"hard","type":"single","question":"A single file named \\verb|Dual.java| contains the following code:\n\\begin{verbatim}\nclass A {\n    public static void main(String[] args) { System.out.println(\"A\"); }\n}\npublic class B {\n    public static void main(String[] args) { System.out.println(\"B\"); }\n}\n\\end{verbatim}\nWhat is the result of attempting to compile \\verb|Dual.java|?","choices":{"0":"A compilation error occurs because only one public class is allowed per source file.","1":"It compiles successfully, creating \\verb|A.class| and \\verb|B.class|.","2":"A compilation error occurs because class \\verb|B| should be in \\verb|B.java|.","3":"A compilation error occurs because class \\verb|A| is not public."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100024,"difficulty":"hard","type":"single","question":"What is the result of compiling and running the following class?\n\\begin{verbatim}\npublic class Test {\n    static {\n        System.out.print(\"Static block. \");\n    }\n\n    public static void main(String[] args) {\n        System.out.print(\"Main method.\");\n    }\n}\n\\end{verbatim}","choices":{"0":"Main method.","1":"Static block. Main method.","2":"Main method. Static block.","3":"Compilation fails."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100025,"difficulty":"hard","type":"single","question":"You have a class \\verb|com.app.Main| in a compiled JAR file \\verb|app.jar|. Which command correctly runs this class?","choices":{"0":"\\verb|java app.jar com.app.Main|","1":"\\verb|java -jar com.app.Main app.jar|","2":"\\verb|java -cp app.jar com.app.Main|","3":"\\verb|java com.app.Main -cp app.jar|"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100026,"difficulty":"hard","type":"single","question":"A source file contains a single class in the default package. You compile it from its directory. How do you run the resulting .class file from its parent directory?","choices":{"0":"\\verb|java MyClass|","1":"\\verb|java -cp . MyClass|","2":"\\verb|java -cp .. MyClass|","3":"\\verb|java -cp childDir MyClass|"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100027,"difficulty":"hard","type":"multiple","question":"Which of the following statements are true? (Choose all that apply)","choices":{"0":"A single \\verb|.java| file can contain multiple public classes.","1":"A single \\verb|.java| file can contain multiple non-public classes.","2":"If a class is in a package \\verb|com.app|, its source file must be in a directory structure \\verb|com/app|.","3":"import \\verb|java.util.*;| imports all classes and sub-packages of \\verb|java.util|.","4":"The \\verb|main| method must be declared inside a public class."},"answers":["1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100028,"difficulty":"hard","type":"multiple","question":"You are in the directory \\verb|/root|. You have the following files:\n\\verb|/root/com/example/App.java|\n\\verb|/root/lib/helper.jar|\nThe class \\verb|App| depends on a class inside \\verb|helper.jar|. Which command(s) will successfully compile \\verb|App.java|? (Choose all that apply)","choices":{"0":"\\verb|javac -cp lib/helper.jar com/example/App.java|","1":"\\verb|javac -classpath lib/helper.jar com/example/App.java|","2":"\\verb|javac com/example/App.java -cp lib/helper.jar|","3":"\\verb|javac -cp lib/helper.jar;com/example/App.java|","4":"\\verb|javac -d . -cp lib/helper.jar com/example/App.java|"},"answers":["0","1","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100029,"difficulty":"hard","type":"multiple","question":"Which of these are valid command line argument arrays in a main method signature? (Choose all that apply)","choices":{"0":"\\verb|String args[]|","1":"\\verb|String... args|","2":"\\verb|String[] myArgs|","3":"\\verb|String[] _args|","4":"\\verb|String..._args|"},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100100,"difficulty":"easy","type":"single","question":"Which is the required access modifier for the `main` method to be the entry point of an application?","choices":{"0":"private","1":"protected","2":"public","3":"No access modifier is needed."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100101,"difficulty":"easy","type":"single","question":"In the standard main method signature `public static void main(String[] args)`, what does the `static` keyword signify?","choices":{"0":"The method can be called without creating an instance of the class.","1":"The method can never be changed.","2":"The method belongs only to a subclass.","3":"The method will be shared across all threads."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100102,"difficulty":"easy","type":"single","question":"What is the correct data type for the parameter of the `main` method?","choices":{"0":"An array of Objects","1":"An array of Characters","2":"An array of Integers","3":"An array of Strings"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100103,"difficulty":"easy","type":"single","question":"If an application is executed with the command: `java MyApp first`, what is the value of `args.length` inside the `main` method?","choices":{"0":"0","1":"1","2":"2","3":"It will cause a compilation error."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100104,"difficulty":"easy","type":"single","question":"What is the mandatory return type of a valid `main` method?","choices":{"0":"int","1":"String","2":"void","3":"Object"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100105,"difficulty":"easy","type":"multiple","question":"Which of the following are valid ways to declare the parameter for a `main` method? (Choose all that apply)","choices":{"0":"`String[] args`","1":"`String args[]`","2":"`String... args`","3":"`String[]`"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100106,"difficulty":"medium","type":"single","question":"Given the following class:\n\\begin{verbatim}\npublic class Greeter {\n    public static void main(String[] args) {\n        System.out.println(\"Hello \" + args[0]);\n    }\n}\n\\end{verbatim}\nWhat is the result of running it with the command: `java Greeter`?","choices":{"0":"The code fails to compile.","1":"It prints \"Hello\".","2":"It prints \"Hello null\".","3":"It throws an `ArrayIndexOutOfBoundsException` at runtime."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100107,"difficulty":"medium","type":"single","question":"What is the output of the following code when run with the command: `java Test alpha beta gamma`?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(args[args.length - 1]);\n    }\n}\n\\end{verbatim}","choices":{"0":"alpha","1":"beta","2":"gamma","3":"The code throws an exception."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100108,"difficulty":"medium","type":"single","question":"Given the command: `java Runner \"1 2\" 3`. What is the value of `args.length`?","choices":{"0":"1","1":"2","2":"3","3":"4"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100109,"difficulty":"medium","type":"single","question":"Consider the following class:\n\\begin{verbatim}\npublic class NoMain {\n    public void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n}\n\\end{verbatim}\nWhat happens when you try to execute this class using `java NoMain`?","choices":{"0":"It compiles and runs, printing \"Hello\".","1":"It fails to compile.","2":"It compiles but throws a runtime error indicating the `main` method is not static.","3":"It compiles but prints nothing."},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100110,"difficulty":"medium","type":"single","question":"What is the result of executing the following class?\n\\begin{verbatim}\npublic class Echo {\n    public static void main(String[] args) {\n        System.out.println(args.getClass().getSimpleName());\n    }\n}\n\\end{verbatim}","choices":{"0":"String","1":"String[]","2":"Array","3":"Object[]"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100111,"difficulty":"medium","type":"single","question":"A class has a method declared as `public static int main(String[] args)`. What happens when the JVM attempts to execute this class?","choices":{"0":"The class runs successfully and returns an exit code.","1":"The class fails to compile.","2":"The class compiles, but the JVM cannot find the main method and throws a `NoSuchMethodError`.","3":"The class compiles, but a `NumberFormatException` is thrown at runtime."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100112,"difficulty":"medium","type":"single","question":"How are command line arguments like `10` and `20` passed to the `main` method?","choices":{"0":"As integer primitives (`int`).","1":"As `Integer` wrapper objects.","2":"As `String` objects.","3":"As `char` arrays."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100113,"difficulty":"medium","type":"single","question":"Which change would make the following code executable by the JVM?\n\\begin{verbatim}\npublic class MyApp {\n    void main(String... args) {\n        System.out.println(\"Running...\");\n    }\n}\n\\end{verbatim}","choices":{"0":"Add the `static` keyword to the method.","1":"Change the return type to `int`.","2":"Change the parameter type to `String[]`.","3":"Make the class `final`."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100114,"difficulty":"medium","type":"single","question":"What is the output of this program if run with `java Main`?\n\\begin{verbatim}\npublic class Main {\n    public static void main(String[] args) {\n        if (args.length == 0) {\n            System.out.println(\"No arguments\");\n        } else {\n            System.out.println(args.length + \" arguments\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"0 arguments","1":"No arguments","2":"A `NullPointerException` is thrown.","3":"The code does not compile."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100115,"difficulty":"medium","type":"single","question":"Consider this code:\n\\begin{verbatim}\npublic class Logic {\n    public static void main(String... logic) {\n        System.out.println(logic[1]);\n    }\n}\n\\end{verbatim}\nWhat is the result of running `java Logic true false`?","choices":{"0":"true","1":"false","2":"Compilation fails due to the parameter name `logic`.","3":"An `ArrayIndexOutOfBoundsException` is thrown."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100116,"difficulty":"medium","type":"single","question":"A class has a main method declared as `protected static void main(String[] a)`. What happens when you attempt to run it?","choices":{"0":"It runs successfully.","1":"It fails to compile.","2":"It compiles but throws an `IllegalAccessException` at runtime.","3":"It compiles but the JVM reports that the `main` method is not found."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100117,"difficulty":"medium","type":"multiple","question":"Given the command `java Calculator 10 + 20`, which of the following statements are true inside the `main` method? (Choose all that apply)","choices":{"0":"`args.length` is 3.","1":"`args[0]` is the string \"10\".","2":"`args[1]` is the character `'+'`.","3":"`args[0] + args[2]` results in the string \"1020\".","4":"`args.length` is 1."},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100118,"difficulty":"medium","type":"multiple","question":"Which of the following are valid `main` method signatures that the JVM will recognize as an application entry point? (Choose all that apply)","choices":{"0":"`public static void main(String... arguments)`","1":"`static public void main(String[] args)`","2":"`public static final void main(String[] data)`","3":"`public void main(String[] args)`","4":"`public static String main(String[] args)`"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100119,"difficulty":"medium","type":"multiple","question":"A class has multiple methods named `main` as shown below. Which statements are true? (Choose all that apply)\n\\begin{verbatim}\npublic class Overload {\n    public static void main(String[] args) { System.out.println(\"String[]\"); }\n    public static void main(int[] args) { System.out.println(\"int[]\"); }\n    public static void main(String arg1, String arg2) { System.out.println(\"two Strings\"); }\n}\n\\end{verbatim}","choices":{"0":"The code will not compile due to duplicate method names.","1":"Running `java Overload` will print \"String[]\".","2":"Running `java Overload` will print \"int[]\".","3":"The code is an example of valid method overloading."},"answers":["1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100120,"difficulty":"medium","type":"multiple","question":"Given this class:\n\\begin{verbatim}\npublic class ArgCheck {\n    public static void main(String[] args) {\n        System.out.println(args[0]);\n    }\n}\n\\end{verbatim}\nWhich of the following commands will cause an `ArrayIndexOutOfBoundsException`? (Choose all that apply)","choices":{"0":"`java ArgCheck`","1":"`java ArgCheck \"\"`","2":"`java ArgCheck null`","3":"`java ArgCheck ' '`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100121,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\npublic class TrickyMain {\n    public static void main(String args) {\n        System.out.println(\"Hello\");\n    }\n}\n\\end{verbatim}","choices":{"0":"It compiles and runs, printing \"Hello\".","1":"It fails to compile because the `main` parameter is not an array.","2":"It compiles, but at runtime the JVM reports that `main` is not found.","3":"It compiles and runs, but `args` is null."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100122,"difficulty":"hard","type":"single","question":"Consider the code:\n\\begin{verbatim}\npublic class Calculator {\n    public static void main(String[] args) {\n        System.out.println(args[0] + args[1]);\n    }\n}\n\\end{verbatim}\nWhat is the output when run with command: `java Calculator 5 10`?","choices":{"0":"15","1":"510","2":"A `NumberFormatException` is thrown.","3":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100123,"difficulty":"hard","type":"single","question":"File `App.java` contains:\n\\begin{verbatim}\nclass App {\n    public static void main(String... args) {\n        System.out.println(\"Runnable\");\n    }\n}\n\\end{verbatim}\nWhat is the result of compiling with `javac App.java` and then running with `java App`?","choices":{"0":"The code fails to compile because the class `App` is not public.","1":"It compiles but fails to run because the class `App` is not public.","2":"It compiles and runs, printing \"Runnable\".","3":"It compiles but throws a `SecurityException` at runtime."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100124,"difficulty":"hard","type":"single","question":"An abstract class is defined as follows:\n\\begin{verbatim}\nabstract class AbstractRunner {\n    public static void main(String[] args) {\n        System.out.println(\"Running from abstract class\");\n    }\n}\n\\end{verbatim}\nWhat is the outcome of compiling and executing `java AbstractRunner`?","choices":{"0":"Compilation fails.","1":"An `InstantiationException` is thrown at runtime.","2":"An `AbstractMethodError` is thrown at runtime.","3":"It compiles and runs successfully, printing the message."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100125,"difficulty":"hard","type":"single","question":"Consider the following code:\n\\begin{verbatim}\npackage com.test;\npublic class Runner {\n    public static void main(String[] args) {\n        System.out.println(\"OK\");\n    }\n}\n\\end{verbatim}\nAfter compiling with `javac -d . com/test/Runner.java`, you are in the `com/test` directory. You execute `java Runner`. What is the result?","choices":{"0":"It prints \"OK\".","1":"A `ClassNotFoundException` is thrown.","2":"A `NoClassDefFoundError` is thrown.","3":"A `SecurityException` is thrown."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100126,"difficulty":"hard","type":"single","question":"What is the result of the following code when run with `java Main 1`?\n\\begin{verbatim}\npublic class Main {\n    public static void main(String[] args) {\n        String s = args[0];\n        main(s);\n    }\n    public static void main(String arg) {\n        System.out.println(\"Arg is \" + arg);\n    }\n}\n\\end{verbatim}","choices":{"0":"The code does not compile.","1":"A `StackOverflowError` is thrown.","2":"It prints \"Arg is 1\".","3":"The JVM cannot find the main method to start the program."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100127,"difficulty":"hard","type":"multiple","question":"Which of the following `main` method signatures will cause a `java.lang.NoSuchMethodError: main` exception at runtime, assuming the class is compiled successfully? (Choose all that apply)","choices":{"0":"`public static void main(String... args)`","1":"`public void main(String[] args)`","2":"`public static void Main(String[] args)`","3":"`public static void main(String args)`","4":"`public static int main(String[] args)`"},"answers":["1","2","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100128,"difficulty":"hard","type":"multiple","question":"Given the file `Worker.java`:\n\\begin{verbatim}\npublic class Worker {\n    public static void main(String[] args) {\n        if (args.length > 0) {\n            int val = Integer.parseInt(args[0]);\n            System.out.println(\"Value: \" + val);\n        }\n    }\n}\n\\end{verbatim}\nWhich of the following commands will run without throwing an exception? (Choose all that apply)","choices":{"0":"`java Worker`","1":"`java Worker 10`","2":"`java Worker 2.5`","3":"`java Worker \" 30 \"`","4":"`java Worker ten`"},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100129,"difficulty":"hard","type":"multiple","question":"A class `com.app.Starter` exists. The current directory is `/projects/`. The compiled class is at `/projects/bin/com/app/Starter.class`. Which commands, run from `/projects/`, will successfully execute the application? (Choose all that apply)","choices":{"0":"`java -cp bin com.app.Starter`","1":"`java -classpath bin com.app.Starter`","2":"`java bin.com.app.Starter`","3":"`cd bin; java com.app.Starter`"},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100200,"difficulty":"easy","type":"single","question":"Which keyword is used at the beginning of a source file to place its class into a package?","choices":{"0":"import","1":"package","2":"classpath","3":"export"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100201,"difficulty":"easy","type":"single","question":"Which of the following `import` statements makes the `ArrayList` class available in your code without needing to use its fully qualified name?","choices":{"0":"import java.util;","1":"import java.util.ArrayList;","2":"import java.util.*;","3":"import java.ArrayList;"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100202,"difficulty":"easy","type":"single","question":"If a class named `MyTool` is in the package `com.company.tools`, what is its fully qualified class name?","choices":{"0":"MyTool","1":"com.company.tools","2":"com.company.tools.MyTool","3":"tools.MyTool"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100203,"difficulty":"easy","type":"single","question":"What is the primary purpose of creating a JAR (Java Archive) file?","choices":{"0":"To compile Java source code.","1":"To bundle multiple files (like `.class` files and resources) into a single archive for distribution and deployment.","2":"To document Java code automatically.","3":"To run the garbage collector."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100204,"difficulty":"easy","type":"single","question":"The `javac` compiler flag used to specify where to place generated `.class` files is:","choices":{"0":"-c","1":"-cp","2":"-d","3":"-o"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100205,"difficulty":"easy","type":"multiple","question":"Which of the following are true about the `package` statement in a Java source file? (Choose all that apply)","choices":{"0":"It is optional.","1":"It must be the first non-comment line of code.","2":"A file can have multiple package statements.","3":"The package name typically reflects the directory structure."},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100206,"difficulty":"medium","type":"single","question":"What is the result of the import statement `import java.util.*;`?","choices":{"0":"It imports all classes from the `java.util` package and all its subpackages.","1":"It imports all classes from the `java.util` package only.","2":"It causes a compilation error because importing all classes is not allowed.","3":"It is functionally identical to `import java.util.ArrayList;` and `import java.util.List;`."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100207,"difficulty":"medium","type":"single","question":"A class `Alpha` is in the package `p1`. Another class `Beta` is in the package `p2`. `Beta` needs to use `Alpha`. `Beta.java` has the line `import p1.Alpha;`. What happens during compilation of `Beta.java` if the compiler cannot find `p1/Alpha.class`?","choices":{"0":"It compiles successfully, but will fail at runtime.","1":"It compiles successfully, creating a placeholder for the missing class.","2":"It fails to compile with an error like 'package p1 does not exist' or 'cannot find symbol'.","3":"It generates a warning but compilation succeeds."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100208,"difficulty":"medium","type":"single","question":"Which command correctly creates a JAR file named `app.jar` containing all `.class` files from the current directory?","choices":{"0":"`jar -c app.jar .class`","1":"`jar -cf app.jar *.class`","2":"`jar -make app.jar *.class`","3":"`jar -cvf app.jar -C . .`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100209,"difficulty":"medium","type":"single","question":"You have a class in a named package `com.app`. Can this class import a class that is in the default package?","choices":{"0":"Yes, using `import MyClass;`.","1":"Yes, it is imported automatically.","2":"No, a class in a named package cannot access a class in the default package.","3":"Yes, using `import default.MyClass;`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100210,"difficulty":"medium","type":"single","question":"Given a source file with these two imports:\n\\begin{verbatim}\nimport java.util.Date;\nimport java.sql.Date;\n\\end{verbatim}\nWhat is the result?","choices":{"0":"A compilation error occurs due to the ambiguous `Date` class.","1":"`java.util.Date` takes precedence.","2":"`java.sql.Date` takes precedence.","3":"The code compiles, but a runtime error will occur if `Date` is used."},"answers":["0"],"attempts":1,"attempted":true,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100211,"difficulty":"medium","type":"single","question":"What is the purpose of the `Main-Class` attribute in a JAR file's manifest?","choices":{"0":"To specify the version of the main class.","1":"To allow the JAR to be executed using the `java -jar` command by specifying the entry point class.","2":"To list all the classes in the JAR file.","3":"To set the classpath for the classes inside the JAR."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100212,"difficulty":"medium","type":"single","question":"Which command correctly runs the `main` method in class `com.app.Main`, which is located inside `myapp.jar`?","choices":{"0":"`java myapp.jar com.app.Main`","1":"`java -jar myapp.jar com.app.Main`","2":"`java -cp myapp.jar com.app.Main`","3":"`java com.app.Main -jar myapp.jar`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100213,"difficulty":"medium","type":"single","question":"The package `java.lang` is special because:","choices":{"0":"It cannot be imported.","1":"It is automatically imported into every Java source file.","2":"It contains only interfaces.","3":"It can only be used by classes in the default package."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100214,"difficulty":"medium","type":"single","question":"On a Windows system, what is the correct character to separate multiple directories or JARs in a classpath?","choices":{"0":"A colon (`:`)","1":"A semicolon (`;`)","2":"A forward slash (`/`)","3":"A comma (`,`) "},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100215,"difficulty":"medium","type":"single","question":"If you use a static import like `import static java.lang.Math.sqrt;`, how would you call the `sqrt` method in your code?","choices":{"0":"`Math.sqrt(25.0)`","1":"`sqrt(25.0)`","2":"`java.lang.Math.sqrt(25.0)`","3":"Static import is not allowed for methods."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100216,"difficulty":"medium","type":"single","question":"You have compiled your `com.app.Main` class into the `build/classes` directory. You are in the project root directory. Which command runs the application?","choices":{"0":"`java com.app.Main`","1":"`java build/classes/com/app/Main`","2":"`java -cp build/classes com.app.Main`","3":"`java -cp build/classes com.app.Main.class`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100217,"difficulty":"medium","type":"multiple","question":"Which of the following statements about the Java classpath are true? (Choose all that apply)","choices":{"0":"The classpath tells the JVM where to find user-defined classes.","1":"The order of entries in the classpath matters.","2":"The classpath can include directories and JAR files.","3":"If the classpath is not set, the JVM only searches the `java.lang` package.","4":"The `-cp` and `-classpath` flags are interchangeable."},"answers":["0","1","2","4"],"attempts":1,"attempted":true,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100218,"difficulty":"medium","type":"multiple","question":"Which are valid commands for compiling `MyClass.java`, located in package `com.test`, into the `bin` directory? (Assume you are in the project root containing `src` and `bin`). (Choose all that apply)","choices":{"0":"`javac -d bin src/com/test/MyClass.java`","1":"`cd src; javac -d ../bin com/test/MyClass.java`","2":"`javac -d bin MyClass.java`","3":"`javac -cp src -d bin com/test/MyClass.java`"},"answers":["0","1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100219,"difficulty":"medium","type":"multiple","question":"Which of the following are benefits of using packages in Java? (Choose all that apply)","choices":{"0":"They help prevent naming conflicts.","1":"They improve code performance at runtime.","2":"They provide a mechanism for access control (e.g., default access).","3":"They make it easier to locate and use related classes."},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100220,"difficulty":"medium","type":"multiple","question":"You have a project structure:\n\\begin{verbatim}\n/app\n  /classes\n    /com/corp/Util.class\n  /lib\n    /common.jar\n\\end{verbatim}\nFrom the `/app` directory, which commands correctly set the classpath to include both `Util.class` and the contents of `common.jar`? (Assume a Linux/macOS environment). (Choose all that apply)","choices":{"0":"`java -cp classes:lib/common.jar ...`","1":"`java -cp classes;lib/common.jar ...`","2":"`java -cp common.jar:classes ...`","3":"`java -cp . ...`"},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100221,"difficulty":"hard","type":"single","question":"File `App.java` is in `/src/com/example` and contains `package com.example;`. File `Util.java` is in `/src/com/utils` and contains `package com.utils;`. `App` uses `Util`. From `/`, which command correctly compiles `App.java`?","choices":{"0":"`javac -d build src/com/example/App.java`","1":"`javac -d build -cp src src/com/example/App.java`","2":"`cd src/com/example; javac -d ../../build App.java`","3":"`javac -d build src/com/example/App.java src/com/utils/Util.java`"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100222,"difficulty":"hard","type":"single","question":"You are in the directory `/app/bin/com/corp/`, which contains `Main.class`. The class is declared in package `com.corp`. You run `java Main`. What is the result?","choices":{"0":"The program runs successfully.","1":"A `ClassNotFoundException` is thrown.","2":"A `NoClassDefFoundError` is thrown with a message about `com/corp/Main` being found in the wrong place.","3":"A `SecurityException` is thrown."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100223,"difficulty":"hard","type":"single","question":"The classpath is set to `-cp dirA:dirB`. `dirA` contains `com/test/Tool.class` version 1. `dirB` contains `com/test/Tool.class` version 2. A program uses `com.test.Tool`. Which version of the class will be loaded by the JVM?","choices":{"0":"Version 1 from `dirA`.","1":"Version 2 from `dirB`.","2":"A compilation error will occur.","3":"A runtime error will occur due to the conflict."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100224,"difficulty":"hard","type":"single","question":"You execute a program with `java -jar myapp.jar`. The manifest file inside `myapp.jar` contains the line `Class-Path: lib/utils.jar`. The JVM will:","choices":{"0":"Ignore the `Class-Path` attribute in the manifest.","1":"Automatically add `lib/utils.jar` to the classpath.","2":"Throw an error because `Class-Path` is not a valid manifest attribute.","3":"Only use `lib/utils.jar` if the `-cp` flag is also specified."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100225,"difficulty":"hard","type":"single","question":"A source file contains the following imports:\n\\begin{verbatim}\nimport static java.lang.Integer.*;\nimport static java.lang.Long.*;\n\\end{verbatim}\nThe code then attempts to call `MAX_VALUE`. What is the result?","choices":{"0":"`Integer.MAX_VALUE` is used.","1":"`Long.MAX_VALUE` is used.","2":"The code fails to compile due to an ambiguous reference.","3":"The code compiles but fails at runtime."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100226,"difficulty":"hard","type":"single","question":"What happens if a `package-info.java` file contains a class declaration?","choices":{"0":"The class is associated with the package as metadata.","1":"It is treated like any other class in the package.","2":"A compilation error occurs.","3":"A runtime error occurs when the package is loaded."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100227,"difficulty":"hard","type":"multiple","question":"Which of the following statements about `import` declarations are true? (Choose all that apply)","choices":{"0":"`import` statements are required to use any class outside the current package.","1":"A static import can import all static members of a class using a wildcard (`*`).","2":"Importing a package, such as `java.util.*`, also imports its subpackages, like `java.util.concurrent`.","3":"Importing a class with the same simple name from two different packages requires one of them to be referred to by its fully qualified name.","4":"`import` statements increase the size of the final `.class` file."},"answers":["1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100228,"difficulty":"hard","type":"multiple","question":"You have an executable JAR `app.jar` with `Main-Class: com.corp.Main`. You run it with the command: `java -cp lib.jar -jar app.jar`. Which statements are true? (Choose all that apply)","choices":{"0":"The `main` method in `com.corp.Main` will be executed.","1":"The `lib.jar` will be added to the application's classpath.","2":"The `-cp` argument will be ignored.","3":"If `app.jar`'s manifest has a `Class-Path` attribute, it will be used.","4":"The command will fail because `-cp` and `-jar` cannot be used together."},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100229,"difficulty":"hard","type":"multiple","question":"Given the file `pkg/A.java`:\n\\begin{verbatim}\npackage pkg;\npublic class A {\n    public void print() { System.out.println(\"A\"); }\n}\n\\end{verbatim}\nAnd the file `B.java`:\n\\begin{verbatim}\nimport pkg.A;\npublic class B {\n    public static void main(String[] args) {\n        A a = new A();\n        a.print();\n    }\n}\n\\end{verbatim}\nFrom the project root, which command sequences will compile and run the code successfully? (Assume Linux/macOS). (Choose all that apply)","choices":{"0":"`javac pkg/A.java B.java; java B`","1":"`javac -d . pkg/A.java B.java; java B`","2":"`javac B.java; java B` (assuming `pkg/A.class` already exists)","3":"`javac pkg/A.java B.java; java -cp . B`","4":"`javac B.java; java -cp . B` (assuming `pkg/A.class` does not exist)"},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100300,"difficulty":"easy","type":"single","question":"According to standard Java naming conventions, which of the following is the most appropriate name for a class that represents a user's account?","choices":{"0":"userAccount","1":"UserAccount","2":"USER_ACCOUNT","3":"user_account"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100301,"difficulty":"easy","type":"single","question":"Which of the following correctly represents the standard Java naming convention for a `static final` constant variable that holds the maximum number of login attempts?","choices":{"0":"maxLoginAttempts","1":"MaxLoginAttempts","2":"MAX_LOGIN_ATTEMPTS","3":"max_login_attempts"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100302,"difficulty":"easy","type":"single","question":"What is the primary purpose of comments starting with `/**` and ending with `*/`?","choices":{"0":"To provide comments that are ignored by both the compiler and the Javadoc tool.","1":"To create multi-line comments that can be nested.","2":"To be processed by the `javadoc` tool to generate API documentation.","3":"To comment out code for debugging purposes, as it provides better visibility than `//`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100303,"difficulty":"easy","type":"single","question":"Which syntax is used for a single-line comment in Java?","choices":{"0":"`/* ... */`","1":"`# ...`","2":"``","3":"`// ...`"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100304,"difficulty":"easy","type":"single","question":"According to Java conventions, how should a package name be formatted?","choices":{"0":"Using UpperCamelCase, like `ComExampleProject`.","1":"Using lowercase letters with dots as separators, like `com.example.project`.","2":"Using lowercase letters with underscores, like `com_example_project`.","3":"Using screaming snake case, like `COM_EXAMPLE_PROJECT`."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100305,"difficulty":"easy","type":"multiple","question":"Which of the following are standard Javadoc block tags? (Choose all that apply)","choices":{"0":"`@param`","1":"`@return`","2":"`@author`","3":"`@review`","4":"`@exception`"},"answers":["0","1","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100306,"difficulty":"medium","type":"single","question":"What is the result of compiling and running the following code?\n\\begin{verbatim}\npublic class Greeter {\n    public static void main(String[] args) {\n        // The line below is a greeting\n        System.out.println(\"Hello /* World */\");\n    }\n}\n\\end{verbatim}","choices":{"0":"The code will not compile.","1":"It compiles and prints `Hello`.","2":"It compiles and prints `Hello World`.","3":"It compiles and prints `Hello /* World */`."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100307,"difficulty":"medium","type":"single","question":"Consider the following code snippet:\n\\begin{verbatim}\npublic class Calculator {\n    /**\n     * Adds two integers.\n     * @param num1 The first number.\n     * @param num2 The second number.\n     * @return The sum of num1 and num2.\n     */\n    public int add(int num1, int num2) {\n        /** This is an inner Javadoc-style comment */\n        return num1 + num2;\n    }\n}\n\\end{verbatim}\nWhat is the significance of the comment `/** This is an inner Javadoc-style comment */` inside the `add` method?","choices":{"0":"It causes a compilation error because Javadoc comments cannot be placed inside methods.","1":"The `javadoc` tool will associate this comment with the `return` statement.","2":"It is treated by the compiler as a regular multi-line comment and is ignored by the `javadoc` tool.","3":"It generates a warning during compilation."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100308,"difficulty":"medium","type":"single","question":"Which of the following statements about Java comments is true?","choices":{"0":"Single-line comments (`//`) can be nested within multi-line comments (`/* */`).","1":"Multi-line comments (`/* */`) can be nested within other multi-line comments.","2":"Javadoc comments (`/** */`) can be nested within multi-line comments (`/* */`).","3":"All comments are processed by the compiler to optimize the code."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100309,"difficulty":"medium","type":"single","question":"Review the following class definition:\n\\begin{verbatim}\npackage com.test;\n\npublic class DataProcessor {\n    private int Record_Count;\n    public static final double PI_VALUE = 3.14;\n    public void processData() { /* ... */ }\n}\n\\end{verbatim}\nWhich identifier violates standard Java naming conventions?","choices":{"0":"`com.test`","1":"`DataProcessor`","2":"`Record_Count`","3":"`PI_VALUE`","4":"`processData`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100310,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        int x = 10;\n        /* x = 20; \n           System.out.println(\"Inside comment\"); */\n        x = 30;\n        // x = 40;\n        System.out.println(x);\n    }\n}\n\\end{verbatim}","choices":{"0":"10","1":"20","2":"30","3":"40"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100311,"difficulty":"medium","type":"single","question":"Which Javadoc tag is used to indicate that a method or class is outdated and may be removed in a future version?","choices":{"0":"`@obsolete`","1":"`@deprecated`","2":"`@version`","3":"`@legacy`"},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100312,"difficulty":"medium","type":"single","question":"Consider the method signature: `public String format(Object data) throws IllegalArgumentException`. Which is the most complete and correctly formatted Javadoc comment for it?","choices":{"0":"\\begin{verbatim}\n/** \n * @param data \n * @return String \n * @exception IllegalArgumentException \n */\n\\end{verbatim}","1":"\\begin{verbatim}\n/**\n * Formats the data object.\n * @param data The object to format.\n * @return A formatted string representation.\n * @throws IllegalArgumentException if data is null.\n */\n\\end{verbatim}","2":"\\begin{verbatim}\n/**\n * @param data The object to format.\n * @returns A formatted string representation.\n * @throws IllegalArgumentException if data is null.\n */\n\\end{verbatim}","3":"\\begin{verbatim}\n/*\n * Formats the data object.\n * @param data The object to format.\n * @return A formatted string representation.\n * @throws IllegalArgumentException if data is null.\n */\n\\end{verbatim}"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100313,"difficulty":"medium","type":"multiple","question":"Which of the following statements about Java coding conventions are true? (Choose all that apply)","choices":{"0":"Following coding conventions is mandatory for the code to compile.","1":"Method names should begin with a lowercase letter.","2":"Interface names should begin with an uppercase letter.","3":"Conventions are primarily for improving code readability and maintainability.","4":"Package names may contain uppercase letters."},"answers":["1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100314,"difficulty":"medium","type":"multiple","question":"Given the `main` method of a class located in `com.example.App.java`, which of the following are true about the `javadoc` command? (Choose all that apply)","choices":{"0":"Running `javadoc com.example.App.java` can generate HTML documentation.","1":"The `javadoc` tool processes only `/** ... */` comments.","2":"The `javadoc` tool requires the Java source file to be free of compilation errors to run successfully.","3":"The `-d` flag can be used to specify an output directory for the generated documentation."},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100315,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\npublic class CommentTest {\n    public static void main(String[] args) {\n        System.out.println(\"Value is \" + getValue());\n    }\n    public static int getValue() {\n        return 10; // returns the integer value 10\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation fails.","1":"It compiles, but a runtime error occurs.","2":"It compiles and prints `Value is 10 // returns the integer value 10`.","3":"It compiles and prints `Value is 10`."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100316,"difficulty":"medium","type":"multiple","question":"Which of the following identifiers follow standard Java naming conventions for variables or methods? (Choose all that apply)","choices":{"0":"`$price`","1":"`_name`","2":"`calculateTotal`","3":"`Final_Value`","4":"`isComplete`"},"answers":["0","1","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100317,"difficulty":"medium","type":"single","question":"What happens if a Javadoc comment is placed immediately after a class declaration instead of before it?","choices":{"0":"The code fails to compile.","1":"The `javadoc` tool associates the comment with the first method in the class.","2":"The `javadoc` tool ignores the comment entirely.","3":"The `javadoc` tool generates a warning and applies the comment to the next element in the file."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100318,"difficulty":"medium","type":"multiple","question":"Which Javadoc tags would be appropriate for documenting the following method? (Choose all that apply)\n\\begin{verbatim}\npublic List<String> processFile(String filename) throws java.io.IOException\n\\end{verbatim}","choices":{"0":"`@param`","1":"`@return`","2":"`@throws`","3":"`@see`","4":"`@void`"},"answers":["0","1","2","3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100319,"difficulty":"medium","type":"single","question":"Which statement best describes the relationship between the Java compiler (`javac`) and comments?","choices":{"0":"The compiler replaces comments with whitespace before creating the bytecode.","1":"The compiler embeds Javadoc comments into the `.class` file for runtime access.","2":"The compiler uses comments to perform code optimizations.","3":"The compiler checks the syntax of Javadoc tags."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100320,"difficulty":"medium","type":"single","question":"Consider the Javadoc tag `@see`. What is its primary purpose?","choices":{"0":"To specify the author of the class or method.","1":"To generate a hyperlink to other related documentation.","2":"To describe an unchecked exception that might be thrown.","3":"To mark a method as serializable."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100321,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile the following code?\n\\begin{verbatim}\npublic class NestedComment {\n    /*\n     * This is an outer comment.\n     * /* This is a nested comment. */\n     * The outer comment ends here.\n     */\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation is successful, and the program prints \"Hello\".","1":"Compilation fails due to an unclosed comment.","2":"Compilation is successful, but a warning is issued about nested comments.","3":"Compilation fails due to illegal syntax inside a comment."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100322,"difficulty":"hard","type":"single","question":"What is the output of the following Java program? (Note: `\\u000a` is the Unicode escape for a newline character)\n\\begin{verbatim}\npublic class UnicodeFun {\n    public static void main(String[] args) {\n        // Is this line executed? \\u000a System.out.println(\"Executed!\");\n    }\n}\n\\end{verbatim}","choices":{"0":"The program compiles but produces no output.","1":"The program fails to compile.","2":"The program compiles and prints `Executed!`.","3":"The program compiles and prints `Is this line executed? Executed!`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100323,"difficulty":"hard","type":"single","question":"Examine the code snippet:\n\\begin{verbatim}\npublic class Test {\n    public final int MAX_USERS = 100;\n    public static void main(String... args) {\n        // some code\n    }\n}\n\\end{verbatim}\nWhich statement is the most accurate assessment of the `MAX_USERS` declaration regarding Java conventions?","choices":{"0":"It follows conventions perfectly because it is a `final` constant.","1":"It violates conventions because instance variables should not be `final`.","2":"It violates conventions because the `SCREAMING_SNAKE_CASE` is reserved for `static final` constants, and this field is not `static`.","3":"It follows conventions, but it would be better to name it `maxUsers`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100324,"difficulty":"hard","type":"single","question":"A class contains a method with the following Javadoc comment. What is the result of attempting to compile the source file containing this code?\n\\begin{verbatim}\n/**\n * Processes a request.\n * @parameter name The name of the user.\n * @return The result of the processing.\n */\npublic String process(String name) { return \"Processed: \" + name; }\n\\end{verbatim}","choices":{"0":"Compilation fails because `@parameter` is not a valid Javadoc tag.","1":"Compilation succeeds.","2":"Compilation succeeds, but the `javadoc` tool will fail to execute.","3":"Compilation fails with a warning about the unrecognized tag."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100325,"difficulty":"hard","type":"multiple","question":"Which of the following statements about how the Java compiler (`javac`) processes comments are true? (Choose all that apply)","choices":{"0":"Unicode escape sequences within comments are interpreted by the compiler before the comment is discarded.","1":"The text `*/` inside a string literal (e.g., `\"hello */ world\"`) will terminate a multi-line comment.","2":"The compiler effectively removes all comments, so they have zero impact on the final bytecode size.","3":"A Javadoc comment placed inside a method body is treated identically to a multi-line comment (`/* */`) by the compiler."},"answers":["0","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100326,"difficulty":"hard","type":"single","question":"What is the primary purpose of the `{@code ...}` inline Javadoc tag?","choices":{"0":"To execute the enclosed code snippet during Javadoc generation for validation.","1":"To highlight the enclosed text with a background color in the generated HTML.","2":"To represent the enclosed text in a code font, without processing its content as HTML.","3":"To create a block-level comment that is separate from the main description."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100327,"difficulty":"hard","type":"single","question":"What is the result of compiling and running this code?\n\\begin{verbatim}\npublic class TrickyScope {\n    public static void main(String[] args) {\n        int i = 0;\n        if (true) {\n            // The following comment looks like it closes the block\n            /*\n                System.out.println(\"Inside comment\");\n            }\n            */\n            i = 1;\n        } \n        System.out.println(i);\n    }\n}\n\\end{verbatim}","choices":{"0":"It fails to compile due to a syntax error with braces.","1":"It compiles and prints `0`.","2":"It compiles and prints `1`.","3":"It compiles but throws a runtime exception."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100328,"difficulty":"hard","type":"multiple","question":"Which of the following code snippets will fail to compile due to issues with comment syntax? (Choose all that apply)","choices":{"0":"\\begin{verbatim}\nint x = 10; //* A special comment */\n\\end{verbatim}","1":"\\begin{verbatim}\nString s = \"This contains a comment end: */\";\n\\end{verbatim}","2":"\\begin{verbatim}\n/* Is this /* nested comment */ valid? */\nint y = 20;\n\\end{verbatim}","3":"\\begin{verbatim}\n// Another comment \\\nint z = 30;\n\\end{verbatim}"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100329,"difficulty":"hard","type":"single","question":"Consider the following line of code. How does the Java compiler interpret it?\n\\begin{verbatim}\n// http://www.example.com?value=1\\u0026value=2\n\\end{verbatim}","choices":{"0":"As a single-line comment, with no special behavior.","1":"It causes a compilation error because `\\u0026` is not a valid Unicode escape for a character.","2":"It is interpreted as a comment, but the compiler issues a warning about the unknown Unicode escape.","3":"It causes a compilation error because `&` is not a valid character to be escaped with `\\u` in this context."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100400,"difficulty":"easy","type":"single","question":"Which of the following is NOT a primitive data type in Java?","choices":{"0":"`int`","1":"`String`","2":"`boolean`","3":"`char`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100401,"difficulty":"easy","type":"single","question":"What is the memory size of a `long` primitive data type in Java?","choices":{"0":"32 bits","1":"16 bits","2":"64 bits","3":"It depends on the platform."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100402,"difficulty":"easy","type":"single","question":"An uninitialized instance variable of type `boolean` is declared in a class. What is its default value?","choices":{"0":"`true`","1":"`false`","2":"`null`","3":"It does not have a default value and will cause a compile error."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100403,"difficulty":"easy","type":"single","question":"Which literal suffix is used to explicitly mark a number as a `long`?","choices":{"0":"`d` or `D`","1":"`f` or `F`","2":"`l` or `L`","3":"`x` or `X`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100404,"difficulty":"easy","type":"single","question":"How do you correctly declare a variable `pi` of type `float` with the value 3.14?","choices":{"0":"`float pi = 3.14;`","1":"`float pi = 3.14d;`","2":"`float pi = 3.14f;`","3":"`float pi = (float) 3.14d;`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100405,"difficulty":"easy","type":"multiple","question":"Which of the following are floating-point primitive types in Java? (Choose all that apply)","choices":{"0":"`double`","1":"`long`","2":"`float`","3":"`decimal`"},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100406,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile the following code snippet?\n\\begin{verbatim}\nlong value = 2147483648;\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"The code fails to compile because the number is out of range for a standard integer literal.","2":"The code compiles, but a runtime exception is thrown.","3":"The code fails to compile because `long` cannot hold this value."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100407,"difficulty":"medium","type":"single","question":"Which of the following lines of code will fail to compile?","choices":{"0":"`int i = 0b101;`","1":"`double d = 3.14_15;`","2":"`float f = 1.2e3f;`","3":"`long l = 100_L;`"},"answers":["3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100408,"difficulty":"medium","type":"single","question":"What is the decimal value of the variable `x` after this line is executed?\n\\begin{verbatim}\nint x = 0x1A;\n\\end{verbatim}","choices":{"0":"26","1":"1A","2":"32","3":"The code does not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100409,"difficulty":"medium","type":"single","question":"Examine the following code:\n\\begin{verbatim}\npublic class Test {\n    static char c;\n    public static void main(String[] args) {\n        System.out.println((int) c);\n    }\n}\n\\end{verbatim}\nWhat is the output?","choices":{"0":"`0`","1":"`null`","2":"The code does not compile because `c` is not initialized.","3":"A `NullPointerException` is thrown at runtime."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100410,"difficulty":"medium","type":"single","question":"What is the result of the following assignment?\n\\begin{verbatim}\nshort s = 10;\n\\end{verbatim}","choices":{"0":"Compilation fails because 10 is an `int` literal and requires a cast.","1":"Compilation succeeds, as the `int` literal is within the valid range for a `short`.","2":"Compilation succeeds, but a runtime error will occur.","3":"Compilation fails because `short` literals must end with an `s` suffix."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100411,"difficulty":"medium","type":"single","question":"What is the decimal value of the octal literal `021`?","choices":{"0":"21","1":"15","2":"17","3":"The code results in a compilation error."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100412,"difficulty":"medium","type":"single","question":"Consider the following code snippet:\n\\begin{verbatim}\nchar c = 'A';\nc++;\nSystem.out.println(c);\n\\end{verbatim}\nWhat is printed to the console?","choices":{"0":"`A`","1":"`B`","2":"`66`","3":"`65`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100413,"difficulty":"medium","type":"single","question":"Which of the following assignments is invalid in Java?","choices":{"0":"`double d = 100;`","1":"`int i = 'c';`","2":"`float f = 10.5;`","3":"`byte b = 127;`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100414,"difficulty":"medium","type":"multiple","question":"Which of the following are valid variable declarations and initializations? (Choose all that apply)","choices":{"0":"`int i = 0b101;`","1":"`float f = 1.0f;`","2":"`double d = 1_00.0;`","3":"`byte b = 128;`","4":"`char c = '\\'';`"},"answers":["0","1","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100415,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nshort s = 32767;\ns = (short) (s + 1);\nSystem.out.println(s);\n\\end{verbatim}","choices":{"0":"`32768`","1":"`-32768`","2":"`0`","3":"An `ArithmeticException` is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100416,"difficulty":"medium","type":"multiple","question":"Which of the following character literals are valid in Java? (Choose all that apply)","choices":{"0":"`'\\u0041'`","1":"`'\\n'`","2":"`'ab'`","3":"`'\"'`"},"answers":["0","1","3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100417,"difficulty":"medium","type":"single","question":"Which of these assignments requires an explicit cast to compile?","choices":{"0":"`long l = 100;`","1":"`float f = 10L;`","2":"`double d = 2.5f;`","3":"`int i = 100.0;`"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100418,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile this code?\n\\begin{verbatim}\nint num = 1_234.56;\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"The code fails to compile because underscores cannot be used with floating-point numbers.","2":"The code fails to compile because a floating-point literal cannot be assigned to an `int`.","3":"The code fails to compile because the underscore is misplaced."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100419,"difficulty":"medium","type":"multiple","question":"Which of the following numeric literals are invalid and will cause a compilation error? (Choose all that apply)","choices":{"0":"`1_000_000`","1":"`_100.0`","2":"`0x_FF`","3":"`3.14_f`","4":"`0b101_`"},"answers":["1","2","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100420,"difficulty":"medium","type":"single","question":"What is the outcome of compiling and running the following code?\n\\begin{verbatim}\npublic class LocalVarTest {\n    public static void main(String[] args) {\n        int x;\n        // if (args.length > 0) x = 1;\n        System.out.println(x);\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints 0.","1":"It throws a `NullPointerException`.","2":"It fails to compile.","3":"It compiles but throws an `IllegalStateException`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100421,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile the following code snippet?\n\\begin{verbatim}\nint i = 10;\nbyte b = i;\n\\end{verbatim}","choices":{"0":"It compiles successfully because the value of `i` (10) is within the range of a `byte`.","1":"It fails to compile because `i` is an `int` variable, and assigning it to a `byte` requires an explicit cast.","2":"It compiles, but will throw a runtime exception if `i` were greater than 127.","3":"It compiles because the compiler can determine the constant value of `i` at compile time."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100422,"difficulty":"hard","type":"single","question":"What is the output of executing the following line of code?\n\\begin{verbatim}\nSystem.out.println(10.0 / 0);\n\\end{verbatim}","choices":{"0":"`NaN`","1":"`Infinity`","2":"It throws an `ArithmeticException` at runtime.","3":"It causes a compilation error."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100423,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile the following line of code?\n\\begin{verbatim}\nint number = 08;\n\\end{verbatim}","choices":{"0":"The code compiles, and `number` has a value of 8.","1":"The code compiles, and `number` has a value of 0.","2":"The code fails to compile because 8 is not a valid octal digit.","3":"The code compiles, but a runtime exception is thrown."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100424,"difficulty":"hard","type":"single","question":"What value is stored in the variable `result` after this code is executed?\n\\begin{verbatim}\nlong result = 2_147_483_647 + 1;\n\\end{verbatim}","choices":{"0":"`2147483648`","1":"`-2147483648`","2":"The code fails to compile.","3":"`21474836471`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100425,"difficulty":"hard","type":"multiple","question":"Which of the following lines of code will result in a compilation error? (Choose all that apply)","choices":{"0":"`byte b = 127; b++;`","1":"`char c = -1;`","2":"`float f = 1.0;`","3":"`int i = 1_00L;`"},"answers":["1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100426,"difficulty":"hard","type":"single","question":"What is printed to the console by the following code?\n\\begin{verbatim}\nint value = 'a' + 'b';\nSystem.out.println(value);\n\\end{verbatim}","choices":{"0":"`ab`","1":"`195`","2":"The code fails to compile.","3":"`9798`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100427,"difficulty":"hard","type":"multiple","question":"Which statements are true about division in Java? (Choose all that apply)","choices":{"0":"Dividing a non-zero floating-point number by `0.0` results in `Infinity` or `-Infinity` and does not throw an exception.","1":"Dividing any integer by `0` will always result in a compile-time error.","2":"The expression `0.0 / 0.0` evaluates to `NaN` (Not a Number).","3":"The expression `10 / 4` evaluates to `2.5`."},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100428,"difficulty":"hard","type":"single","question":"What happens when this code is compiled and run?\n\\begin{verbatim}\nSystem.out.println(10 / 0);\n\\end{verbatim}","choices":{"0":"It fails to compile.","1":"It prints `Infinity`.","2":"It prints `NaN`.","3":"It compiles but throws an `ArithmeticException` at runtime."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100429,"difficulty":"hard","type":"multiple","question":"Which of these assignments are valid and will compile without error? (Choose all that apply)","choices":{"0":"`short s = (short) 32768;`","1":"`char c = 65535;`","2":"`float f = 1e1f;`","3":"`int i = 0xFaceB00C;`","4":"`boolean b = 1;`"},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100500,"difficulty":"easy","type":"single","question":"The automatic conversion of a value from a smaller primitive data type to a larger one is known as what?","choices":{"0":"Narrowing","1":"Boxing","2":"Casting","3":"Widening"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100501,"difficulty":"easy","type":"single","question":"Which of the following conversions requires an explicit cast?","choices":{"0":"`int` to `long`","1":"`short` to `int`","2":"`float` to `double`","3":"`double` to `int`"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100502,"difficulty":"easy","type":"single","question":"What is the primary risk associated with narrowing primitive conversion (e.g., `long` to `int`)?","choices":{"0":"Improved performance","1":"Potential loss of data or precision","2":"A `NullPointerException`","3":"It is not possible in Java"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100503,"difficulty":"easy","type":"single","question":"What is the data type of the result of the following expression: `5.0f + 5L`?","choices":{"0":"`int`","1":"`long`","2":"`float`","3":"`double`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100504,"difficulty":"easy","type":"single","question":"What is the resulting data type of an arithmetic operation involving a `byte` and a `short`?","choices":{"0":"`byte`","1":"`short`","2":"`int`","3":"`long`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100505,"difficulty":"easy","type":"multiple","question":"Which of the following assignments represent a widening conversion and will compile without a cast? (Choose all that apply)","choices":{"0":"`int i = 10; long l = i;`","1":"`char c = 'A'; double d = c;`","2":"`double d = 1.0; float f = d;`","3":"`byte b = 10; short s = b;`"},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100506,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile the following code?\n\\begin{verbatim}\nbyte b1 = 10;\nbyte b2 = 20;\nbyte b3 = b1 + b2;\n\\end{verbatim}","choices":{"0":"It compiles, and `b3` is 30.","1":"It fails to compile because `b1 + b2` is promoted to an `int`.","2":"It compiles, but `b3` is a truncated value.","3":"It compiles but throws an `ArithmeticException` at runtime."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100507,"difficulty":"medium","type":"single","question":"What is the value of `i` after this code is executed?\n\\begin{verbatim}\ndouble d = 12.9;\nint i = (int)d;\n\\end{verbatim}","choices":{"0":"12","1":"13","2":"12.9","3":"The code does not compile."},"answers":["0"],"attempts":1,"attempted":true,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100508,"difficulty":"medium","type":"single","question":"What is the value of `result` after this code executes?\n\\begin{verbatim}\nint a = 10;\nint b = 4;\nfloat result = a / b;\n\\end{verbatim}","choices":{"0":"`2.5f`","1":"`2.0f`","2":"`2`","3":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100509,"difficulty":"medium","type":"single","question":"Which of the following lines will fail to compile?","choices":{"0":"`short s = 100;`","1":"`int i = 100; byte b = i;`","2":"`float f = 100;`","3":"`long l = 100;`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100510,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nint i = 258;\nbyte b = (byte)i;\nSystem.out.println(b);\n\\end{verbatim}","choices":{"0":"`258`","1":"`1`","2":"`2`","3":"An exception is thrown."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100511,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile this line of code?\n\\begin{verbatim}\nboolean flag = false; char c = (char)flag;\n\\end{verbatim}","choices":{"0":"Compilation is successful, and `c` will be `\\u0000`.","1":"Compilation is successful, and `c` will be `\\uFFFF`.","2":"Compilation fails because a `boolean` cannot be cast to a `char`.","3":"Compilation is successful, but a runtime `ClassCastException` is thrown."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100512,"difficulty":"medium","type":"single","question":"What is the most accurate description of the following code's behavior?\n\\begin{verbatim}\nshort s1 = 5;\nshort s2 = 10;\nint i = s1 + s2;\n\\end{verbatim}","choices":{"0":"It fails to compile because `s1` and `s2` must be cast to `int` before addition.","1":"It compiles successfully, and `i` will be 15.","2":"It fails to compile because the result of the addition should be stored in a `short`.","3":"It compiles, but the result in `i` is unpredictable."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100513,"difficulty":"medium","type":"multiple","question":"Which of these assignments will compile without any errors? (Choose all that apply)","choices":{"0":"`long l = 100.0f;`","1":"`float f = 100.0;`","2":"`int i = 'A';`","3":"`char c = 65;`","4":"`byte b = 130;`"},"answers":["2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100514,"difficulty":"medium","type":"single","question":"What is the value of `f` after the following code is executed?\n\\begin{verbatim}\nfloat f = (float) 10.5; // Line 1\nf = f + 10; // Line 2\n\\end{verbatim}","choices":{"0":"20.5","1":"20.0","2":"The code fails to compile at Line 1.","3":"The code fails to compile at Line 2."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100515,"difficulty":"medium","type":"multiple","question":"For which of the following operations is the resulting type `int`? (Choose all that apply)","choices":{"0":"`short + byte`","1":"`char * char`","2":"`int + float`","3":"`byte / byte`","4":"`long - int`"},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100516,"difficulty":"medium","type":"single","question":"Given the following code, what is the outcome?\n\\begin{verbatim}\nlong bigNum = 100;\nint smallNum = (int) bigNum;\n\\end{verbatim}","choices":{"0":"Compilation fails because `long` cannot be cast to `int`.","1":"Compilation fails because the cast is unnecessary.","2":"Compilation is successful, and `smallNum` is 100.","3":"A runtime exception occurs due to potential data loss."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100517,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile this snippet?\n\\begin{verbatim}\nchar c = 10;\nshort s = c;\n\\end{verbatim}","choices":{"0":"Compilation succeeds.","1":"Compilation fails because `char` cannot be assigned to `short` without a cast.","2":"Compilation fails because `10` is an `int` and cannot be assigned to `char`.","3":"Compilation fails because `c` is not initialized."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100518,"difficulty":"medium","type":"multiple","question":"Which of the following lines of code require an explicit cast to compile successfully? (Choose all that apply)","choices":{"0":"`long l = 10;`","1":"`byte b = 10;`","2":"`float f = 10.0;`","3":"`int i = 10L;`"},"answers":["2","3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100519,"difficulty":"medium","type":"single","question":"What is the output of this code?\n\\begin{verbatim}\nfloat f = 10.5f;\nshort s = (short)f;\nSystem.out.println(s);\n\\end{verbatim}","choices":{"0":"`10`","1":"`11`","2":"`10.5`","3":"Compilation error"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100520,"difficulty":"medium","type":"single","question":"Examine this code:\n\\begin{verbatim}\nbyte b = 10;\nchar c = b;\n\\end{verbatim}\nWhat is the result?","choices":{"0":"It compiles, and `c` holds the character with value 10.","1":"It fails to compile because a `byte` cannot be assigned to a `char` without a cast.","2":"It compiles, but throws a runtime exception.","3":"It fails to compile because `b` is negative."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100521,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\nbyte b = 5;\nb = b + 10;\nSystem.out.println(b);\n\\end{verbatim}","choices":{"0":"It compiles and prints `15`.","1":"It compiles but throws a runtime exception.","2":"It fails to compile.","3":"It compiles and prints a truncated value."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100522,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\nbyte b = 5;\nb += 10;\nSystem.out.println(b);\n\\end{verbatim}","choices":{"0":"It compiles and prints `15`.","1":"It compiles but throws a runtime exception.","2":"It fails to compile.","3":"It compiles and prints a truncated value."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100523,"difficulty":"hard","type":"single","question":"Examine the following code. What will be the outcome?\n\\begin{verbatim}\nfinal int i = 10;\nbyte b = i;\nSystem.out.println(b);\n\\end{verbatim}","choices":{"0":"The code fails to compile because a cast `(byte)` is required.","1":"The code compiles and prints `10`.","2":"The code fails to compile because `i` is final and cannot be assigned.","3":"The code compiles but throws a runtime exception."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100524,"difficulty":"hard","type":"single","question":"What is the final value of `s`?\n\\begin{verbatim}\nshort s = 32767;\ns++;\n\\end{verbatim}","choices":{"0":"`32768`","1":"`-32768`","2":"`0`","3":"The code does not compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100525,"difficulty":"hard","type":"multiple","question":"Which of the following code snippets will compile successfully? (Choose all that apply)","choices":{"0":"\\begin{verbatim}\nshort s = 10;\ns = s + 5;\n\\end{verbatim}","1":"\\begin{verbatim}\nchar c = 'a';\nc += 5;\n\\end{verbatim}","2":"\\begin{verbatim}\nfinal byte b1 = 10;\nfinal byte b2 = 20;\nbyte b3 = b1 + b2;\n\\end{verbatim}","3":"\\begin{verbatim}\nfloat f = 1.0f;\ndouble d = f;\n\\end{verbatim}"},"answers":["1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100526,"difficulty":"hard","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nlong l = 9223372036854775807L;\nfloat f = l;\nlong l2 = (long)f;\nSystem.out.println(l == l2);\n\\end{verbatim}","choices":{"0":"`true`","1":"`false`","2":"The code does not compile.","3":"A runtime exception is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100527,"difficulty":"hard","type":"multiple","question":"Which of the following statements about primitive type conversion are true? (Choose all that apply)","choices":{"0":"A compound assignment operator like `+=` performs an automatic, implicit cast.","1":"Any arithmetic operation involving two operands of types smaller than `int` will result in a `long`.","2":"Casting a `double` value of `Infinity` to an `int` results in the value `Integer.MAX_VALUE`.","3":"Assigning a `char` to a `short` variable never requires a cast."},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100528,"difficulty":"hard","type":"single","question":"What is the result of the following code snippet?\n\\begin{verbatim}\nfloat f = (float) Double.POSITIVE_INFINITY;\nint i = (int) f;\nSystem.out.println(i);\n\\end{verbatim}","choices":{"0":"`0`","1":"`-1`","2":"`2147483647`","3":"A runtime `ArithmeticException` is thrown."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100529,"difficulty":"hard","type":"multiple","question":"Which of these code fragments will fail to compile? (Choose all that apply)","choices":{"0":"\\begin{verbatim}\nbyte b1 = 1;\nfinal byte b2 = 2;\nbyte b3 = b1 + b2;\n\\end{verbatim}","1":"\\begin{verbatim}\nshort s = Short.MAX_VALUE;\ns += 1;\n\\end{verbatim}","2":"\\begin{verbatim}\nchar c = 0;\nshort s2 = c;\n\\end{verbatim}","3":"\\begin{verbatim}\nfloat f = 1.0F;\nlong l = f;\n\\end{verbatim}"},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100600,"difficulty":"easy","type":"single","question":"Which of the following statements is the primary reason for the existence of wrapper classes in Java?","choices":{"0":"To provide a more efficient way to store primitive types.","1":"To allow primitive types to be treated as objects, especially for use in collections.","2":"To add more methods to primitive types, such as converting them to strings.","3":"To secure primitive data types by encapsulating them."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100601,"difficulty":"easy","type":"single","question":"What is the output of the following code snippet?\\n\\begin{verbatim}\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<Integer> list = new ArrayList<>();\n        list.add(10);\n        list.add(20);\n        int first = list.get(0);\n        System.out.println(first);\n    }\n}\n\\end{verbatim}","choices":{"0":"The code will not compile.","1":"An exception will be thrown at runtime.","2":"10","3":"20"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100602,"difficulty":"easy","type":"single","question":"The automatic conversion of a primitive data type into its corresponding wrapper class object is known as:","choices":{"0":"Boxing","1":"Autoboxing","2":"Unboxing","3":"Auto-unboxing"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100603,"difficulty":"easy","type":"multiple","question":"Which of the following are valid ways to create an Integer object with the value 100? (Choose all that apply)","choices":{"0":"\\verb|Integer i = 100;|","1":"\\verb|Integer i = new Integer(100);|","2":"\\verb|Integer i = Integer.valueOf(100);|","3":"\\verb|Integer i = Integer.parseInt(\"100\");|"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100604,"difficulty":"easy","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        Double d = 25.5;\n        d++;\n        System.out.println(d);\n    }\n}\n\\end{verbatim}","choices":{"0":"25.5","1":"26.0","2":"26.5","3":"Compilation fails."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100605,"difficulty":"easy","type":"single","question":"Which of the following is NOT a wrapper class in Java?","choices":{"0":"\\verb|Int|","1":"\\verb|Character|","2":"\\verb|Boolean|","3":"\\verb|Float|"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100606,"difficulty":"medium","type":"single","question":"What is the result of the following code snippet?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        Integer i1 = 127;\n        Integer i2 = 127;\n        Integer i3 = 128;\n        Integer i4 = 128;\n\n        System.out.println(i1 == i2);\n        System.out.println(i3 == i4);\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|true| followed by \\verb|true|","1":"\\verb|true| followed by \\verb|false|","2":"\\verb|false| followed by \\verb|true|","3":"\\verb|false| followed by \\verb|false|"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100607,"difficulty":"medium","type":"single","question":"What happens when the following code is executed?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        Integer number = null;\n        int result = number;\n        System.out.println(result);\n    }\n}\n\\end{verbatim}","choices":{"0":"The code prints \\verb|0|.","1":"The code prints \\verb|null|.","2":"The code throws a \\verb|NullPointerException|.","3":"The code fails to compile."},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100608,"difficulty":"medium","type":"single","question":"Examine the following code. What is the output?\\n\\begin{verbatim}\npublic class Test {\n    static void process(int i) {\n        System.out.print(\"primitive \");\n    }\n    static void process(Integer i) {\n        System.out.print(\"wrapper \");\n    }\n    public static void main(String[] args) {\n        int val = 5;\n        process(val);\n        Integer valObj = 10;\n        process(valObj);\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|primitive wrapper |","1":"\\verb|wrapper primitive |","2":"\\verb|primitive primitive |","3":"\\verb|wrapper wrapper |"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100609,"difficulty":"medium","type":"multiple","question":"Which of the following code snippets will result in a compilation error? (Choose all that apply)","choices":{"0":"\\verb|short s = 10; Integer i = s;|","1":"\\verb|Integer i = 10; int j = i;|","2":"\\verb|long l = 100; Long L = l;|","3":"\\verb|int i = 10; Long l = i;|"},"answers":["0","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100610,"difficulty":"medium","type":"single","question":"What is the output of this program?\\n\\begin{verbatim}\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<Integer> elements = new ArrayList<>();\n        elements.add(10);\n        elements.add(20);\n        elements.add(null);\n        elements.remove(Integer.valueOf(10));\n        int sum = 0;\n        for (int i : elements) {\n            sum += i;\n        }\n        System.out.println(sum);\n    }\n}\n\\end{verbatim}","choices":{"0":"30","1":"20","2":"A \\verb|NullPointerException| is thrown.","3":"An \\verb|IndexOutOfBoundsException| is thrown."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100611,"difficulty":"medium","type":"single","question":"Consider the following code. Which statement is true?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        Long l1 = 10L;\n        long l2 = 10;\n        Integer i1 = 10;\n\n        // Statement goes here\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|if (l1 == i1)| will not compile.","1":"\\verb|if (l1.equals(i1))| will return \\verb|true|.","2":"\\verb|if (l1.equals(l2))| will not compile.","3":"\\verb|if (l1 == l2)| will evaluate to \\verb|true|."},"answers":["3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100612,"difficulty":"medium","type":"single","question":"Which option, when inserted at //line 1, will cause the program to print 'Success' ?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        // line 1\n        if(i instanceof Integer) {\n            System.out.println(\"Success\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|byte b = 5; Object i = b;|","1":"\\verb|short s = 10; Object i = s;|","2":"\\verb|char c = 'a'; Object i = c;|","3":"\\verb|Object i = 100;|"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100613,"difficulty":"medium","type":"single","question":"What is printed by the following code?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        Integer num = new Integer(1);\n        switch (num) {\n            case 1: System.out.println(\"One\"); break;\n            case 2: System.out.println(\"Two\"); break;\n            default: System.out.println(\"Other\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"One","1":"Two","2":"Other","3":"Compilation fails because switch does not support wrapper types."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100614,"difficulty":"medium","type":"multiple","question":"Which of the following statements about wrapper classes are true? (Choose all that apply)","choices":{"0":"Wrapper class instances are immutable.","1":"\\verb|Integer.valueOf(String)| can throw a \\verb|NumberFormatException|.","2":"Autoboxing and unboxing can lead to performance overhead in tight loops.","3":"The \\verb|==| operator always compares object references for wrapper types.","4":"All wrapper classes have a constructor that accepts a String argument."},"answers":["0","1","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100615,"difficulty":"medium","type":"single","question":"What is the output of the code below?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        Boolean b1 = new Boolean(\"TRue\");\n        Boolean b2 = new Boolean(\"fAlSe\");\n        Boolean b3 = new Boolean(\"abc\");\n        System.out.println(b1 + \" \" + b2 + \" \" + b3);\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|true false false|","1":"\\verb|true false true|","2":"\\verb|true true false|","3":"A runtime exception is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100616,"difficulty":"medium","type":"single","question":"What is the output?\\n\\begin{verbatim}\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<Short> list = new ArrayList<>();\n        list.add((short)1);\n        list.add((short)2);\n        list.remove(1);\n        System.out.println(list);\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|[1]|","1":"\\verb|[2]|","2":"\\verb|[]|","3":"An \\verb|IndexOutOfBoundsException| is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100617,"difficulty":"medium","type":"single","question":"Which method call will be chosen for \\verb|go(5);|?\\n\\begin{verbatim}\npublic class Test {\n    static void go(long x) { System.out.print(\"long \"); }\n    static void go(Integer x) { System.out.print(\"Integer \"); }\n    static void go(Object x) { System.out.print(\"Object \"); }\n\n    public static void main(String[] args) {\n        go(5);\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|long |","1":"\\verb|Integer |","2":"\\verb|Object |","3":"The code will not compile due to an ambiguous call."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100618,"difficulty":"medium","type":"single","question":"What is the result of executing the following code?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        Integer x = 400, y = 400;\n        if (x == y)\n            System.out.println(\"Same\");\n        else\n            System.out.println(\"Different\");\n\n        Integer a = 40, b = 40;\n        if (a == b)\n            System.out.println(\"Same\");\n        else\n            System.out.println(\"Different\");\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|Same| followed by \\verb|Same|","1":"\\verb|Different| followed by \\verb|Different|","2":"\\verb|Same| followed by \\verb|Different|","3":"\\verb|Different| followed by \\verb|Same|"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100619,"difficulty":"medium","type":"multiple","question":"Which of these lines of code will compile successfully? (Choose all that apply)","choices":{"0":"\\verb|Float f = 10.0;|","1":"\\verb|Character c = 65;|","2":"\\verb|double d = new Double(10.5);|","3":"\\verb|Boolean b = null;|","4":"\\verb|int i = new Integer(5);|"},"answers":["2","3","4"],"attempts":1,"attempted":true,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100620,"difficulty":"medium","type":"single","question":"Which statement best describes the difference between \\verb|Integer.parseInt(s)| and \\verb|Integer.valueOf(s)|?","choices":{"0":"\\verb|parseInt| returns an \\verb|int| primitive, while \\verb|valueOf| returns an \\verb|Integer| object.","1":"\\verb|valueOf| returns an \\verb|int| primitive, while \\verb|parseInt| returns an \\verb|Integer| object.","2":"There is no functional difference; they can be used interchangeably.","3":"\\verb|parseInt| is deprecated in Java 8, and \\verb|valueOf| should be used instead."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100621,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        Integer i1 = 1;\n        Integer i2 = new Integer(1);\n        int i3 = 1;\n        Double d1 = 1.0;\n        \n        System.out.print(i1 == i2);\n        System.out.print(\", \" + (i1 == i3));\n        System.out.print(\", \" + i1.equals(i2));\n        System.out.print(\", \" + i1.equals(d1));\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|false, true, true, false|","1":"\\verb|false, true, true, true|","2":"\\verb|true, true, true, false|","3":"\\verb|true, false, true, true|"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100622,"difficulty":"hard","type":"single","question":"Given the overloaded methods, which one is invoked by \\verb|process(c);|?\\n\\begin{verbatim}\npublic class Test {\n    static void process(int i) { System.out.println(\"int\"); }\n    static void process(long l) { System.out.println(\"long\"); }\n    static void process(Character ch) { System.out.println(\"Character\"); }\n    static void process(Object o) { System.out.println(\"Object\"); }\n    \n    public static void main(String[] args) {\n        char c = 'A';\n        process(c);\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|int|","1":"\\verb|long|","2":"\\verb|Character|","3":"\\verb|Object|"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100623,"difficulty":"hard","type":"multiple","question":"Which of the following lines will compile without errors? (Choose all that apply)","choices":{"0":"\\verb|Integer i = new Integer(null);|","1":"\\verb|Double d = null; double d2 = d;|","2":"\\verb|Byte b = 25; |","3":"\\verb|Short s = new Short((short)10);|","4":"\\verb|long l = new Integer(100);|"},"answers":["3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100624,"difficulty":"hard","type":"single","question":"What is the final value of \\verb|i| after this code executes?\\n\\begin{verbatim}\npublic class Test {\n    static Integer i;\n    static void update(Integer i) {\n        i = 10;\n    }\n    public static void main(String[] args) {\n        update(i);\n        System.out.println(i);\n    }\n}\n\\end{verbatim}","choices":{"0":"10","1":"0","2":"null","3":"A \\verb|NullPointerException| is thrown."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100625,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<Integer> list = new ArrayList<>();\n        list.add(1);\n        list.add(2);\n        list.add(3);\n        list.remove(new Integer(2));\n        System.out.println(list);\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|[1, 2]|","1":"\\verb|[1, 3]|","2":"\\verb|[2, 3]|","3":"An \\verb|IndexOutOfBoundsException| occurs."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100626,"difficulty":"hard","type":"single","question":"Which two wrapper classes have caches that are mandated by the Java Language Specification to be at least for the range -128 to 127?","choices":{"0":"\\verb|Integer| and \\verb|Long|","1":"\\verb|Integer| and \\verb|Short|","2":"\\verb|Byte| and \\verb|Short|","3":"The caching behavior is implementation-specific for all wrapper types."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100627,"difficulty":"hard","type":"multiple","question":"What is the output of this program? (Choose all that apply)\\n\\begin{verbatim}\npublic class Test {\n    static void check(Object o) {\n        if (o instanceof Long)\n            System.out.println(\"Long\");\n        else if (o instanceof Integer)\n            System.out.println(\"Integer\");\n        else if (o instanceof Short)\n            System.out.println(\"Short\");\n        else\n            System.out.println(\"Other\");\n    }\n    public static void main(String[] args) {\n        short s = 10;\n        check(s);\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|Long|","1":"\\verb|Integer|","2":"\\verb|Short|","3":"\\verb|Other|","4":"The code does not compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100628,"difficulty":"hard","type":"single","question":"Examine this code. What will be printed to the console?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        Integer i1 = 10;\n        Long l1 = 10L;\n        \n        System.out.println(i1.equals(l1));\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|true|","1":"\\verb|false|","2":"The code does not compile.","3":"A runtime exception is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100629,"difficulty":"hard","type":"single","question":"What is the output of the code?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        Integer a = 10;\n        Integer b = 10;\n        Integer c = a + b;\n        Integer d = 20;\n        System.out.println(c == d);\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|true|","1":"\\verb|false|","2":"Compilation fails.","3":"An exception is thrown at runtime."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100700,"difficulty":"easy","type":"single","question":"A variable declared inside a method is known as a:","choices":{"0":"Static variable","1":"Instance variable","2":"Local variable","3":"Global variable"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100701,"difficulty":"easy","type":"single","question":"Which type of variable is shared among all instances of a class?","choices":{"0":"Local variable","1":"Instance variable","2":"Static variable","3":"Final variable"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100702,"difficulty":"easy","type":"single","question":"What is the default value of an instance variable of type \\verb|boolean| if it is not explicitly initialized?","choices":{"0":"\\verb|true|","1":"\\verb|false|","2":"\\verb|null|","3":"It does not have a default value and must be initialized."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100703,"difficulty":"easy","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\npublic class ScopeTest {\n    static int x = 10;\n    public static void main(String[] args) {\n        System.out.println(x);\n    }\n}\n\\end{verbatim}","choices":{"0":"0","1":"10","2":"null","3":"Compilation fails."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100704,"difficulty":"easy","type":"multiple","question":"Which of the following keywords can be used to declare an instance variable? (Choose all that apply)","choices":{"0":"\\verb|private|","1":"\\verb|static|","2":"\\verb|final|","3":"\\verb|transient|"},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100705,"difficulty":"easy","type":"single","question":"When does the lifetime of a local variable end?","choices":{"0":"When the program terminates.","1":"When the object it belongs to is garbage collected.","2":"When the method or block it was declared in finishes execution.","3":"When it is explicitly set to null."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100706,"difficulty":"medium","type":"single","question":"What is the result of compiling and running this class?\\n\\begin{verbatim}\npublic class ScopeTest {\n    private int x = 10;\n\n    public void process() {\n        int x = 20;\n        System.out.println(x);\n    }\n\n    public static void main(String[] args) {\n        new ScopeTest().process();\n    }\n}\n\\end{verbatim}","choices":{"0":"10","1":"20","2":"Compilation fails due to a duplicate variable 'x'.","3":"A runtime exception is thrown."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100707,"difficulty":"medium","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\npublic class ScopeTest {\n    static int count;\n    int num;\n\n    public ScopeTest() {\n        count++;\n        num++;\n    }\n\n    public static void main(String[] args) {\n        ScopeTest t1 = new ScopeTest();\n        ScopeTest t2 = new ScopeTest();\n        ScopeTest t3 = new ScopeTest();\n        System.out.println(t3.count + \", \" + t3.num);\n    }\n}\n\\end{verbatim}","choices":{"0":"1, 1","1":"3, 3","2":"3, 1","3":"1, 3"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100708,"difficulty":"medium","type":"single","question":"Which statement is true about the following code?\\n\\begin{verbatim}\npublic class Test {\n    public void check() {\n        int x;\n        if (true) {\n            x = 10;\n        }\n        System.out.println(x);\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles and prints 10.","1":"The code compiles but throws a runtime exception.","2":"The code fails to compile because x is not initialized.","3":"The code fails to compile because x is out of scope in the print statement."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100709,"difficulty":"medium","type":"single","question":"What happens when you try to compile and run this code?\\n\\begin{verbatim}\npublic class Test {\n    int instanceVar;\n\n    public static void main(String[] args) {\n        int localVar = 10;\n        System.out.println(instanceVar + localVar);\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints 10.","1":"It prints 0.","2":"It fails to compile.","3":"It throws a NullPointerException."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100710,"difficulty":"medium","type":"multiple","question":"Which of the following statements about local variables are true? (Choose all that apply)","choices":{"0":"They are created on the stack.","1":"They must be initialized before they are used.","2":"They can be marked as \\verb|final|.","3":"They can be marked as \\verb|static|.","4":"Their scope is limited to the method or block they are defined in."},"answers":["0","1","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100711,"difficulty":"medium","type":"single","question":"What is the output of this code?\\n\\begin{verbatim}\npublic class ShadowTest {\n    int x = 100;\n\n    public void printX() {\n        int x = 200;\n        System.out.println(this.x);\n    }\n\n    public static void main(String[] args) {\n        new ShadowTest().printX();\n    }\n}\n\\end{verbatim}","choices":{"0":"100","1":"200","2":"Compilation fails.","3":"0"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100712,"difficulty":"medium","type":"single","question":"What is the result of the following code snippet?\\n\\begin{verbatim}\npublic class Scope {\n    public static void main(String[] args) {\n        int a = 10;\n        {\n            int b = 20;\n            System.out.print(a);\n        }\n        System.out.print(b);\n    }\n}\n\\end{verbatim}","choices":{"0":"The code prints 1020.","1":"The code prints 10.","2":"The code does not compile.","3":"The code prints 2010."},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100713,"difficulty":"medium","type":"multiple","question":"Which lines of code, if uncommented individually, would cause a compilation error? (Choose all that apply)\\n\\begin{verbatim}\npublic class Test {\n    static int sVar = 1;\n    int iVar = 2;\n\n    public static void method1() {\n        // System.out.println(iVar);\n    }\n\n    public void method2() {\n        // static int lVar = 3;\n        System.out.println(sVar);\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|System.out.println(iVar);| in \\verb|method1|","1":"\\verb|static int lVar = 3;| in \\verb|method2|","2":"\\verb|System.out.println(sVar);| in \\verb|method2|","3":"The declaration of \\verb|iVar|"},"answers":["0","1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100714,"difficulty":"medium","type":"single","question":"What will be printed by the following code?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        int x;\n        // line 1\n        if (args.length > 0) {\n            x = 5;\n        } \n        // line 2\n        // System.out.println(x);\n    }\n}\n\\end{verbatim}","choices":{"0":"If line 2 is uncommented, the code will compile and print 0 if no arguments are passed.","1":"If line 2 is uncommented, the code will compile and print 5 if at least one argument is passed.","2":"If line 2 is uncommented, the code will fail to compile regardless of arguments passed.","3":"If line 1 is changed to \\verb|int x=0;|, the uncommented code will compile."},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100715,"difficulty":"medium","type":"multiple","question":"Given the code below, which statements are true? (Choose all that apply)\\n\\begin{verbatim}\npublic class MyClass {\n    static String name = \"Class\";\n    String type = \"Instance\";\n\n    public MyClass() {\n        String name = \"Constructor\";\n    }\n\n    {\n        // Initializer block\n        System.out.print(name + \",\");\n    }\n\n    public void printInfo() {\n        String type = \"Method\";\n        System.out.print(this.type + \",\");\n        System.out.print(type);\n    }\n}\n\\end{verbatim}","choices":{"0":"The code in the instance initializer block refers to the static variable \\verb|name|.","1":"The code in the instance initializer block refers to the local variable \\verb|name| in the constructor.","2":"A call to \\verb|new MyClass().printInfo()| will print \\verb|Class,Instance,Method|.","3":"A call to \\verb|new MyClass().printInfo()| will print \\verb|Instance,Method|.","4":"The line \\verb|String name = \"Constructor\";| shadows the static variable \\verb|name| within the constructor's scope."},"answers":["0","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100716,"difficulty":"medium","type":"single","question":"What is the output of the code?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        for (int i = 0; i < 3; i++) {\n            int x = i * 2;\n            System.out.print(x + \" \");\n        }\n        // What is the value of x here?\n    }\n}\n\\end{verbatim}","choices":{"0":"The code prints \\verb|0 2 4| and the final value of x is 4.","1":"The code prints \\verb|0 2 4| but x is not accessible outside the loop.","2":"The code prints \\verb|0 2 4| and the final value of x is 6.","3":"The code will not compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100717,"difficulty":"medium","type":"single","question":"What is printed?\\n\\begin{verbatim}\npublic class ScopeTest {\n    static String val = \"A\";\n    static {\n        val = \"B\";\n    }\n    {\n        val = \"C\";\n    }\n\n    public ScopeTest() {\n        val = \"D\";\n    }\n\n    public static void main(String[] args) {\n        System.out.print(val);\n        new ScopeTest();\n        System.out.print(val);\n    }\n}\n\\end{verbatim}","choices":{"0":"BD","1":"BC","2":"BDD","3":"BCD"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100718,"difficulty":"medium","type":"multiple","question":"Which of these variable declarations are valid at the class level (as instance or static variables)? (Choose all that apply)","choices":{"0":"\\verb|private static final int COUNT;|","1":"\\verb|protected String name = \"test\";|","2":"\\verb|int value;|","3":"\\verb|synchronized int lock;|","4":"\\verb|abstract int method();|"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100719,"difficulty":"medium","type":"single","question":"What is the result of compiling and running the following code?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        int x = 1;\n        if (x > 0) {\n            String x = \"hello\";\n            System.out.println(x);\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints \"hello\".","1":"It prints \"1\".","2":"It fails to compile.","3":"It throws a runtime exception."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100720,"difficulty":"medium","type":"single","question":"How many objects are eligible for garbage collection when line //HERE is reached?\\n\\begin{verbatim}\npublic class GCScope {\n    public static void main(String[] args) {\n        GCScope g1 = new GCScope();\n        GCScope g2 = new GCScope();\n        g1 = g2;\n        g2 = null;\n        //HERE\n    }\n}\n\\end{verbatim}","choices":{"0":"0","1":"1","2":"2","3":"3"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100721,"difficulty":"hard","type":"single","question":"What is the result of the following code?\\n\\begin{verbatim}\npublic class Test {\n    final int value1 = 10;\n    final int value2;\n    static final int value3 = 30;\n    static final int value4;\n\n    {\n        value2 = 20;\n        // value4 = 40; // Line A\n    }\n\n    static {\n        // value2 = 25; // Line B\n        value4 = 40;\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"Uncommenting Line A will cause a compilation error.","2":"Uncommenting Line B will cause a compilation error.","3":"The code fails to compile as is."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100722,"difficulty":"hard","type":"single","question":"What will the following code print?\\n\\begin{verbatim}\npublic class ScopePuzzle {\n    int x = 5;\n\n    public static void main(String[] args) {\n        ScopePuzzle p = new ScopePuzzle();\n        p.go();\n    }\n\n    void go() {\n        int x;\n        go2();\n        // System.out.println(x); // Line X\n    }\n\n    void go2() {\n        x = 10;\n    }\n}\n\\end{verbatim}","choices":{"0":"If Line X is uncommented, the code will print 10.","1":"If Line X is uncommented, the code will print 5.","2":"If Line X is uncommented, the code will fail to compile.","3":"The code as is will compile and run without error."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100723,"difficulty":"hard","type":"single","question":"Consider the following class. What is the outcome?\\n\\begin{verbatim}\npublic class Test {\n    static {\n        i = 20; // Forward reference is ok in assignment\n    }\n    static int i = 10;\n\n    public static void main(String[] args) {\n        System.out.println(i);\n    }\n}\n\\end{verbatim}","choices":{"0":"20","1":"10","2":"Compilation fails due to illegal forward reference.","3":"0"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100724,"difficulty":"hard","type":"multiple","question":"Which of these code blocks will fail to compile? (Choose all that apply)","choices":{"0":"\\begin{verbatim}\nint x = 10;\n{\n  int y = x;\n  int x = 20; \n}\n\\end{verbatim}","1":"\\begin{verbatim}\n{\n  String s = \"a\";\n}\n{\n  String s = \"b\";\n}\n\\end{verbatim}","2":"\\begin{verbatim}\nfor(int i=0; i<5; i++) {\n  String i = \"A\";\n}\n\\end{verbatim}","3":"\\begin{verbatim}\ntry {\n  int v = 1;\n} catch(Exception e) {\n  int v = 2;\n}\n\\end{verbatim}"},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100725,"difficulty":"hard","type":"single","question":"What is the output of this program?\\n\\begin{verbatim}\npublic class LoopScope {\n    public static void main(String[] args) {\n        int i=0;\n        for(int j=0; j<3; j++) {\n            i = i + j;\n        }\n        // System.out.println(i + j); // Line 1\n    }\n}\n\\end{verbatim}","choices":{"0":"The program compiles fine as is.","1":"If Line 1 is uncommented, the code compiles and prints 3.","2":"If Line 1 is uncommented, the code fails to compile because 'j' is out of scope.","3":"If Line 1 is uncommented, the code fails to compile because 'i' is out of scope."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100726,"difficulty":"hard","type":"single","question":"What is printed to the console?\\n\\begin{verbatim}\npublic class TrickyScope {\n    static TrickyScope ts = new TrickyScope();\n    static int val = 10;\n    {\n        // instance initializer\n        val = 20;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(val);\n    }\n}\n\\end{verbatim}","choices":{"0":"10","1":"20","2":"0","3":"Compilation fails."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100727,"difficulty":"hard","type":"single","question":"What is the result of running this code?\\n\\begin{verbatim}\npublic class Test {\n    static int x = getX();\n    static int getX() { return y; }\n    static int y = 10;\n\n    public static void main(String[] args) {\n        System.out.println(x + \",\" + y);\n    }\n}\n\\end{verbatim}","choices":{"0":"10,10","1":"0,10","2":"Compilation fails because of illegal forward reference.","3":"An ExceptionInInitializerError is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100728,"difficulty":"hard","type":"multiple","question":"Which statements about the following code are correct? (Choose all that apply)\\n\\begin{verbatim}\npublic class Outer {\n    private String name = \"Outer\";\n\n    class Inner {\n        private String name = \"Inner\";\n\n        void printNames() {\n            String name = \"Local\";\n            System.out.println(name);\n            System.out.println(this.name);\n            System.out.println(Outer.this.name);\n        }\n    }\n\n    public static void main(String... args) {\n        new Outer().new Inner().printNames();\n    }\n}\n\\end{verbatim}","choices":{"0":"The code will fail to compile.","1":"The output will be: Local","2":"The output will be: Local Inner Outer","3":"\\verb|this.name| refers to the instance variable of the \\verb|Inner| class.","4":"\\verb|Outer.this.name| is used to access the instance variable of the enclosing \\verb|Outer| class."},"answers":["2","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100729,"difficulty":"hard","type":"single","question":"What is the result of compiling the following class?\\n\\begin{verbatim}\npublic class ScopeTest {\n    int a = 1;\n    public static void main(String[] args) {\n        int a = 2;\n        ScopeTest st = new ScopeTest();\n        st.run();\n    }\n    void run() {\n        System.out.println(a);\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation is successful, and it prints 1.","1":"Compilation is successful, and it prints 2.","2":"Compilation fails because 'a' is ambiguous in run().","3":"Compilation fails because main() cannot access the instance variable 'a'."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100800,"difficulty":"easy","type":"single","question":"What is the value of the variable `result` after the following code is executed?\\n\\begin{verbatim}\nint result = 10 + 5 * 2;\n\\end{verbatim}","choices":{"0":"30","1":"20","2":"25","3":"17"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100801,"difficulty":"easy","type":"single","question":"Which operator is used to test if two object references point to the same object instance?","choices":{"0":"=","1":"==","2":".equals()","3":"instanceof"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100802,"difficulty":"easy","type":"single","question":"What is the output of the following code snippet?\\n\\begin{verbatim}\nint x = 5;\nx++;\nSystem.out.println(x);\n\\end{verbatim}","choices":{"0":"5","1":"6","2":"4","3":"The code does not compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100803,"difficulty":"easy","type":"multiple","question":"Which of the following are considered logical operators in Java? (Choose all that apply)","choices":{"0":"&&","1":"|","2":"!","3":"=="},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100804,"difficulty":"easy","type":"single","question":"What is the result of the expression `7 % 3`?","choices":{"0":"1","1":"2","2":"2.33","3":"0"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100805,"difficulty":"easy","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\nString s = \"Value is \" + 10;\nSystem.out.println(s);\n\\end{verbatim}","choices":{"0":"Value is 10","1":"Compilation fails.","2":"Value is ","3":"A runtime exception is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100806,"difficulty":"medium","type":"single","question":"What values are printed by this code?\\n\\begin{verbatim}\nint x = 5;\nint y = ++x;\nint z = x++;\nSystem.out.println(y + \", \" + z);\n\\end{verbatim}","choices":{"0":"6, 7","1":"5, 6","2":"6, 5","3":"6, 6"},"answers":["3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100807,"difficulty":"medium","type":"single","question":"Examine the following code. What is the output?\\n\\begin{verbatim}\nint a = 10;\nint b = 20;\nboolean result = a > 5 || b++ > 20;\nSystem.out.println(result + \", \" + b);\n\\end{verbatim}","choices":{"0":"true, 20","1":"true, 21","2":"false, 20","3":"false, 21"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100808,"difficulty":"medium","type":"single","question":"What is the result of compiling and running this class?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        byte b = 10;\n        b = b + 5;\n        System.out.println(b);\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints 15.","1":"It prints 10.","2":"It fails to compile.","3":"It throws a runtime exception."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100809,"difficulty":"medium","type":"single","question":"What is the output of the following code snippet?\\n\\begin{verbatim}\nSystem.out.println(\"Result: \" + 5 + 3);\n\\end{verbatim}","choices":{"0":"Result: 8","1":"Result: 53","2":"Compilation fails.","3":"Result: 5 3"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100810,"difficulty":"medium","type":"multiple","question":"Which of the following expressions will evaluate to `true`? (Choose all that apply)","choices":{"0":"\\verb|new String(\"test\") == new String(\"test\")|","1":"\\verb|\"test\" instanceof String|","2":"\\verb|null instanceof Object|","3":"\\verb|! (10 <= 9)|"},"answers":["1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100811,"difficulty":"medium","type":"single","question":"What is the final value of `x`?\\n\\begin{verbatim}\nint x = 10;\nx *= 2 + 3;\n\\end{verbatim}","choices":{"0":"23","1":"26","2":"50","3":"The code does not compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100812,"difficulty":"medium","type":"single","question":"What is the output of the code?\\n\\begin{verbatim}\nint a = 10;\nString result = a > 10 ? \"Greater\" : \"Not Greater\";\nSystem.out.println(result);\n\\end{verbatim}","choices":{"0":"Greater","1":"Not Greater","2":"Compilation fails.","3":"A runtime exception is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100813,"difficulty":"medium","type":"single","question":"What is the output of the following bitwise operation?\\n\\begin{verbatim}\nint x = 5; // binary 101\nint y = 3; // binary 011\nSystem.out.println(x & y);\n\\end{verbatim}","choices":{"0":"1","1":"3","2":"5","3":"7"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100814,"difficulty":"medium","type":"multiple","question":"Which of the following code snippets will compile successfully? (Choose all that apply)","choices":{"0":"\\verb|byte b = 1; b = b + 1;|","1":"\\verb|byte b = 1; b += 1;|","2":"\\verb|int i = 1; float f = i;|","3":"\\verb|float f = 1.0; int i = f;|"},"answers":["1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100815,"difficulty":"medium","type":"single","question":"What is printed by this code?\\n\\begin{verbatim}\nboolean a = true;\nboolean b = false;\nboolean c = true;\n\nSystem.out.println(a || b && c);\n\\end{verbatim}","choices":{"0":"true","1":"false","2":"The code does not compile.","3":"The result is ambiguous."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100816,"difficulty":"medium","type":"single","question":"What is the output of the program?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        int x = 10, y = 10;\n        boolean b = x == y;\n        if (b = false) {\n            System.out.println(\"Not Equal\");\n        } else {\n            System.out.println(\"Equal\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"Not Equal","1":"Equal","2":"Compilation fails.","3":"A runtime exception occurs."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100817,"difficulty":"medium","type":"multiple","question":"Which statements are true about operator associativity in Java? (Choose all that apply)","choices":{"0":"Most binary operators are left-associative.","1":"The assignment operator (=) is left-associative.","2":"The ternary operator (?:) is right-associative.","3":"Unary operators like ++ and -- are right-associative."},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100818,"difficulty":"medium","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\nint x = 1;\nSystem.out.println(x > 0 ^ x < 2);\n\\end{verbatim}","choices":{"0":"true","1":"false","2":"1","3":"Compilation fails."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100819,"difficulty":"medium","type":"multiple","question":"Which of these operators have the highest precedence? (Choose all that apply from the list)","choices":{"0":"() (parentheses)","1":"++ (postfix)","2":"++ (prefix)","3":"* (multiplication)"},"answers":["0","1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100820,"difficulty":"medium","type":"single","question":"What is the output?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        boolean keepGoing = true;\n        int result = 15, i = 10;\n        do {\n            i--;\n            if (i == 8) keepGoing = false;\n            result -= 2;\n        } while (keepGoing);\n        System.out.println(result);\n    }\n}\n\\end{verbatim}","choices":{"0":"11","1":"9","2":"7","3":"5"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100821,"difficulty":"hard","type":"single","question":"What is the final value of `a`?\\n\\begin{verbatim}\nint a = 2;\na = a++ * a++;\n\\end{verbatim}","choices":{"0":"4","1":"6","2":"8","3":"9"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100822,"difficulty":"hard","type":"single","question":"What is printed by the following code?\\n\\begin{verbatim}\nint i = 10;\nint j = 20;\nint k = j += i / 5;\nSystem.out.println(i + \" : \" + j + \" : \" + k);\n\\end{verbatim}","choices":{"0":"10 : 22 : 22","1":"10 : 30 : 30","2":"10 : 22 : 10","3":"10 : 22 : 20"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100823,"difficulty":"hard","type":"single","question":"What is the result of this code snippet?\\n\\begin{verbatim}\nint mask = 0x000F;\nint value = 0x2222;\nSystem.out.println(value & mask);\n\\end{verbatim}","choices":{"0":"15","1":"2","2":"0","3":"2222"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100824,"difficulty":"hard","type":"multiple","question":"Given the method `isTrue()`, which expressions are guaranteed NOT to cause a `NullPointerException`? (Choose all that apply)\\n\\begin{verbatim}\npublic boolean isTrue() {\n    System.out.print(\"T\");\n    return true;\n}\npublic boolean isFalse() {\n    System.out.print(\"F\");\n    return false;\n}\nString s = null;\n\\end{verbatim}","choices":{"0":"\\verb|isTrue() || s.length() > 0|","1":"\\verb|isFalse() && s.length() > 0|","2":"\\verb|isFalse() | s.length() > 0|","3":"\\verb|s != null && s.length() > 0|"},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100825,"difficulty":"hard","type":"single","question":"What is the output?\\n\\begin{verbatim}\nint x = 0;\nx = x++;\nSystem.out.println(x);\n\\end{verbatim}","choices":{"0":"0","1":"1","2":"Compilation fails.","3":"The behavior is undefined."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100826,"difficulty":"hard","type":"single","question":"What is the output of the following program?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        int x = 5;\n        boolean b1 = true;\n        boolean b2 = false;\n        if ((x == 4) && !b2 )\n            System.out.print(\"1 \");\n        System.out.print(\"2 \");\n        if ((b2 = true) && b1 )\n            System.out.print(\"3 \");\n    }\n}\n\\end{verbatim}","choices":{"0":"2","1":"2 3","2":"1 2 3","3":"1 2"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100827,"difficulty":"hard","type":"single","question":"Which statement best describes the evaluation of the following expression?\\n\\begin{verbatim}\nint a = 1, b = 2, c = 3, d = 4;\nint result = a + b * c / d > a ? b + c : d - a;\n\\end{verbatim}","choices":{"0":"The expression evaluates to 5.","1":"The expression evaluates to 3.","2":"The multiplication `b*c` is performed first.","3":"The ternary operator `? :` has higher precedence than `>`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100828,"difficulty":"hard","type":"single","question":"What is the output of the code below?\\n\\begin{verbatim}\nint i = -1;\ni = i >>> 30;\nSystem.out.println(i);\n\\end{verbatim}","choices":{"0":"-1","1":"0","2":"1","3":"3"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100829,"difficulty":"hard","type":"multiple","question":"What is the result of the following code? (Choose all that apply)\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        int i = 0;\n        boolean t = true;\n        boolean f = false, b;\n        b = (t || ((i++) == 0));\n        System.out.println(i);\n        b = (f || ((i++) == 0));\n        System.out.println(i);\n    }\n}\n\\end{verbatim}","choices":{"0":"The first output is 0.","1":"The first output is 1.","2":"The second output is 0.","3":"The second output is 1."},"answers":["0","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100900,"difficulty":"easy","type":"single","question":"What is the output of the following code snippet?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        int score = 85;\n        char grade;\n        if (score >= 90) {\n            grade = 'A';\n        } else if (score >= 80) {\n            grade = 'B';\n        } else {\n            grade = 'C';\n        }\n        System.out.println(grade);\n    }\n}\n\\end{verbatim}","choices":{"0":"'A'","1":"'B'","2":"'C'","3":"The code will not compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100901,"difficulty":"easy","type":"single","question":"What is printed by the following code?\\n\\begin{verbatim}\npublic class SwitchTest {\n    public static void main(String[] args) {\n        int day = 3;\n        String dayName;\n        switch (day) {\n            case 1: dayName = \"Monday\"; break;\n            case 2: dayName = \"Tuesday\"; break;\n            case 3: dayName = \"Wednesday\"; break;\n            case 4: dayName = \"Thursday\"; break;\n            default: dayName = \"Unknown\";\n        }\n        System.out.println(dayName);\n    }\n}\n\\end{verbatim}","choices":{"0":"Tuesday","1":"Wednesday","2":"Thursday","3":"Unknown"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100902,"difficulty":"easy","type":"single","question":"Which statement best describes the following code?\\n\\begin{verbatim}\nint x = 10;\nboolean y = false;\nif (x = 5) { // note the single equals sign\n    y = true;\n}\nSystem.out.println(y);\n\\end{verbatim}","choices":{"0":"The code will not compile because the condition of an `if` statement must be a boolean.","1":"The code will compile and print `false`.","2":"The code will compile and print `true`.","3":"The code will throw a runtime exception."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100903,"difficulty":"easy","type":"single","question":"Consider the following code. What will be the value of `result`?\\n\\begin{verbatim}\nint temperature = 25;\nString result = temperature > 30 ? \"Hot\" : \"Warm\";\n\\end{verbatim}","choices":{"0":"`\"Hot\"`","1":"`\"Warm\"`","2":"The code does not compile.","3":"`null`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100904,"difficulty":"easy","type":"single","question":"What is the output of this code snippet?\\n\\begin{verbatim}\nboolean isRaining = true;\nboolean haveUmbrella = false;\n\nif (isRaining) {\n    System.out.print(\"It's raining. \");\n    if (haveUmbrella) {\n        System.out.print(\"Using umbrella.\");\n    }\n} else {\n    System.out.print(\"It's not raining.\");\n}\n\\end{verbatim}","choices":{"0":"It's raining. Using umbrella.","1":"It's raining. ","2":"It's not raining.","3":"The code has a compilation error."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100905,"difficulty":"easy","type":"multiple","question":"Which of the following are valid conditional constructs in Java? (Choose all that apply)","choices":{"0":"`if (condition) { ... }`","1":"`if (condition) { ... } else { ... }`","2":"`switch (value) { ... }`","3":"`when (value) { ... }`","4":"`check (condition) { ... }`"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100906,"difficulty":"medium","type":"single","question":"What is the output of the following Java program?\\n\\begin{verbatim}\npublic class FallThrough {\n    public static void main(String[] args) {\n        int code = 2;\n        switch (code) {\n            case 1:\n                System.out.print(\"A\");\n            case 2:\n                System.out.print(\"B\");\n            case 3:\n                System.out.print(\"C\");\n                break;\n            default:\n                System.out.print(\"D\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"B","1":"BC","2":"BCD","3":"The code will not compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100907,"difficulty":"medium","type":"single","question":"Analyze the following code. What will be printed to the console?\\n\\begin{verbatim}\npublic class DanglingElse {\n    public static void main(String[] args) {\n        boolean a = false;\n        boolean b = false;\n        if (a)\n            if (b)\n                System.out.println(\"Inner if\");\n        else\n            System.out.println(\"Outer else\");\n    }\n}\n\\end{verbatim}","choices":{"0":"Inner if","1":"Outer else","2":"Nothing is printed.","3":"The code fails to compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100908,"difficulty":"medium","type":"single","question":"What is the output of the following code snippet?\\n\\begin{verbatim}\nboolean flag = false;\nif (flag = true) {\n    System.out.println(\"true\");\n} else {\n    System.out.println(\"false\");\n}\n\\end{verbatim}","choices":{"0":"`true`","1":"`false`","2":"The code will not compile because `flag = true` is not a boolean expression.","3":"The code will compile but will throw a runtime exception."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100909,"difficulty":"medium","type":"single","question":"Which line of code will cause a compilation error?\\n\\begin{verbatim}\npublic class ScopeTest {\n    public void process(int amount) { // line 1\n        int initial = 10;            // line 2\n        if (amount > 100) {          // line 3\n            String message = \"High\"; // line 4\n        }                            // line 5\n        initial = initial + 20;      // line 6\n        System.out.println(message); // line 7\n    }\n}\n\\end{verbatim}","choices":{"0":"line 2","1":"line 4","2":"line 6","3":"line 7"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100910,"difficulty":"medium","type":"single","question":"Examine the following code. What is the result?\\n\\begin{verbatim}\nString s1 = \"Java\";\nString s2 = new String(\"Java\");\nString s3 = \"Java\";\n\nif (s1 == s2) {\n    System.out.print(\"A\");\n}\nif (s1 == s3) {\n    System.out.print(\"B\");\n}\nif (s1.equals(s2)) {\n    System.out.print(\"C\");\n}\n\\end{verbatim}","choices":{"0":"ABC","1":"BC","2":"AC","3":"C"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100911,"difficulty":"medium","type":"single","question":"Consider the methods `isTrue()` and `isFalse()`. What is the output of the `main` method?\\n\\begin{verbatim}\npublic class ShortCircuit {\n    static boolean isTrue() {\n        System.out.print(\"T\");\n        return true;\n    }\n    static boolean isFalse() {\n        System.out.print(\"F\");\n        return false;\n    }\n    public static void main(String[] args) {\n        if (isFalse() && isTrue()) {\n            // do nothing\n        }\n        System.out.print(\" \");\n        if (isTrue() || isFalse()) {\n            // do nothing\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"F T","1":"FT T","2":"F TF","3":"F T"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100912,"difficulty":"medium","type":"single","question":"What is the result of executing the following code?\\n\\begin{verbatim}\nString fruit = \"apple\";\nswitch (fruit) {\n    case \"apple\":\n        System.out.print(\"A\");\n    case \"avocado\":\n        System.out.print(\"V\");\n    default:\n        System.out.print(\"O\");\n    case \"apricot\":\n        System.out.print(\"P\");\n}\n\\end{verbatim}","choices":{"0":"AVOP","1":"A","2":"AP","3":"The code will not compile due to the position of the default case."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100913,"difficulty":"medium","type":"single","question":"What happens when you try to compile and run this code?\\n\\begin{verbatim}\npublic class DuplicateCase {\n    public static void main(String[] args) {\n        char grade = 'B';\n        final char A = 'A';\n        switch (grade) {\n            case A:\n                System.out.println(\"Great\");\n                break;\n            case 'B':\n                System.out.println(\"Good\");\n                break;\n            case 'B': // duplicate\n                System.out.println(\"Okay\");\n                break;\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"It compiles and prints `Good`.","1":"It compiles and prints `Okay`.","2":"It fails to compile.","3":"It compiles but throws a runtime exception."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100914,"difficulty":"medium","type":"single","question":"What is the value of `z` after this code executes?\\n\\begin{verbatim}\nint x = 5;\nint y = 10;\nint z = x > 2 ? y > 5 ? 100 : 200 : 300;\n\\end{verbatim}","choices":{"0":"100","1":"200","2":"300","3":"The code is invalid and will not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100915,"difficulty":"medium","type":"single","question":"Consider the following code snippet. What is the output?\\n\\begin{verbatim}\nint x = 1;\nif (x > 5) {\n    System.out.println(\"A\");\n}\nelse {\n    System.out.println(\"B\");\n} else {\n    System.out.println(\"C\");\n}\n\\end{verbatim}","choices":{"0":"A","1":"B","2":"C","3":"Compilation fails."},"answers":["3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100916,"difficulty":"medium","type":"single","question":"What is the result of the following code snippet?\\n\\begin{verbatim}\nint x = 0; \nif (x) { \n    System.out.println(\"True\"); \n} else { \n    System.out.println(\"False\"); \n}\n\\end{verbatim}","choices":{"0":"True","1":"False","2":"The code will not compile.","3":"The code throws an exception at runtime."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100917,"difficulty":"medium","type":"multiple","question":"Which of the following data types are permissible for a `switch` statement expression in Java 8? (Choose all that apply)","choices":{"0":"`byte` and `Byte`","1":"`long` and `Long`","2":"`String`","3":"`char` and `Character`","4":"`double` and `Double`","5":"enum types","6":"`boolean` and `Boolean`"},"answers":["0","2","3","5"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100918,"difficulty":"medium","type":"multiple","question":"Which statements are true about the `default` block within a `switch` statement? (Choose all that apply)","choices":{"0":"It is mandatory and must appear at the end.","1":"It can be placed anywhere within the `switch` block.","2":"Execution will fall through the `default` block if it is not the last case and does not have a `break` statement.","3":"It executes only when no other `case` label matches the expression's value.","4":"A `switch` statement cannot have more than one `default` block."},"answers":["1","2","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100919,"difficulty":"medium","type":"multiple","question":"Which of the following will compile successfully? (Choose all that apply)","choices":{"0":"\\begin{verbatim}int x = 1; if(x) {}\n\\end{verbatim}","1":"\\begin{verbatim}boolean b = true; if(b=false) {}\n\\end{verbatim}","2":"\\begin{verbatim}if(true) if(false) ; else System.out.println(\"a\");\n\\end{verbatim}","3":"\\begin{verbatim}byte b = 10; switch(b) { case 1000: break; }\n\\end{verbatim}"},"answers":["1","2","3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100920,"difficulty":"medium","type":"multiple","question":"Given the following code, which statements are true? (Choose all that apply)\\n\\begin{verbatim}\npublic class LogicCheck {\n    public static void main(String[] args) {\n        int a = 10;\n        int b = 20;\n        if (a > 5 | ++b > 20) {\n            // empty block\n        }\n        System.out.println(\"b = \" + b);\n    }\n}\n\\end{verbatim}","choices":{"0":"The code will print `b = 20`.","1":"The code will print `b = 21`.","2":"The expression `++b > 20` is guaranteed to be evaluated.","3":"If `|` were changed to `||`, the output would be `b = 20`.","4":"The code will not compile."},"answers":["1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100921,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run the following class?\\n\\begin{verbatim}\npublic class SwitchCaseConstant {\n    public static void main(String[] args) {\n        final int a = 1;\n        final int b;\n        b = 2;\n        int x = 0;\n        switch (x) {\n            case a: // case 1\n                System.out.print(\"A\");\n            case b: // case 2\n                System.out.print(\"B\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `A`.","1":"It prints `B`.","2":"It prints `AB`.","3":"A compilation error occurs."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100922,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\npublic class TestNull {\n    public static void main(String[] args) {\n        String s = null;\n        switch (s) {\n            case \"test\":\n                System.out.println(\"test\");\n                break;\n            case \"hello\":\n                System.out.println(\"hello\");\n                break;\n            default:\n                System.out.println(\"default\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"test","1":"default","2":"The code does not compile.","3":"A `NullPointerException` is thrown at runtime."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100923,"difficulty":"hard","type":"single","question":"What happens when this code is executed?\\n\\begin{verbatim}\npublic class Unboxing {\n    public static void main(String[] args) {\n        Integer i = null;\n        if (i) { // requires unboxing\n            System.out.println(\"True\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `True`.","1":"It does not print anything.","2":"It fails to compile because an `Integer` cannot be used as a condition.","3":"It throws a `NullPointerException` at runtime."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100924,"difficulty":"hard","type":"single","question":"What are the final values of `x` and `y` after this code snippet runs?\\n\\begin{verbatim}\nint x = 10;\nint y = 20;\nif (++x <= 10 && --y > 15) {\n    x++;\n    y++;\n}\n\\end{verbatim}","choices":{"0":"`x` is 11, `y` is 20","1":"`x` is 11, `y` is 19","2":"`x` is 12, `y` is 20","3":"`x` is 10, `y` is 20"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100925,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\npublic enum Color { RED, GREEN, BLUE }\n\npublic class EnumSwitch {\n    public static void main(String[] args) {\n        Color color = Color.BLUE;\n        switch (color) {\n            case RED:\n                System.out.print(\"R\");\n                break;\n            case GREEN:\n                System.out.print(\"G\");\n                break;\n            default:\n                System.out.print(\"X\");\n            case BLUE:\n                System.out.print(\"B\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"B","1":"XB","2":"X","3":"A compilation error occurs."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100926,"difficulty":"hard","type":"single","question":"Examine this code carefully. What is the result?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        Integer i = 128;\n        Integer j = 128;\n        int k = 128;\n\n        if (i == j) {\n            System.out.print(\"A\");\n        }\n        if (i == k) {\n            System.out.print(\"B\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"A","1":"B","2":"AB","3":"No output is produced."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100927,"difficulty":"hard","type":"single","question":"Which statement best explains why this code fails to compile?\\n\\begin{verbatim}\nbyte b = 10;\nswitch (b) {\n    case 10:\n        System.out.println(\"10\");\n        break;\n    case 128:\n        System.out.println(\"128\");\n        break;\n    default:\n        System.out.println(\"Other\");\n}\n\\end{verbatim}","choices":{"0":"A `switch` statement cannot use a `byte` as its expression.","1":"The `case` label `128` is a duplicate of a previous case.","2":"The `case` label `128` is out of range for the data type `byte`.","3":"The `break` statement in the first case is missing a semicolon."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100928,"difficulty":"hard","type":"multiple","question":"Which of the following code snippets will fail to compile? (Choose all that apply)","choices":{"0":"\\begin{verbatim}short s = 1; switch(s) { case 1: ; }\n\\end{verbatim}","1":"\\begin{verbatim}String str = \"a\"; switch(str) { }\n\\end{verbatim}","2":"\\begin{verbatim}long l = 1; switch(l) { case 1: ; }\n\\end{verbatim}","3":"\\begin{verbatim}final int x = 1; int y = 1; switch(y) { case x: ; }\n\\end{verbatim}","4":"\\begin{verbatim}int z = 1; switch(z) { case z: ; }\n\\end{verbatim}"},"answers":["2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100929,"difficulty":"hard","type":"multiple","question":"What is true about the following code snippet? (Choose all that apply)\\n\\begin{verbatim}\npublic class Tricky {\n    public static void main(String[] args) {\n        boolean a = true, b = false, c = false;\n        if ( a || (b=true) && (c=true) )\n            ;\n        System.out.println(a + \" \" + b + \" \" + c);\n    }\n}\n\\end{verbatim}","choices":{"0":"The output is `true false false`.","1":"The output is `true true true`.","2":"The variable `b` is assigned `true` during the evaluation of the `if` condition.","3":"The variable `c` is assigned `true` during the evaluation of the `if` condition.","4":"The code does not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101000,"difficulty":"easy","type":"single","question":"What is the output of the following code snippet?\\n\\begin{verbatim}\npublic class ForLoop {\n    public static void main(String[] args) {\n        for (int i = 0; i < 3; i++) {\n            System.out.print(i + \" \");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"0 1 2 ","1":"0 1 2 3 ","2":"1 2 ","3":"1 2 3 "},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101001,"difficulty":"easy","type":"single","question":"How many times will the string `\"Hello\"` be printed?\\n\\begin{verbatim}\npublic class WhileLoop {\n    public static void main(String[] args) {\n        int count = 5;\n        while (count > 1) {\n            System.out.println(\"Hello\");\n            count--;\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"5","1":"4","2":"1","3":"0"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101002,"difficulty":"easy","type":"single","question":"What is the output of the `do-while` loop in this code?\\n\\begin{verbatim}\npublic class DoWhileTest {\n    public static void main(String[] args) {\n        int x = 10;\n        do {\n            System.out.print(x);\n        } while (x < 10);\n    }\n}\n\\end{verbatim}","choices":{"0":"10","1":"Nothing is printed.","2":"The code enters an infinite loop.","3":"The code will not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101003,"difficulty":"easy","type":"single","question":"What will the following enhanced for loop print?\\n\\begin{verbatim}\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class EnhancedFor {\n    public static void main(String[] args) {\n        List<String> names = new ArrayList<>();\n        names.add(\"Al\");\n        names.add(\"Bea\");\n        for (String name : names) {\n            System.out.print(name);\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"Al","1":"Bea","2":"AlBea","3":"The code produces a compiler error."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101004,"difficulty":"easy","type":"single","question":"What does this code output?\\n\\begin{verbatim}\npublic class BreakTest {\n    public static void main(String[] args) {\n        for (int i = 0; i < 5; i++) {\n            if (i == 3) {\n                break;\n            }\n            System.out.print(i);\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"0123","1":"012","2":"0124","3":"01234"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101005,"difficulty":"easy","type":"multiple","question":"Which of the following are valid looping constructs in Java? (Choose all that apply)","choices":{"0":"`for (int i=0; i<10; i++)`","1":"`while (true)`","2":"`do { } while (false)`","3":"`repeat (10)`","4":"`loop { } until (condition)`"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101006,"difficulty":"medium","type":"single","question":"What is the output of the following program?\\n\\begin{verbatim}\npublic class ContinueTest {\n    public static void main(String[] args) {\n        for (int i = 0; i < 5; i++) {\n            if (i % 2 == 0) {\n                continue;\n            }\n            System.out.print(i);\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"024","1":"13","2":"135","3":"01234"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101007,"difficulty":"medium","type":"single","question":"What happens when you try to compile and run this code?\\n\\begin{verbatim}\npublic class LoopScope {\n    public static void main(String[] args) {\n        for (int i = 0; i < 5; i++) {\n            // some logic\n        }\n        System.out.println(i);\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles and prints `5`.","1":"The code compiles and prints `4`.","2":"The code fails to compile.","3":"The code compiles but throws a runtime exception."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101008,"difficulty":"medium","type":"single","question":"How many times does the following loop execute its body?\\n\\begin{verbatim}\nfor (int i = 0, j = 10; i < j; i++, j--) {\n    System.out.println(\"Looping...\");\n}\n\\end{verbatim}","choices":{"0":"10","1":"0","2":"5","3":"It's an infinite loop."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101009,"difficulty":"medium","type":"single","question":"What is the result of the following code snippet?\\n\\begin{verbatim}\nint i = 0;\nfor ( ; i < 2; i=i+5) {\n    if (i < 5)\n        continue;\n    i = i + 3;\n}\nSystem.out.println(i);\n\\end{verbatim}","choices":{"0":"0","1":"5","2":"8","3":"Compilation fails."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101010,"difficulty":"medium","type":"single","question":"What is printed by this nested loop?\\n\\begin{verbatim}\npublic class NestedLoop {\n    public static void main(String[] args) {\n        for (int i = 0; i < 2; i++) {\n            for (int j = 2; j > 0; j--) {\n                if (j == 1)\n                    break;\n                System.out.print(j);\n            }\n            System.out.print(i);\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"2021","1":"202","2":"21021","3":"210"},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101011,"difficulty":"medium","type":"single","question":"Which statement about this code is true?\\n\\begin{verbatim}\nwhile(true) {\n    System.out.println(\"Inside\");\n    break;\n    System.out.println(\"After break\");\n}\n\\end{verbatim}","choices":{"0":"It prints `Inside` once.","1":"It prints `Inside` infinitely.","2":"It fails to compile.","3":"It prints `Inside` and then `After break` once."},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101012,"difficulty":"medium","type":"single","question":"What is the result of executing this code?\\n\\begin{verbatim}\nint a = 0;\ndo {\n    a++;\n} while (false);\nSystem.out.println(a);\n\\end{verbatim}","choices":{"0":"0","1":"1","2":"The code does not compile.","3":"An infinite loop occurs."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101013,"difficulty":"medium","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\nfor (int i = 0; i < 10; ) {\n    i = i++;\n    System.out.println(\"Hello\");\n}\n\\end{verbatim}","choices":{"0":"`Hello` is printed 10 times.","1":"`Hello` is printed 9 times.","2":"The code results in an infinite loop.","3":"The code does not compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101014,"difficulty":"medium","type":"single","question":"What happens when executing this code snippet?\\n\\begin{verbatim}\nimport java.util.ArrayList;\nimport java.util.List;\n\nList<String> list = new ArrayList<>();\nlist.add(\"A\"); list.add(\"B\");\nfor (String s : list) {\n    if (\"A\".equals(s)) {\n        list.remove(s);\n    }\n}\nSystem.out.println(list);\n\\end{verbatim}","choices":{"0":"The code prints `[B]`.","1":"The code prints `[A, B]`.","2":"The code throws a `ConcurrentModificationException`.","3":"The code does not compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101015,"difficulty":"medium","type":"single","question":"What will be printed to the console?\\n\\begin{verbatim}\nint x = 10;\nwhile(x > 10) {\n    System.out.println(\"In loop\");\n    x--;\n}\nSystem.out.println(\"Done\");\n\\end{verbatim}","choices":{"0":"In loop\\nDone","1":"Done","2":"An infinite loop occurs.","3":"Compilation fails."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101016,"difficulty":"medium","type":"single","question":"Which for loop is syntactically correct and will terminate?","choices":{"0":"`for( ; ; ) { }`","1":"`for(int i=0; i<1; ) { i++; }`","2":"`for(int i=0; ; i++) { break; }`","3":"`for(int i=0, j=0; i<1; j++) { }`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101017,"difficulty":"medium","type":"multiple","question":"In a standard `for (A; B; C) { D; }` loop, which parts are optional? (Choose all that apply)","choices":{"0":"A (Initialization)","1":"B (Termination Condition)","2":"C (Update Statement)","3":"D (Loop Body)"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101018,"difficulty":"medium","type":"multiple","question":"Which of the following statements are true? (Choose all that apply)","choices":{"0":"A `do-while` loop's body is always executed at least once.","1":"A `while` loop's body might never be executed.","2":"An enhanced for loop can be used to iterate over the elements of any `java.lang.Object`.","3":"In an enhanced for loop `for(Type var : collection)`, the `var` is a copy of the element and modifying it will not change the original collection if the elements are primitives or immutable objects.","4":"`for(;;)` is a valid, infinite loop."},"answers":["0","1","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101019,"difficulty":"medium","type":"multiple","question":"Which code snippets will compile successfully? (Choose all that apply)","choices":{"0":"\\begin{verbatim}for(int i=0; i<1; i++);\n\\end{verbatim}","1":"\\begin{verbatim}int i; for(i=0; ; i++) break;\n\\end{verbatim}","2":"\\begin{verbatim}for(String s : new String[]{\"a\",\"b\"}) ; \n\\end{verbatim}","3":"\\begin{verbatim}do while(true);\n\\end{verbatim}"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101020,"difficulty":"medium","type":"multiple","question":"Given the loop: `for (int i=0; i<10; i++) { /* body */ }`. Which modifications would cause the loop to run infinitely? (Choose all that apply)","choices":{"0":"Replacing `i++` with `i = i`","1":"Replacing `i++` with `i--`","2":"Replacing `<10` with `!=10`","3":"Adding `i = 1;` at the end of the loop body."},"answers":["0","1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101021,"difficulty":"hard","type":"single","question":"What is the output of this code with labeled statements?\\n\\begin{verbatim}\npublic class LabeledBreak {\n    public static void main(String[] args) {\n        outer:\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                if (i == 1) {\n                    break outer;\n                }\n                System.out.print(i + \"\" + j + \" \");\n            }\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"00 01 02 ","1":"00 01 02 20 21 22 ","2":"00 01 02 10 11 12 20 21 22 ","3":"The code does not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101022,"difficulty":"hard","type":"single","question":"What is the output of the following code using a labeled continue?\\n\\begin{verbatim}\npublic class LabeledContinue {\n    public static void main(String[] args) {\n        outer:\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                if (j > i) {\n                    continue outer;\n                }\n                System.out.print(i + \"\" + j + \" \");\n            }\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"00 10 11 20 21 22 ","1":"00 10 11 12 20 21 22 ","2":"00 01 02 10 11 12 20 21 22 ","3":"00 "},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101023,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run this code?\\n\\begin{verbatim}\nimport java.util.List;\n\npublic class NullEnhancedFor {\n    public static void main(String[] args) {\n        List<String> list = null;\n        for (String s : list) {\n            System.out.println(\"This will not be printed\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"It compiles and runs, producing no output.","1":"It fails to compile.","2":"It compiles, but throws a `NullPointerException` at runtime.","3":"It compiles, but throws an `IllegalStateException` at runtime."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101024,"difficulty":"hard","type":"single","question":"Analyze this code. Which statement is true?\\n\\begin{verbatim}\nfinal boolean condition = false;\nwhile (condition) {\n    System.out.println(\"Inside\");\n}\nSystem.out.println(\"Outside\");\n\\end{verbatim}","choices":{"0":"The code compiles and prints `Outside`.","1":"The code fails to compile because of an unreachable statement inside the loop.","2":"The code enters an infinite loop.","3":"The code compiles and runs with no output."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101025,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\nint[] a = {1, 2, 3};\nint[] b = {4, 5, 6};\nfor (int i : a, j : b) {\n    System.out.print(i + j);\n}\n\\end{verbatim}","choices":{"0":"579","1":"142536","2":"The code does not compile.","3":"The code throws a runtime exception."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101026,"difficulty":"hard","type":"single","question":"What will be printed after this code executes?\\n\\begin{verbatim}\nString[] data = {\"a\", \"b\", \"c\"};\nint x = 0;\nfor(;;){\n    try {\n        System.out.print(data[x++]);\n    } catch (ArrayIndexOutOfBoundsException e) {\n        break;\n    }\n}\n\\end{verbatim}","choices":{"0":"abc","1":"ab","2":"a","3":"An infinite loop occurs."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101027,"difficulty":"hard","type":"single","question":"What is the final value of `count`?\\n\\begin{verbatim}\nint count = 0;\nfor (int i = 0; i < 5; i++) {\n    for (int j = 0; j < 5; j++) {\n        if (j == 2)\n            continue;\n        count++;\n    }\n}\n\\end{verbatim}","choices":{"0":"25","1":"20","2":"15","3":"10"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101028,"difficulty":"hard","type":"multiple","question":"Which of the following loops will result in a compilation error? (Choose all that apply)","choices":{"0":"\\begin{verbatim}for(int i=0; false; i++) {}\n\\end{verbatim}","1":"\\begin{verbatim}while(false) { System.out.println(\"Unreachable\"); }\n\\end{verbatim}","2":"\\begin{verbatim}for(int i=0; i<0; i++) System.out.println(\"Unreachable\");\n\\end{verbatim}","3":"\\begin{verbatim}do { System.out.println(\"Reachable\"); } while(false);\n\\end{verbatim}","4":"\\begin{verbatim}int x = 0; for(int i=0; x<1; i++) {}\n\\end{verbatim}"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101029,"difficulty":"hard","type":"multiple","question":"What is true about this code fragment? (Choose all that apply)\\n\\begin{verbatim}\nint x = 0;\nlabelA: for (int i=5; i>0; i--) {\n    int j = 0;\n    labelB: while (j < 5) {\n        if (j == 1) continue labelA;\n        if (i == 2) break labelA;\n        if (i == j) break labelB;\n        System.out.print(i);\n        j++;\n    }\n}\n\\end{verbatim}","choices":{"0":"The number `5` is printed once.","1":"The number `4` is printed once.","2":"The number `3` is printed once.","3":"The number `2` is never printed.","4":"The loop with `labelB` will execute a `break` when `i` is 3 and `j` is 3.","5":"The final output is `543`."},"answers":["0","1","2","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101100,"difficulty":"easy","type":"single","question":"What is the output of the following code snippet?\\n\\begin{verbatim}\npublic class SimpleBreak {\n    public static void main(String[] args) {\n        for (int i = 1; i <= 5; i++) {\n            if (i == 4) {\n                break;\n            }\n            System.out.print(i);\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"123","1":"1234","2":"1235","3":"12"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101101,"difficulty":"easy","type":"single","question":"What is the output of the following code snippet?\\n\\begin{verbatim}\npublic class SimpleContinue {\n    public static void main(String[] args) {\n        for (int i = 1; i <= 5; i++) {\n            if (i == 3) {\n                continue;\n            }\n            System.out.print(i);\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"12","1":"1245","2":"12345","3":"125"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101102,"difficulty":"easy","type":"single","question":"In the following code, what does the `break` statement do?\\n\\begin{verbatim}\nfor (int i = 0; i < 3; i++) {\n    int choice = i;\n    switch(choice) {\n        case 0:\n            System.out.print(\"A\");\n            break;\n        case 1:\n            System.out.print(\"B\");\n            break;\n    }\n    System.out.print(\"-\");\n}\n\\end{verbatim}","choices":{"0":"It terminates the `for` loop.","1":"It terminates the `switch` statement only.","2":"It causes a compilation error.","3":"It terminates both the `switch` and the `for` loop."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101103,"difficulty":"easy","type":"single","question":"What is the output of this code?\\n\\begin{verbatim}\npublic class SimpleLabel {\n    public static void main(String[] args) {\n        myLabel:\n        for (int i = 0; i < 5; i++) {\n            if (i == 2) {\n                break myLabel;\n            }\n            System.out.print(i);\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"01","1":"012","2":"0134","3":"The code does not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101104,"difficulty":"easy","type":"single","question":"Which keyword is used to skip the current iteration of a loop and proceed to the next one?","choices":{"0":"`break`","1":"`return`","2":"`skip`","3":"`continue`"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101105,"difficulty":"easy","type":"multiple","question":"Which of the following keywords can be used with a label in Java? (Choose all that apply)","choices":{"0":"`break`","1":"`continue`","2":"`goto`","3":"`return`","4":"`switch`"},"answers":["0","1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101106,"difficulty":"medium","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\npublic class LabeledBreakTest {\n    public static void main(String[] args) {\n        outer:\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                if (i == 1 && j == 1) {\n                    break outer;\n                }\n                System.out.print(i + \"\" + j + \" \");\n            }\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"00 01 02 10 ","1":"00 01 02 10 20 21 22 ","2":"00 01 02 ","3":"00 01 02 10 11 "},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101107,"difficulty":"medium","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\npublic class LabeledContinueTest {\n    public static void main(String[] args) {\n        outer:\n        for (int i = 1; i <= 2; i++) {\n            for (int j = 1; j <= 2; j++) {\n                if (j == 2) {\n                    continue outer;\n                }\n                System.out.print(\"i=\" + i + \", j=\" + j + \"; \");\n            }\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"i=1, j=1; i=1, j=2; i=2, j=1; i=2, j=2; ","1":"i=1, j=1; i=2, j=1; ","2":"i=1, j=1; i=2, j=1; i=2, j=2; ","3":"i=1, j=1; "},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101108,"difficulty":"medium","type":"single","question":"What happens when you attempt to compile and run the following code?\\n\\begin{verbatim}\npublic class InvalidBreak {\n    public static void main(String[] args) {\n        int x = 10;\n        if (x == 10) {\n            break; // This line\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles and runs without issue.","1":"The code compiles but throws a runtime exception.","2":"The code fails to compile.","3":"The code compiles and runs, but the `break` statement is ignored."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101109,"difficulty":"medium","type":"single","question":"What is the result of executing this code snippet?\\n\\begin{verbatim}\nint i = 0;\nwhile (i < 10) {\n    if (i == 5) {\n        continue;\n    }\n    System.out.print(i);\n    i++;\n}\n\\end{verbatim}","choices":{"0":"012346789","1":"01234","2":"An infinite loop occurs.","3":"A compilation error occurs."},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101110,"difficulty":"medium","type":"single","question":"Compare the previous question with this one. What is the result here?\\n\\begin{verbatim}\nfor (int i = 0; i < 10; i++) {\n    if (i == 5) {\n        continue;\n    }\n    System.out.print(i);\n}\n\\end{verbatim}","choices":{"0":"012346789","1":"01234","2":"An infinite loop occurs.","3":"A compilation error occurs."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101111,"difficulty":"medium","type":"single","question":"What is the result of compiling this code?\\n\\begin{verbatim}\npublic class Unreachable {\n    public static void main(String[] args) {\n        for (int i = 0; i < 5; i++) {\n            System.out.print(i);\n            break;\n            System.out.print(\"X\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"It compiles and prints `0X`.","1":"It compiles and prints `0`.","2":"It compiles and prints `01234`.","3":"It fails to compile."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101112,"difficulty":"medium","type":"single","question":"What is the final value of `count`?\\n\\begin{verbatim}\nint count = 0;\nouter:\nfor(int i = 0; i < 4; i++) {\n    for(int j = 0; j < 2; j++) {\n        if(i > 1) {\n            continue outer;\n        }\n        count++;\n    }\n}\n// What is count here?\n\\end{verbatim}","choices":{"0":"2","1":"4","2":"6","3":"8"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101113,"difficulty":"medium","type":"single","question":"What happens when you compile this code?\\n\\begin{verbatim}\npublic class BadLabel {\n    public static void main(String[] args) {\n        int x = 1;\n        myLabel: // label declaration\n        x++;\n        break myLabel;\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation fails because a label cannot be applied to an increment statement.","1":"Compilation fails because the `break` is not inside a loop or switch.","2":"Compilation fails for both of the above reasons.","3":"The code compiles successfully."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101114,"difficulty":"medium","type":"single","question":"What is the output of this code snippet?\\n\\begin{verbatim}\nfor (int i=0; i<3; i++) {\n    System.out.print(\"A\");\n    if (i==1) continue;\n    System.out.print(\"B\");\n}\n\\end{verbatim}","choices":{"0":"ABABAB","1":"ABAAB","2":"ABAA","3":"ABAB"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101115,"difficulty":"medium","type":"single","question":"Examine the following code. What will be printed?\\n\\begin{verbatim}\nint count = 0;\nROWS:\nfor (int row = 1; row <= 3; row++) {\n    COLS:\n    for (int col = 1; col <= 2; col++) {\n        if (row * col % 2 == 0)\n            continue ROWS;\n        count++;\n    }\n}\nSystem.out.println(count);\n\\end{verbatim}","choices":{"0":"0","1":"1","2":"2","3":"3"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101116,"difficulty":"medium","type":"single","question":"What is the output of the following?\\n\\begin{verbatim}\nint x = 0;\nloop:\nfor (int i = 1; i < 5; i++) {\n    switch (i) {\n        case 1:\n            x += i;\n        case 3:\n            x += i;\n            break;\n        case 4:\n            break loop;\n    }\n}\nSystem.out.println(x);\n\\end{verbatim}","choices":{"0":"4","1":"5","2":"9","3":"12"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101117,"difficulty":"medium","type":"multiple","question":"In which of the following contexts is a `break` statement legally allowed in Java? (Choose all that apply)","choices":{"0":"Inside a `for` loop.","1":"Inside an `if` statement that is not within a loop or switch.","2":"Inside a `switch` statement.","3":"Inside a `while` loop.","4":"Directly inside a method body.","5":"Inside a labeled code block."},"answers":["0","2","3","5"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101118,"difficulty":"medium","type":"multiple","question":"Which of the following statements about labels in Java are true? (Choose all that apply)","choices":{"0":"A label name must be a valid Java identifier.","1":"A label can be applied to any Java statement, including simple expressions like `x++;`.","2":"A label must always be followed by a loop.","3":"`continue myLabel;` is only valid if `myLabel` is attached to a loop.","4":"Labels exist in their own namespace and do not conflict with variable names."},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101119,"difficulty":"medium","type":"multiple","question":"Which of these code snippets will fail to compile? (Choose all that apply)","choices":{"0":"\\begin{verbatim}\nlabel: for(;;) { break label; }\n\\end{verbatim}","1":"\\begin{verbatim}\nlabel: if(true) { break label; }\n\\end{verbatim}","2":"\\begin{verbatim}\nfor(;;) { continue label; }\nlabel: System.out.println();\n\\end{verbatim}","3":"\\begin{verbatim}\nlabel: while(true); continue label;\n\\end{verbatim}","4":"\\begin{verbatim}\ncontinue;\n\\end{verbatim}"},"answers":["1","2","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101120,"difficulty":"medium","type":"multiple","question":"Select all the code fragments that will produce the output `AC`. (Choose all that apply)","choices":{"0":"\\begin{verbatim}\nfor(char c='A'; c<='C'; c++) { System.out.print(c); if(c=='B') continue; }\n\\end{verbatim}","1":"\\begin{verbatim}\nfor(char c='A'; c<='D'; c++) { if(c=='B') continue; if(c=='D') break; System.out.print(c); }\n\\end{verbatim}","2":"\\begin{verbatim}\nfor(char c='A'; c<='C'; c++) { if(c=='B') {} else { System.out.print(c); } }\n\\end{verbatim}","3":"\\begin{verbatim}\nchar c='A'; while(c<='C') { if(c!='B') System.out.print(c); c++; }\n\\end{verbatim}"},"answers":["1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101121,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run this code?\\n\\begin{verbatim}\npublic class LabeledBlock {\n    public static void main(String[] args) {\n        int x = 5;\n        myBlock: {\n            if (x == 5) {\n                break myBlock;\n            }\n            System.out.print(\"Inside\");\n        }\n        System.out.print(\"Outside\");\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `InsideOutside`.","1":"It prints `Outside`.","2":"It prints `Inside`.","3":"It fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101122,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile this code?\\n\\begin{verbatim}\npublic class InvalidContinue {\n    public static void main(String[] args) {\n        myLabel: {\n            if (true) {\n                continue myLabel; \n            }\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"It compiles successfully.","1":"It fails to compile because `myLabel` is not on a loop.","2":"It fails to compile because a label cannot be on a simple block.","3":"It fails to compile because of an unreachable statement."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101123,"difficulty":"hard","type":"single","question":"What is the output?\\n\\begin{verbatim}\nint i = 0, j = 0;\nouter:\nfor (i = 0; i < 3; i++) {\n    inner:\n    for (j = 0; j < 3; j++) {\n        if (j == 1)\n            continue outer;\n        if (i == j)\n            break inner;\n        System.out.print(i + \"\" + j + \" \");\n    }\n}\n\\end{verbatim}","choices":{"0":"00 10 20 ","1":"00 20 ","2":"00 ","3":"00 10 11 12 20 21 22 "},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101124,"difficulty":"hard","type":"single","question":"Which statement best describes the compilation result of this code?\\n\\begin{verbatim}\npublic class LabelConflict {\n    public static void main(String[] args) {\n        String myLabel = \"test\";\n        myLabel: \n        for (int i=0; i<1; i++) {\n            System.out.println(myLabel);\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"It compiles and prints `test`.","1":"It fails to compile because the label `myLabel` conflicts with the variable `myLabel`.","2":"It fails to compile because the `println` argument is ambiguous.","3":"It compiles, but the behavior is undefined."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101125,"difficulty":"hard","type":"single","question":"What is the output of the following code fragment?\\n\\begin{verbatim}\nint val = 0;\nloop1:\nfor (int i = 0; i < 2; i++) {\n    for (int j = 0; j < 4; j++) {\n        val++;\n        if (j >= 1) {\n            continue loop1;\n        }\n    }\n}\nSystem.out.println(val);\n\\end{verbatim}","choices":{"0":"2","1":"3","2":"4","3":"8"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101126,"difficulty":"hard","type":"single","question":"What does this code print?\\n\\begin{verbatim}\nint count = 0;\nloop:\nfor (int i = 0; i < 5; i++) {\n    switch (i) {\n        case 2:\n            continue;\n        case 3:\n            count++;\n        case 4:\n            break loop;\n        default:\n            count++;\n    }\n}\nSystem.out.println(count);\n\\end{verbatim}","choices":{"0":"1","1":"2","2":"3","3":"4"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101127,"difficulty":"hard","type":"single","question":"Consider the following code. Which line causes a compilation error?\\n\\begin{verbatim}\nlabel1: while (true) {      // Line 1\n    int x = 0;               // Line 2\n    label2: do {             // Line 3\n        x++;                 // Line 4\n        continue label1;     // Line 5\n    } while(x < 5);          // Line 6\n    break label2;            // Line 7\n}\n\\end{verbatim}","choices":{"0":"Line 3","1":"Line 5","2":"Line 7","3":"The code compiles without errors."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101128,"difficulty":"hard","type":"multiple","question":"Which of the following code snippets will result in a compilation error? (Choose all that apply)","choices":{"0":"\\begin{verbatim}\nint i=0; label: i++;\n\\end{verbatim}","1":"\\begin{verbatim}\nlabel: { break label; }\n\\end{verbatim}","2":"\\begin{verbatim}\nlabel: if(true) { continue label; }\n\\end{verbatim}","3":"\\begin{verbatim}\nlabel: for(;;) { int i=0; continue label; }\n\\end{verbatim}","4":"\\begin{verbatim}\nfor(;;) { break label; } label:;\n\\end{verbatim}"},"answers":["2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101129,"difficulty":"hard","type":"multiple","question":"Given the following code, which statements are true? (Choose all that apply)\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String... args) {\n        String result = \"\";\n        loop:\n        for (int i=0; i<4; i++) {\n            if (i % 2 == 0) {\n                continue;\n            }\n            switch(i) {\n                case 1: result += \"A\"; break;\n                case 3: result += \"B\"; break loop;\n                case 5: result += \"C\";\n            }\n            result += \"D\";\n        }\n        System.out.println(result);\n    }\n}\n\\end{verbatim}","choices":{"0":"The `continue` statement is executed when `i` is 0 and 2.","1":"The code enters the `switch` statement when `i` is 1 and 3.","2":"The string `\"D\"` is appended to `result` exactly once.","3":"The `break loop;` statement is executed.","4":"The final output is `ABD`.","5":"The final output is `AB`."},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101200,"difficulty":"easy","type":"single","question":"Which of the following statements is true about enums in Java?","choices":{"0":"An enum can be instantiated using the `new` keyword.","1":"An enum can extend any class.","2":"An enum can implement an interface.","3":"An enum can be declared within a method."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101201,"difficulty":"easy","type":"single","question":"Consider the following enum definition:\n\\begin{verbatim}\npublic enum Season { SPRING, SUMMER, FALL, WINTER }\n\\end{verbatim}\nWhich code snippet correctly prints all the enum constants?","choices":{"0":"for (Season s : Season.getValues()) { System.out.println(s); }","1":"for (Season s : Season.values()) { System.out.println(s); }","2":"for (Season s : Season.constants()) { System.out.println(s); }","3":"for (Season s : Season.list()) { System.out.println(s); }"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101202,"difficulty":"easy","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\npublic enum Level { LOW, MEDIUM, HIGH }\n\npublic class Test {\n    public static void main(String[] args) {\n        Level level = Level.valueOf(\"MEDIUM\");\n        System.out.println(level);\n    }\n}\n\\end{verbatim}","choices":{"0":"Level.MEDIUM","1":"MEDIUM","2":"A compilation error occurs.","3":"A `ClassCastException` is thrown at runtime."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101203,"difficulty":"easy","type":"single","question":"Which keyword is used to define an enumeration in Java?","choices":{"0":"`enumeration`","1":"`enum_type`","2":"`enum`","3":"`constant`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101204,"difficulty":"easy","type":"single","question":"What does the `ordinal()` method of an enum constant return?","choices":{"0":"The total number of constants in the enum.","1":"The name of the constant as a `String`.","2":"The memory address of the constant.","3":"The zero-based position of the constant in its enum declaration."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101205,"difficulty":"easy","type":"multiple","question":"Which of the following are valid ways to compare two enum constants, `e1` and `e2`, of the same enum type for equality? (Choose all that apply)","choices":{"0":"`e1 == e2`","1":"`e1.equals(e2)`","2":"`e1.compareTo(e2) == 0`","3":"`e1.ordinal() == e2.ordinal()`"},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101206,"difficulty":"medium","type":"single","question":"What is the result of executing the following code?\n\\begin{verbatim}\npublic class Test {\n    public enum Color { RED, GREEN, BLUE; }\n\n    public static void main(String[] args) {\n        Color c = Color.valueOf(\"red\");\n        System.out.println(c);\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `red`.","1":"It prints `RED`.","2":"A compilation error occurs.","3":"An `IllegalArgumentException` is thrown at runtime."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101207,"difficulty":"medium","type":"single","question":"Consider the following code. What will be the output?\n\\begin{verbatim}\npublic class EnumTest {\n    enum TrafficLight {\n        RED(30), GREEN(45), YELLOW(5);\n        private final int duration;\n        TrafficLight(int duration) {\n            this.duration = duration;\n        }\n        public int getDuration() {\n            return duration;\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(TrafficLight.GREEN.getDuration());\n        System.out.println(TrafficLight.GREEN.ordinal());\n    }\n}\n\\end{verbatim}","choices":{"0":"\\begin{verbatim}45\nGREEN\n\\end{verbatim}","1":"\\begin{verbatim}45\n1\n\\end{verbatim}","2":"\\begin{verbatim}GREEN\n1\n\\end{verbatim}","3":"A compilation error occurs because enums cannot have fields."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101208,"difficulty":"medium","type":"single","question":"Which statement about enum constructors is correct?","choices":{"0":"Enum constructors must be declared `public`.","1":"Enum constructors can be declared `public` or `protected`.","2":"Enum constructors are implicitly `private` and cannot be declared `public` or `protected`.","3":"An enum can have a public no-argument constructor."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101209,"difficulty":"medium","type":"single","question":"What is the output of the following code snippet?\n\\begin{verbatim}\npublic class SwitchTest {\n    enum Day { MON, TUE, WED, THU, FRI, SAT, SUN }\n    public static void main(String[] args) {\n        Day day = Day.MON;\n        switch (day) {\n            case MON:\n                System.out.print(\"Start, \");\n            case FRI:\n                System.out.print(\"Almost, \");\n            case SUN:\n                System.out.print(\"End\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`Start, `","1":"`Start, Almost, End`","2":"`End`","3":"A compilation error occurs."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101210,"difficulty":"medium","type":"single","question":"Under which circumstances is it possible for `e1 == e2` to be `true`, but `e1.equals(e2)` to be `false` where `e1` and `e2` are enum references?","choices":{"0":"If `e1` and `e2` are from different enum types.","1":"If the `equals()` method has been overridden in the enum.","2":"If `e1` is `null`.","3":"This scenario is impossible for enums."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101211,"difficulty":"medium","type":"single","question":"What is the result of the following code?\n\\begin{verbatim}\npublic enum Animal { DOG, CAT, BIRD }\n\npublic class Test {\n    public static void main(String[] args) {\n        Animal a1 = Animal.DOG;\n        Animal a2 = Animal.CAT;\n        Animal a3 = Animal.DOG;\n\n        System.out.println(a1.compareTo(a2));\n        System.out.println(a1.compareTo(a3));\n    }\n}\n\\end{verbatim}","choices":{"0":"\\begin{verbatim}-1\n0\n\\end{verbatim}","1":"\\begin{verbatim}1\n0\n\\end{verbatim}","2":"\\begin{verbatim}0\n0\n\\end{verbatim}","3":"\\begin{verbatim}DOG\nDOG\n\\end{verbatim}"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101212,"difficulty":"medium","type":"single","question":"Which of the following classes is the direct superclass for all enums in Java?","choices":{"0":"`java.lang.Object`","1":"`java.lang.Enum`","2":"`java.lang.Serializable`","3":"`java.lang.Comparable`"},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101213,"difficulty":"medium","type":"single","question":"Which of the following code snippets will result in a compilation error?","choices":{"0":"\\begin{verbatim}public enum A { X, Y; public void m() {} }\\end{verbatim}","1":"\\begin{verbatim}public enum B implements java.io.Serializable { X, Y; }\\end{verbatim}","2":"\\begin{verbatim}public enum C { X, Y; private C() {} }\\end{verbatim}","3":"\\begin{verbatim}public enum D extends java.lang.Enum { X, Y; }\\end{verbatim}"},"answers":["3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101214,"difficulty":"medium","type":"multiple","question":"Given the enum:\n\\begin{verbatim}\npublic enum Status { PENDING, ACTIVE, INACTIVE, DELETED; }\n\\end{verbatim}\nWhich of the following are valid declarations? (Choose all that apply)","choices":{"0":"`java.util.EnumSet<Status> set = java.util.EnumSet.of(Status.ACTIVE, Status.INACTIVE);`","1":"`java.util.EnumMap<Status, String> map = new java.util.EnumMap<>(Status.class);`","2":"`Status s = new Status();`","3":"`java.util.List<Status> list = java.util.Arrays.asList(Status.values());`"},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101215,"difficulty":"medium","type":"single","question":"What is the correct way to write a `case` statement for an enum constant `Color.BLUE` inside a `switch`?","choices":{"0":"`case Color.BLUE:`","1":"`case BLUE:`","2":"`case \"BLUE\":`","3":"`case Color.valueOf(\"BLUE\")`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101216,"difficulty":"medium","type":"single","question":"Consider the following enum:\n\\begin{verbatim}\npublic enum Planet {\n    MERCURY (3.303e+23, 2.4397e6),\n    VENUS   (4.869e+24, 6.0518e6),\n    EARTH   (5.976e+24, 6.37814e6);\n    \n    private final double mass;   // in kilograms\n    private final double radius; // in meters\n    Planet(double mass, double radius) {\n        this.mass = mass;\n        this.radius = radius;\n    }\n}\n\\end{verbatim}\nHow would you try to add a new constant `MARS` to this enum?","choices":{"0":"Add `MARS;` after `EARTH(5.976e+24, 6.37814e6);`","1":"Add `MARS(6.421e+23, 3.3972e6);` after `EARTH(5.976e+24, 6.37814e6);`","2":"Add `Planet MARS = new Planet(6.421e+23, 3.3972e6);` inside the enum.","3":"It is not possible to add new constants if a constructor with arguments is present."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101217,"difficulty":"medium","type":"multiple","question":"Which statements about `java.lang.Enum` are true? (Choose all that apply)","choices":{"0":"The `equals()` method is `final`.","1":"The `compareTo()` method is `final`.","2":"The `ordinal()` method is `final`.","3":"The `name()` method is `final`."},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101218,"difficulty":"medium","type":"single","question":"Which of the following is a valid way to get the `Class` object for an enum type `Size`?","choices":{"0":"`Size.class`","1":"`Size.type`","2":"`Size.getClass()`","3":"`Size.CLASS`"},"answers":["0"],"attempts":1,"attempted":true,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101219,"difficulty":"medium","type":"single","question":"An enum constant can override a method from its enum type. How is this achieved?","choices":{"0":"By using the `@Override` annotation in the enum constructor.","1":"By appending a class body `{...}` to the enum constant declaration.","2":"It's not possible; only the enum type itself can have methods.","3":"By creating a subclass of the enum and overriding the method there."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101220,"difficulty":"medium","type":"multiple","question":"Which of the following are valid locations to declare an enum? (Choose all that apply)","choices":{"0":"As a top-level type in its own `.java` file.","1":"As a `static` member of a class.","2":"As a non-`static` member of a class.","3":"Inside a method."},"answers":["0","1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101221,"difficulty":"hard","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\ninterface Printable { void print(); }\n\npublic enum EnumAdvanced {\n    A { public void print() { System.out.print(\"A\"); } },\n    B { public void print() { System.out.print(\"B\"); } };\n\n    public void print() { System.out.print(\"Default\"); }\n}\n\nclass Test {\n    public static void main(String... args) {\n        EnumAdvanced.A.print();\n        EnumAdvanced.B.print();\n    }\n}\n\\end{verbatim}","choices":{"0":"`AB`","1":"`DefaultDefault`","2":"A compilation error occurs because `print()` is defined twice.","3":"A compilation error occurs because enums cannot have abstract-like behavior."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101222,"difficulty":"hard","type":"single","question":"Examine the following code. What is the result?\n\\begin{verbatim}\npublic enum Operation {\n    PLUS {\n        public double apply(double x, double y) { return x + y; }\n    },\n    MINUS {\n        public double apply(double x, double y) { return x - y; }\n    };\n    public abstract double apply(double x, double y);\n}\n\nclass Test {\n    public static void main(String[] args) {\n        System.out.println(Operation.PLUS.apply(5, 3));\n    }\n}\n\\end{verbatim}","choices":{"0":"`8.0`","1":"The code fails to compile because an enum cannot be `abstract`.","2":"The code fails to compile because `apply` is not defined for the `Operation` enum itself.","3":"The code fails to compile because an enum constant cannot provide a method implementation."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101223,"difficulty":"hard","type":"single","question":"What happens when you attempt to compile and run the following code?\n\\begin{verbatim}\npublic enum MyEnum {\n    FIRST, SECOND;\n    \n    MyEnum() {\n        System.out.print(this.ordinal());\n    }\n    \n    static {\n        System.out.print(\"S\");\n    }\n}\n\nclass Test {\n    public static void main(String[] args) {\n        System.out.print(\"M\");\n        MyEnum e = MyEnum.FIRST;\n    }\n}\n\\end{verbatim}","choices":{"0":"`SM01`","1":"`01SM`","2":"`S01M`","3":"`MS01`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101224,"difficulty":"hard","type":"single","question":"What is true about the serialization of enums?","choices":{"0":"Enums are not serializable by default and require implementing `java.io.Serializable` and defining a `serialVersionUID`.","1":"When an enum is deserialized, the constructor is called again to create a new instance.","2":"Java's serialization mechanism ensures that deserializing an enum constant will always return the pre-existing constant instance, thus preserving singleton identity.","3":"Deserializing an enum may result in a different object instance if the enum declaration has changed, causing `==` to fail."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101225,"difficulty":"hard","type":"multiple","question":"Which of the following code snippets will result in a compilation error? (Choose all that apply)","choices":{"0":"\\begin{verbatim}public enum E1 { A, B; private E1() {} }\\end{verbatim}","1":"\\begin{verbatim}public enum E2 { C, D; protected E2() {} }\\end{verbatim}","2":"\\begin{verbatim}public enum E3 { E, F; E3() {} }\\end{verbatim}","3":"\\begin{verbatim}public enum E4 { G, H; public E4() {} }\\end{verbatim}"},"answers":["1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101226,"difficulty":"hard","type":"single","question":"Consider the code below. What is the output?\n\\begin{verbatim}\npublic class EnumEquality {\n    enum Color { RED, BLUE }\n    public static void main(String[] args) {\n        Color c1 = Color.RED;\n        Color c2 = Color.RED;\n        System.out.print(c1 == c2);\n        \n        // Simulate deserialization or reflection\n        Color c3 = Enum.valueOf(Color.class, \"RED\");\n        System.out.print(c1 == c3);\n    }\n}\n\\end{verbatim}","choices":{"0":"`truetrue`","1":"`truefalse`","2":"`falsetrue`","3":"`falsefalse`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101227,"difficulty":"hard","type":"multiple","question":"Which of the following are true about enums in Java? (Choose all that apply)","choices":{"0":"An enum can be a generic type, e.g., `public enum MyEnum<T> { ... }`","1":"Enum constants are implicitly `public`, `static`, and `final`.","2":"An enum can contain a `main` method and can be executed as a standalone program.","3":"An enum type cannot be a subtype of another enum."},"answers":["1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101228,"difficulty":"hard","type":"single","question":"What is the result of the following code?\n\\begin{verbatim}\npublic enum Volume {\n    LOW, MEDIUM, HIGH;\n\n    static {\n        // This line attempts to access an enum constant before it's initialized\n        // System.out.println(LOW);\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Ready\");\n    }\n}\n\n// What would happen if the commented-out line were enabled?\n\\end{verbatim}","choices":{"0":"The code would print the `LOW` enum constant and then `Ready`.","1":"The code would compile but throw a `NullPointerException` at runtime.","2":"The code would fail to compile due to an illegal forward reference.","3":"The code would compile but throw an `ExceptionInInitializerError` at runtime."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1012,"topic":"Enums","questionId":101229,"difficulty":"hard","type":"multiple","question":"Given `java.util.EnumSet`, which statements are correct? (Choose all that apply)","choices":{"0":"It is a specialized `Set` implementation for use with enum types.","1":"It is represented internally as a bit vector, making it highly efficient.","2":"All elements in an `EnumSet` must come from a single enum type.","3":"`null` elements are permitted in an `EnumSet`."},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101300,"difficulty":"easy","type":"single","question":"What does it mean for `String` objects to be immutable in Java?","choices":{"0":"The `String` class is declared `final` and cannot be extended.","1":"The value of a `String` object cannot be changed after it is created.","2":"The methods of the `String` class cannot be overridden.","3":"String variables cannot be reassigned to a new value."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101301,"difficulty":"easy","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nString s1 = \"Java\";\ns1.concat(\" SE 8\");\nSystem.out.println(s1);\n\\end{verbatim}","choices":{"0":"`Java SE 8`","1":"`Java`","2":"The code does not compile.","3":"An empty string is printed."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101302,"difficulty":"easy","type":"single","question":"Which is the preferred and correct way to check if two `String` objects, `s1` and `s2`, contain the same sequence of characters?","choices":{"0":"`s1 == s2`","1":"`s1.equals(s2)`","2":"`s1.compareTo(s2)`","3":"`s1.matches(s2)`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101303,"difficulty":"easy","type":"single","question":"What is the output of the following code snippet?\n\\begin{verbatim}\nString str = \"exam\";\nstr.toUpperCase();\nSystem.out.println(str);\n\\end{verbatim}","choices":{"0":"`EXAM`","1":"`Exam`","2":"`exam`","3":"A `NullPointerException` is thrown."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101304,"difficulty":"easy","type":"single","question":"What is the length of the string created by this code?\n\\begin{verbatim}\nString s = \"1\\t2\\n3\";\n\\end{verbatim}","choices":{"0":"3","1":"5","2":"6","3":"7"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101305,"difficulty":"easy","type":"multiple","question":"Given the string `String s = \"learning\";`, which of the following method calls will result in a new string with the value `\"learn\"`? (Choose all that apply)","choices":{"0":"`s.substring(0, 5)`","1":"`s.substring(0, 4)`","2":"`s.replace(\"ing\", \"\")`","3":"`s.delete(5, 8)`"},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101306,"difficulty":"medium","type":"single","question":"What is the output of the following program?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        String s1 = \"Java\";\n        String s2 = new String(\"Java\");\n        String s3 = \"Java\";\n        System.out.print(s1 == s2);\n        System.out.print(s1 == s3);\n    }\n}\n\\end{verbatim}","choices":{"0":"`truetrue`","1":"`truefalse`","2":"`falsetrue`","3":"`falsefalse`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101307,"difficulty":"medium","type":"single","question":"What is the result of this code?\n\\begin{verbatim}\nString ta = \"A \";\nta = ta.concat(\"B \");\nString tb = \"C \";\nta = ta.concat(tb);\nta.replace('C','D');\nta = ta.concat(tb);\nSystem.out.println(ta);\n\\end{verbatim}","choices":{"0":"`A B C C `","1":"`A B D C `","2":"`A B C D `","3":"`A B D D `"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101308,"difficulty":"medium","type":"single","question":"What is the output of the following code snippet?\n\\begin{verbatim}\nStringBuilder sb = new StringBuilder(\"Java\");\nString s = \"Java\";\n\nif (s.equals(sb)) {\n    System.out.println(\"Match\");\n} else {\n    System.out.println(\"No Match\");\n}\n\\end{verbatim}","choices":{"0":"`Match`","1":"`No Match`","2":"The code does not compile.","3":"An exception is thrown at runtime."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101309,"difficulty":"medium","type":"single","question":"Examine the following code. What is the output?\n\\begin{verbatim}\nString s = \"abcde\";\nSystem.out.println(s.substring(1, 3));\nSystem.out.println(s.charAt(3));\n\\end{verbatim}","choices":{"0":"\\begin{verbatim}bc\nc\n\\end{verbatim}","1":"\\begin{verbatim}bc\nd\n\\end{verbatim}","2":"\\begin{verbatim}bcd\nd\n\\end{verbatim}","3":"A `StringIndexOutOfBoundsException` is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101310,"difficulty":"medium","type":"single","question":"What is printed by the following code?\n\\begin{verbatim}\nString s = \" a b c \";\ns = s.trim();\ns = s.replace(\" \", \"\");\nSystem.out.println(s.length());\n\\end{verbatim}","choices":{"0":"3","1":"5","2":"7","3":"9"},"answers":["0"],"attempts":1,"attempted":true,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101311,"difficulty":"medium","type":"single","question":"What is the output of this code snippet?\n\\begin{verbatim}\nString s1 = \"1\";\nString s2 = s1.concat(\"2\");\ns2.concat(\"3\");\nSystem.out.println(s2);\n\\end{verbatim}","choices":{"0":"`1`","1":"`12`","2":"`123`","3":"The code does not compile."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101312,"difficulty":"medium","type":"single","question":"What is the result of the following code?\n\\begin{verbatim}\nString s1 = \"java\";\nString s2 = \"java\";\nString s3 = new String(\"java\").intern();\n\nSystem.out.print(s1 == s2);\nSystem.out.print(s1 == s3);\n\\end{verbatim}","choices":{"0":"`truetrue`","1":"`truefalse`","2":"`falsetrue`","3":"`falsefalse`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101313,"difficulty":"medium","type":"single","question":"Which line of code will cause a `StringIndexOutOfBoundsException` to be thrown?\n\\begin{verbatim}\nString s = \"oracle\";\n// Line 1\nchar c1 = s.charAt(6);\n// Line 2\nString sub1 = s.substring(6);\n// Line 3\nString sub2 = s.substring(3, 7);\n// Line 4\nint i = s.indexOf('x');\n\\end{verbatim}","choices":{"0":"Line 1","1":"Line 2","2":"Line 3","3":"None of the above"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101314,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nSystem.out.println(\"Result: \" + 1 + 2 * 3);\n\\end{verbatim}","choices":{"0":"`Result: 16`","1":"`Result: 7`","2":"`Result: 33`","3":"`Result: 123`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101315,"difficulty":"medium","type":"single","question":"Which of these statements correctly describes why the `String` class is declared `final`?","choices":{"0":"To prevent its methods from being overridden, which could compromise its immutable nature.","1":"To ensure that all strings are stored in the String Constant Pool.","2":"To allow the `+` operator to be used for concatenation.","3":"To make it more memory efficient than `StringBuilder`."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101316,"difficulty":"medium","type":"single","question":"What is the result of executing the following code?\n\\begin{verbatim}\nString s = null;\ns += \"text\";\nSystem.out.println(s);\n\\end{verbatim}","choices":{"0":"`text`","1":"`nulltext`","2":"A `NullPointerException` is thrown.","3":"The code does not compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101317,"difficulty":"medium","type":"multiple","question":"Which of the following are valid `String` methods in Java 8? (Choose all that apply)","choices":{"0":"`isEmpty()`","1":"`isBlank()`","2":"`join()` (as a static method)","3":"`strip()`","4":"`lines()`"},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101318,"difficulty":"medium","type":"multiple","question":"Which of the following statements about `String` and `StringBuilder` are true? (Choose all that apply)","choices":{"0":"`String` is immutable, while `StringBuilder` is mutable.","1":"Operations on `StringBuilder` can be faster than concatenating `String` objects in a loop.","2":"A `String` object can be converted to a `StringBuilder` using the `new StringBuilder(aString)` constructor.","3":"`StringBuilder` is thread-safe.","4":"Both classes provide an `equals` method that compares the sequence of characters."},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101319,"difficulty":"medium","type":"multiple","question":"Given `String str = \"Java SE 8\";`, which expressions will evaluate to `true`? (Choose all that apply)","choices":{"0":"`str.startsWith(\"Java\")`","1":"`str.endsWith(\" 8\")`","2":"`str.contains(\"SE\")`","3":"`str.equalsIgnoreCase(\"java se 8\")`"},"answers":["0","1","2","3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101320,"difficulty":"hard","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nfinal String f = \"Ja\";\nString s1 = f + \"va\";\nString s2 = \"Java\";\nSystem.out.println(s1 == s2);\n\\end{verbatim}","choices":{"0":"`true`","1":"`false`","2":"The code does not compile because `f` is `final`.","3":"An exception is thrown at runtime."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101321,"difficulty":"hard","type":"single","question":"What is the output of this code?\n\\begin{verbatim}\nString s1 = \"ab\";\nString s2 = \"c\";\nString s3 = s1 + s2;\nString s4 = \"abc\";\nSystem.out.println(s3 == s4);\n\\end{verbatim}","choices":{"0":"`true`","1":"`false`","2":"The code does not compile.","3":"An exception is thrown at runtime."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101322,"difficulty":"hard","type":"single","question":"What is printed by the following code?\n\\begin{verbatim}\nString s1 = \"abc\";\nString s2 = new String(\"abc\");\ns2 = s2.intern();\nSystem.out.print(s1 == s2);\n\nString s3 = \"def\";\nString s4 = new StringBuilder(\"def\").toString().intern();\nSystem.out.print(s3 == s4);\n\\end{verbatim}","choices":{"0":"`truetrue`","1":"`truefalse`","2":"`falsetrue`","3":"`falsefalse`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101323,"difficulty":"hard","type":"single","question":"What is the result of executing this code?\n\\begin{verbatim}\nString s = \"test\";\nString sub = s.substring(4);\nSystem.out.println(sub.length());\n\\end{verbatim}","choices":{"0":"1","1":"0","2":"A `StringIndexOutOfBoundsException` is thrown.","3":"A `NullPointerException` is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101324,"difficulty":"hard","type":"single","question":"How many `String` objects are created in the following code, not including any pre-existing literals in the string pool?\n\\begin{verbatim}\nString s1 = new String(\"Hello\");\nString s2 = \" World\";\nString s3 = s1 + s2;\n\\end{verbatim}","choices":{"0":"1","1":"2","2":"3","3":"4"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101325,"difficulty":"hard","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nString text = \"a.b.c\";\nString[] parts = text.split(\".\");\nSystem.out.println(parts.length);\n\\end{verbatim}","choices":{"0":"0","1":"1","2":"3","3":"An exception is thrown at runtime."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101326,"difficulty":"hard","type":"multiple","question":"Which of the following code snippets will result in `s2` referring to the same object as `s1` in the string pool? (Choose all that apply)\n\\begin{verbatim}\nString s1 = \"Test\";\n\\end{verbatim}","choices":{"0":"`String s2 = \"Test\";`","1":"`String s2 = new String(\"Test\");`","2":"`String s2 = new String(\"Test\").intern();`","3":"`String s2 = \"Te\" + \"st\";`"},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101327,"difficulty":"hard","type":"multiple","question":"Which statements are true about string concatenation using the `+` operator in a loop? (Choose all that apply)\n\\begin{verbatim}\nString result = \"\";\nfor (int i=0; i<100; i++) {\n    result += i; // Line 3\n}\n\\end{verbatim}","choices":{"0":"A new `String` object is created in each iteration of the loop.","1":"The compiler automatically replaces this code with `StringBuilder` for efficiency.","2":"This is the most memory-efficient way to build a string.","3":"After the loop, the original `result` object (the empty string) has been modified to contain the final value."},"answers":["0","1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101328,"difficulty":"hard","type":"multiple","question":"Which of the following will throw a `StringIndexOutOfBoundsException`? (Choose all that apply)\n\\begin{verbatim}\nString s = \"java\";\n\\end{verbatim}","choices":{"0":"`s.charAt(4);`","1":"`s.substring(5);`","2":"`s.substring(2, 5);`","3":"`s.substring(2, 2);`"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101400,"difficulty":"easy","type":"single","question":"What is the primary difference between `StringBuilder` and `StringBuffer`?","choices":{"0":"`StringBuilder` is mutable, while `StringBuffer` is immutable.","1":"`StringBuilder` methods are synchronized, while `StringBuffer` methods are not.","2":"`StringBuffer` methods are synchronized, while `StringBuilder` methods are not, making `StringBuilder` faster in single-threaded environments.","3":"`StringBuffer` can be converted to a `String`, but `StringBuilder` cannot."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101401,"difficulty":"easy","type":"single","question":"Which method is used to add characters to the end of a `StringBuilder` object?","choices":{"0":"`add()`","1":"`concat()`","2":"`insert()`","3":"`append()`"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101402,"difficulty":"easy","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nStringBuilder sb = new StringBuilder(\"Java\");\nsb.insert(2, \"SE\");\nSystem.out.println(sb);\n\\end{verbatim}","choices":{"0":"`JaSEva`","1":"`JavaSE`","2":"`SEJava`","3":"An exception is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101403,"difficulty":"easy","type":"single","question":"How do you convert a `StringBuilder` object `sb` into a `String` object?","choices":{"0":"`sb.toString()`","1":"`new String(sb)`","2":"`(String) sb`","3":"`String.valueOf(sb)`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101404,"difficulty":"easy","type":"single","question":"Which of the following classes is best suited for use in a multi-threaded application where multiple threads might modify the same sequence of characters?","choices":{"0":"`String`","1":"`StringBuilder`","2":"`StringBuffer`","3":"`char[]`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101405,"difficulty":"easy","type":"multiple","question":"Given the code `StringBuilder sb = new StringBuilder(\"Oracle\");`, which of the following lines will successfully modify the `sb` object? (Choose all that apply)","choices":{"0":"`sb.append(\" Corp\");`","1":"`sb.delete(0, 2);`","2":"`sb.reverse();`","3":"`sb.substring(0, 2);`"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101406,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nStringBuilder sb1 = new StringBuilder(\"Java\");\nStringBuilder sb2 = new StringBuilder(\"Java\");\nSystem.out.println(sb1.equals(sb2));\n\\end{verbatim}","choices":{"0":"`true`","1":"`false`","2":"The code does not compile.","3":"An exception is thrown at runtime."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101407,"difficulty":"medium","type":"single","question":"What are the length and capacity of the `StringBuilder` object after this code is executed?\n\\begin{verbatim}\nStringBuilder sb = new StringBuilder(\"Hello\");\n// length and capacity?\n\\end{verbatim}","choices":{"0":"length = 5, capacity = 5","1":"length = 5, capacity = 16","2":"length = 5, capacity = 21","3":"length = 5, capacity = 10"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101408,"difficulty":"medium","type":"single","question":"Examine this code. What is the final value of `sb`?\n\\begin{verbatim}\nStringBuilder sb = new StringBuilder(\"abc\");\nsb.append(\"de\").reverse().insert(3, \"--\");\nSystem.out.println(sb);\n\\end{verbatim}","choices":{"0":"`ed--cba`","1":"`edc--ba`","2":"`abcde`","3":"The code does not compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101409,"difficulty":"medium","type":"single","question":"What is the output of this code?\n\\begin{verbatim}\nStringBuilder sb = new StringBuilder();\nsb.append(\"12345\");\nsb.delete(1, 3);\nsb.replace(1, 3, \"67\");\nSystem.out.println(sb);\n\\end{verbatim}","choices":{"0":"`167`","1":"`1267`","2":"`1675`","3":"`16745`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101410,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nStringBuilder sb = new StringBuilder(\"Start\");\nString s = sb.substring(1, 4);\nsb.setCharAt(2, 'X');\nSystem.out.println(s + \" \" + sb);\n\\end{verbatim}","choices":{"0":"`tar StXrt`","1":"`tar StaXt`","2":"`art StXrt`","3":"`art StaXt`"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101411,"difficulty":"medium","type":"single","question":"Consider the following method:\n\\begin{verbatim}\npublic void modify(StringBuilder builder) {\n    builder.append(\"-Modified\");\n}\n\n// And the calling code:\nStringBuilder sb = new StringBuilder(\"Data\");\nmodify(sb);\nSystem.out.println(sb);\n\\end{verbatim}\nWhat will be printed?","choices":{"0":"`Data`","1":"`Data-Modified`","2":"`-Modified`","3":"A `NullPointerException`."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101412,"difficulty":"medium","type":"single","question":"What is the result of executing this code snippet?\n\\begin{verbatim}\nStringBuilder sb = new StringBuilder(\"Test\");\nString s = \"Test\";\nSystem.out.println(s.equals(sb.toString()) + \" \" + sb.toString().equals(s));\n\\end{verbatim}","choices":{"0":"`true true`","1":"`true false`","2":"`false true`","3":"`false false`"},"answers":["0"],"attempts":1,"attempted":true,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101413,"difficulty":"medium","type":"single","question":"What will be the output of this program?\n\\begin{verbatim}\nStringBuilder sb = new StringBuilder(\"123\");\nsb.append(null);\nsb.append(true);\nsb.append(4.0f);\nSystem.out.println(sb);\n\\end{verbatim}","choices":{"0":"`123nulltrue4.0`","1":"`123true4.0`","2":"A `NullPointerException` is thrown.","3":"The code does not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101414,"difficulty":"medium","type":"single","question":"Which statement will cause a `StringIndexOutOfBoundsException`?\n\\begin{verbatim}\nStringBuilder sb = new StringBuilder(\"java\");\n// Line 1\nsb.insert(4, \"8\");\n// Line 2\nsb.delete(2, 5);\n// Line 3\nsb.deleteCharAt(4);\n// Line 4\nsb.charAt(4);\n\\end{verbatim}","choices":{"0":"Line 1","1":"Line 2","2":"Line 3","3":"Line 4"},"answers":["3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101415,"difficulty":"medium","type":"single","question":"What is the output of this code?\n\\begin{verbatim}\nStringBuffer sbuf = new StringBuffer(\"A\");\nStringBuilder sbuild = new StringBuilder(\"A\");\nSystem.out.println(sbuf.equals(sbuild));\n\\end{verbatim}","choices":{"0":"`true`","1":"`false`","2":"The code does not compile because `equals` cannot compare these types.","3":"An exception is thrown at runtime."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101416,"difficulty":"medium","type":"single","question":"What is the initial capacity of a `StringBuilder` created with `new StringBuilder()`?","choices":{"0":"0","1":"8","2":"16","3":"It is determined by the first `append` call."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101417,"difficulty":"medium","type":"multiple","question":"Which of the following method calls will modify the `StringBuilder` object `sb`? (Choose all that apply)\n\\begin{verbatim}\nStringBuilder sb = new StringBuilder(\"exam\");\n\\end{verbatim}","choices":{"0":"`sb.setLength(10);`","1":"`sb.ensureCapacity(100);`","2":"`sb.toString();`","3":"`sb.charAt(2);`","4":"`sb.trimToSize();`"},"answers":["0","1","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101418,"difficulty":"medium","type":"multiple","question":"Which of the following constructors for `StringBuilder` are valid? (Choose all that apply)","choices":{"0":"`new StringBuilder()`","1":"`new StringBuilder(100)`","2":"`new StringBuilder(\"initial text\")`","3":"`new StringBuilder(new char[]{'a', 'b'})`"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101419,"difficulty":"medium","type":"multiple","question":"Which statements are true? (Choose all that apply)","choices":{"0":"`String` objects are immutable.","1":"`StringBuilder` objects are mutable.","2":"`StringBuffer` is thread-safe.","3":"Concatenating `String` objects in a loop is generally less efficient than using `StringBuilder`."},"answers":["0","1","2","3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101420,"difficulty":"hard","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nStringBuilder sb1 = new StringBuilder(\"A\");\nStringBuilder sb2 = sb1;\nsb1.append(\"B\");\nSystem.out.println(sb1.equals(sb2));\n\\end{verbatim}","choices":{"0":"`true`","1":"`false`","2":"The code does not compile.","3":"An exception is thrown at runtime."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101421,"difficulty":"hard","type":"single","question":"What is the output of the following program?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        StringBuilder sb = new StringBuilder(\"Initial\");\n        reassign(sb);\n        System.out.print(sb + \":\");\n        modify(sb);\n        System.out.print(sb);\n    }\n    static void reassign(StringBuilder sb) {\n        sb = new StringBuilder(\"New\");\n    }\n    static void modify(StringBuilder sb) {\n        sb.append(\"-Mod\");\n    }\n}\n\\end{verbatim}","choices":{"0":"`Initial:Initial-Mod`","1":"`New:New-Mod`","2":"`Initial:Initial`","3":"`New:Initial-Mod`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101422,"difficulty":"hard","type":"single","question":"What is the length and capacity of the `StringBuilder` at the end?\n\\begin{verbatim}\nStringBuilder sb = new StringBuilder(5);\nsb.append(\"onetwothree\");\n// length and capacity?\n\\end{verbatim}","choices":{"0":"length = 11, capacity = 11","1":"length = 11, capacity = 12","2":"length = 11, capacity = 22","3":"An exception is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101423,"difficulty":"hard","type":"single","question":"What is the final state of `sb`?\n\\begin{verbatim}\nStringBuilder sb = new StringBuilder(\"12345\");\nsb.substring(2);\nsb.delete(1,3);\nSystem.out.println(sb);\n\\end{verbatim}","choices":{"0":"`145`","1":"`45`","2":"`12345`","3":"`345`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101424,"difficulty":"hard","type":"single","question":"What is the output of this code?\n\\begin{verbatim}\nStringBuilder sb = new StringBuilder();\nsb.append(\"123456789\");\nsb.setLength(5);\nsb.setLength(10);\nSystem.out.println(sb.length());\n\\end{verbatim}","choices":{"0":"5","1":"9","2":"10","3":"An exception is thrown."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101425,"difficulty":"hard","type":"single","question":"Which line of code, when inserted at `// INSERT`, will result in both `boolean` variables being `true`?\n\\begin{verbatim}\nStringBuilder sb1 = new StringBuilder(\"A\");\nStringBuilder sb2 = new StringBuilder(\"A\");\nString s1 = new String(\"A\");\n\n// INSERT\n\nboolean b1 = sb1.toString().equals(s1);\nboolean b2 = sb1 == sb2;\n\\end{verbatim}","choices":{"0":"`sb2 = sb1;`","1":"`sb1 = new StringBuilder(s1);`","2":"`s1 = sb1.toString(); sb2 = sb1;`","3":"It's impossible to make both `true`."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101426,"difficulty":"hard","type":"multiple","question":"Which code blocks will result in the string `\"true false\"` being printed? (Choose all that apply)","choices":{"0":"\\begin{verbatim}String s1 = \"a\";\nString s2 = s1 + \"b\";\nString s3 = \"ab\";\nSystem.out.print(s3.equals(s2));\nSystem.out.print(\" \");\nSystem.out.print(s3 == s2);\n\\end{verbatim}","1":"\\begin{verbatim}StringBuilder sb1 = new StringBuilder(\"a\");\nStringBuilder sb2 = new StringBuilder(\"a\");\nSystem.out.print(sb1.toString().equals(sb2.toString()));\nSystem.out.print(\" \");\nSystem.out.print(sb1.equals(sb2));\n\\end{verbatim}","2":"\\begin{verbatim}StringBuilder sb = new StringBuilder(\"a\");\nString s = \"a\";\nSystem.out.print(sb.toString().equals(s));\nSystem.out.print(\" \");\nSystem.out.print(sb.equals(s));\n\\end{verbatim}","3":"\\begin{verbatim}String s1 = \"a\";\nfinal String s2 = \"a\";\nString s3 = s2 + \"b\";\nString s4 = \"ab\";\nSystem.out.print(s3.equals(s4));\nSystem.out.print(\" \");\nSystem.out.print(s3 == s4);\n\\end{verbatim}"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101427,"difficulty":"hard","type":"multiple","question":"Given `StringBuilder sb = new StringBuilder(\"abcde\");`. Which statements about its capacity are true? (Choose all that apply)","choices":{"0":"The initial capacity is 21 (5 for \"abcde\" + 16 default).","1":"`sb.trimToSize();` will likely change its capacity to 5.","2":"After `sb.append(\"fghijklmnopqrstuvwxyz\");`, the capacity will be larger than its length.","3":"`sb.ensureCapacity(10);` will not change the capacity."},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101428,"difficulty":"hard","type":"multiple","question":"Which of these method calls can throw a `StringIndexOutOfBoundsException`? (Choose all that apply)\n\\begin{verbatim}\nStringBuilder sb = new StringBuilder(\"abc\");\n\\end{verbatim}","choices":{"0":"`sb.delete(1, 4);`","1":"`sb.insert(4, \"d\");`","2":"`sb.replace(0, 5, \"x\");`","3":"`sb.setCharAt(3, 'd');`"},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101500,"difficulty":"easy","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\npublic class Gadget {\\n    String name = \"Default\";\\n\\n    public Gadget(String name) {\\n        this.name = name;\\n    }\\n\\n    public void printName() {\\n        System.out.println(name);\\n    }\\n\\n    public static void main(String[] args) {\\n        Gadget g = new Gadget(\"Phone\");\\n        g.printName();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Default","1":"Phone","2":"The code will not compile.","3":"An exception is thrown at runtime."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101501,"difficulty":"easy","type":"single","question":"Which of the following best describes Encapsulation in Object-Oriented Programming?","choices":{"0":"The ability of an object to take on many forms.","1":"The mechanism of basing an object or class upon another object or class.","2":"The bundling of data (attributes) and methods that operate on the data into a single unit, and restricting access to some of the object's components.","3":"The process of hiding the implementation details and showing only functionality to the user."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101502,"difficulty":"easy","type":"single","question":"Consider the following class. What is the default value of the `count` and `name` instance variables before the constructor is called?\\n\\begin{verbatim}\\npublic class Counter {\\n    int count;\\n    String name;\\n\\n    public Counter() {\\n        // ...\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"`count` is 0, `name` is \"\".","1":"`count` is 0, `name` is `null`.","2":"`count` is `null`, `name` is `null`.","3":"The code does not compile because instance variables must be initialized."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101503,"difficulty":"easy","type":"single","question":"Which line of code correctly creates an instance of the `Car` class?\\n\\begin{verbatim}\\npublic class Car {\\n    public Car() {}\\n}\\n\\end{verbatim}","choices":{"0":"`Car myCar = Car();`","1":"`Car myCar = new Car;`","2":"`Car myCar = new Car();`","3":"`new Car() = myCar;`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101504,"difficulty":"easy","type":"single","question":"What is the output of the following program?\\n\\begin{verbatim}\\npublic class Book {\\n    String title;\\n\\n    public static void main(String[] args) {\\n        Book myBook = new Book();\\n        System.out.println(\"Title is \" + myBook.title);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Title is","1":"Title is null","2":"A `NullPointerException` is thrown at runtime.","3":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101505,"difficulty":"easy","type":"multiple","question":"Which of the following are considered the four main pillars of Object-Oriented Programming? (Choose all that apply)","choices":{"0":"Encapsulation","1":"Inheritance","2":"Compilation","3":"Polymorphism","4":"Abstraction","5":"Instantiation"},"answers":["0","1","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101506,"difficulty":"medium","type":"single","question":"What is the result of compiling and running the following code?\\n\\begin{verbatim}\\npublic class Test {\\n    public static void main(String[] args) {\\n        Test t;\\n        t.go();\\n    }\\n\\n    void go() {\\n        System.out.println(\"Going!\");\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Going!","1":"The code compiles but throws a `NullPointerException` at runtime.","2":"The code fails to compile because `t` is not initialized.","3":"The code compiles but throws an `IllegalStateException` at runtime."},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101507,"difficulty":"medium","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\nclass Dimension {\\n    int width;\\n}\\n\\npublic class Box {\\n    public static void main(String[] args) {\\n        Dimension d1 = new Dimension();\\n        d1.width = 10;\\n\\n        Dimension d2 = d1;\\n        d2.width = 20;\\n\\n        System.out.println(\"d1.width = \" + d1.width);\\n        System.out.println(\"d2.width = \" + d2.width);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"d1.width = 10\\nd2.width = 20","1":"d1.width = 10\\nd2.width = 10","2":"d1.width = 20\\nd2.width = 20","3":"d1.width = 20\\nd2.width = 10"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101508,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile and run the following code?\\n\\begin{verbatim}\\nclass Computer {\\n    String model;\\n    public Computer(String model) {\\n        this.model = model;\\n    }\\n}\\n\\npublic class Office {\\n    public static void main(String[] args) {\\n        Computer comp = new Computer();\\n        System.out.println(comp.model);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"The code compiles and prints `null`.","1":"The code compiles but throws a `NullPointerException` at runtime.","2":"The code fails to compile because the `Computer` class does not have a no-argument constructor.","3":"The code fails to compile because the `model` field is accessed directly."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101509,"difficulty":"medium","type":"single","question":"What is the output of the following program?\\n\\begin{verbatim}\\npublic class Employee {\\n    String name = \"Global\";\\n\\n    void setName(String name) {\\n        name = name;\\n    }\\n\\n    public static void main(String[] args) {\\n        Employee e = new Employee();\\n        e.setName(\"Local\");\\n        System.out.println(e.name);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Local","1":"Global","2":"null","3":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101510,"difficulty":"medium","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\npublic class Order {\\n    {\\n        System.out.print(\"A\");\\n    }\\n\\n    public Order() {\\n        System.out.print(\"B\");\\n    }\\n\\n    public static void main(String[] args) {\\n        new Order();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"A","1":"B","2":"AB","3":"BA"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101511,"difficulty":"medium","type":"single","question":"Which method is called by `m.calculate(10);`?\\n\\begin{verbatim}\\npublic class Calculator {\\n    void calculate(int i) {\\n        System.out.println(\"int version\");\\n    }\\n\\n    void calculate(long l) {\\n        System.out.println(\"long version\");\\n    }\\n\\n    void calculate(double d) {\\n        System.out.println(\"double version\");\\n    }\\n\\n    public static void main(String[] args) {\\n        Calculator c = new Calculator();\\n        byte b = 10;\\n        c.calculate(b);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"int version","1":"long version","2":"double version","3":"The code does not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101512,"difficulty":"medium","type":"single","question":"Given the code snippet, at which point does the `Person` object created on line `//1` become eligible for garbage collection?\\n\\begin{verbatim}\\npublic class Person {\\n    String name;\\n    public Person(String name) { this.name = name; }\\n\\n    public static void main(String[] args) {\\n        Person p1 = new Person(\"Alice\"); //1\\n        Person p2 = new Person(\"Bob\");   //2\\n        p1 = p2;                         //3\\n        // Point X\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"After line `//1`","1":"After line `//2`","2":"Immediately after line `//3` is executed.","3":"Only after the `main` method completes."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101513,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile the following code in two separate files, `Key.java` and `Lock.java`?\\n\\begin{verbatim}\\n// In Key.java\\npackage com.safe;\\npublic class Key {\\n    private Key() {}\\n}\\n\\n// In Lock.java\\npackage com.safe;\\npublic class Lock {\\n    public void open() {\\n        Key k = new Key();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Both files compile successfully.","1":"`Lock.java` fails to compile because it cannot access the private constructor of `Key`.","2":"`Key.java` fails to compile because a class cannot have only a private constructor.","3":"Both files compile, but a runtime error occurs when `open()` is called."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101514,"difficulty":"medium","type":"single","question":"What is printed by the following code?\\n\\begin{verbatim}\\npublic class Shadow {\\n    int x = 1;\\n\\n    public void print(int x) {\\n        System.out.print(x + \",\");\\n        System.out.print(this.x);\\n    }\\n\\n    public static void main(String[] args) {\\n        new Shadow().print(5);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"1,5","1":"5,1","2":"1,1","3":"5,5"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101515,"difficulty":"medium","type":"single","question":"What is the output of this code?\\n\\begin{verbatim}\\npublic class Message {\\n    String text = \"Hello\";\\n\\n    public void print() {\\n        System.out.println(text);\\n    }\\n\\n    public static void main(String[] args) {\\n        Message m = new Message();\\n        m = null;\\n        m.print();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Hello","1":"null","2":"A `NullPointerException` is thrown.","3":"The code does not compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101516,"difficulty":"medium","type":"single","question":"What is the output of the following program?\\n\\begin{verbatim}\\nclass NumberWrapper {\\n    public int value;\\n}\\n\\npublic class Tester {\\n    public static void main(String[] args) {\\n        NumberWrapper nw = new NumberWrapper();\\n        nw.value = 10;\\n        update(nw);\\n        System.out.println(nw.value);\\n    }\\n\\n    public static void update(NumberWrapper n) {\\n        n.value = 20;\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"10","1":"20","2":"0","3":"The code will not compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101517,"difficulty":"medium","type":"multiple","question":"Which statements about constructors are true? (Choose all that apply)","choices":{"0":"A constructor must have the same name as the class.","1":"A constructor must not have a return type, not even `void`.","2":"If you do not define any constructor, the compiler provides a public, no-arg constructor by default.","3":"A constructor can be declared `private`.","4":"A constructor is called using the `new` keyword.","5":"You can call a constructor from a method using `this()`."},"answers":["0","1","2","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101518,"difficulty":"medium","type":"multiple","question":"Given the class `Data`, which of the following are valid ways to initialize the instance variable `value`? (Choose all that apply)\\n\\begin{verbatim}\\npublic class Data {\\n    private int value;\\n    // INSERT INITIALIZATION HERE\\n}\\n\\end{verbatim}","choices":{"0":"In a declaration: `private int value = 10;`","1":"In an instance initializer block: `{ value = 20; }`","2":"In a constructor: `public Data() { value = 30; }`","3":"In a static block: `static { value = 40; }`","4":"In a method: `public void setValue() { this.value = 50; }`"},"answers":["0","1","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101519,"difficulty":"medium","type":"multiple","question":"Which of the following code snippets, when inserted independently at `// INSERT HERE`, will cause a compilation error? (Choose all that apply)\\n\\begin{verbatim}\\npublic class TestClass {\\n    private int x = 10;\\n\\n    public static void main(String[] args) {\\n        // INSERT HERE\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"`System.out.println(x);`","1":"`TestClass tc = null; System.out.println(tc.x);`","2":"`TestClass tc = new TestClass(); System.out.println(tc.x);`","3":"`System.out.println(this.x);`"},"answers":["0","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101520,"difficulty":"medium","type":"multiple","question":"What are the characteristics of a class that correctly follows the principle of encapsulation? (Choose all that apply)","choices":{"0":"All instance variables are declared `public` for easy access.","1":"Instance variables are declared `private`.","2":"Public accessor methods (getters) and mutator methods (setters) are provided to access and modify the private instance variables.","3":"The class cannot be instantiated.","4":"The internal state of the object is hidden from the outside.","5":"All methods are declared `static`."},"answers":["1","2","4"],"attempts":1,"attempted":true,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101521,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\npublic class Chain {\\n    private int value;\\n\\n    public Chain() {\\n        this(5);\\n        System.out.print(\"A\");\\n    }\\n\\n    public Chain(int value) {\\n        this(value, \"X\");\\n        System.out.print(\"B\");\\n        this.value += value;\\n    }\\n\\n    public Chain(int value, String s) {\\n        System.out.print(s);\\n        this.value = value;\\n    }\\n\\n    public static void main(String[] args) {\\n        Chain c = new Chain();\\n        System.out.print(c.value);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"XBA5","1":"ABX10","2":"XBA10","3":"The code fails to compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101522,"difficulty":"hard","type":"single","question":"Given the following class, what is printed when the `main` method is executed?\\n\\begin{verbatim}\\npublic class OverloadMaster {\\n    public void process(int i, long l) { System.out.println(\"int, long\"); }\\n    public void process(long l, int i) { System.out.println(\"long, int\"); }\\n\\n    public static void main(String[] args) {\\n        OverloadMaster om = new OverloadMaster();\\n        om.process(10, 10);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"int, long","1":"long, int","2":"The code fails to compile due to an ambiguous method call.","3":"The code compiles but throws an exception at runtime."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101523,"difficulty":"hard","type":"single","question":"What is the output of the following program?\\n\\begin{verbatim}\\npublic class InitOrder {\\n    {\\n        System.out.print(val + \",\");\\n    }\\n    int val = 1;\\n    {\\n        System.out.print(val + \",\");\\n    }\\n\\n    public InitOrder() {\\n        val = 2;\\n        System.out.print(val);\\n    }\\n\\n    public static void main(String[] args) {\\n        new InitOrder();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"0,1,2","1":"1,1,2","2":"The code fails to compile.","3":"1,2,2"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101524,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\nclass Wallet {\\n    public int cash;\\n}\\n\\npublic class Thief {\\n    public static void main(String[] args) {\\n        Wallet w = new Wallet();\\n        w.cash = 100;\\n        steal(w);\\n        System.out.println(w.cash);\\n    }\\n\\n    public static void steal(Wallet victimWallet) {\\n        victimWallet.cash -= 50;\\n        victimWallet = new Wallet(); // Thief gets a new wallet\\n        victimWallet.cash = 10;\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"100","1":"50","2":"10","3":"0"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101525,"difficulty":"hard","type":"single","question":"What is the result of executing the following code?\\n\\begin{verbatim}\\npublic class LogicCheck {\\n    public static void main(String[] args) {\\n        LogicCheck lc = null;\\n        if (lc != null && lc.isReady()) {\\n            System.out.println(\"Ready\");\\n        } else {\\n            System.out.println(\"Not Ready\");\\n        }\\n    }\\n\\n    public boolean isReady() {\\n        return true;\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Ready","1":"Not Ready","2":"A `NullPointerException` is thrown at runtime.","3":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101526,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\npublic class Robot {\\n    String id;\\n\\n    public Robot(String id) { this.id = id; }\\n\\n    void init() {\\n        System.out.print(id + \" \");\\n    }\\n\\n    public static void main(String[] args) {\\n        new Robot(\"R2D2\").init();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"R2D2","1":"null","2":"The code compiles but throws an exception at runtime.","3":"The code fails to compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101527,"difficulty":"hard","type":"single","question":"Which statement about the `final` instance variable `ID` is correct?\\n\\begin{verbatim}\\npublic class Record {\\n    private final int ID;\\n\\n    public Record(int id) {\\n        this.ID = id;\\n    }\\n\\n    public void setId(int id) {\\n        // Line X\\n        ID = id;\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"The code is correct as is.","1":"The code will fail to compile because a `final` variable cannot be assigned in a constructor.","2":"The code will fail to compile at Line X because a `final` variable cannot be reassigned.","3":"The code will compile but throw a runtime exception at Line X."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101528,"difficulty":"hard","type":"multiple","question":"Which statements are true regarding the initialization of a new object? (Choose all that apply)","choices":{"0":"The constructor body is executed before instance initializers.","1":"If present, a call to another constructor using `this()` must be the very first statement in a constructor.","2":"Static variables are initialized after the constructor completes.","3":"Instance variables are assigned their default values (e.g., 0, false, null) before any instance initializers or constructors are run.","4":"Instance initializers are executed in the order they appear in the source code.","5":"It is valid for a class to have multiple instance initializer blocks."},"answers":["1","3","4","5"],"attempts":0,"attempted":false,"answered":false},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101529,"difficulty":"hard","type":"multiple","question":"You have an encapsulated `MutableDate` class. Which of the following getter method implementations for a `Person` class would risk breaking the encapsulation of the `Person` object's state? (Choose all that apply)\\n\\begin{verbatim}\\n// Assume MutableDate is a class like java.util.Date\\n// with public methods to change its state.\\nclass MutableDate { /* ... setters ... */ }\\n\\nclass Person {\\n    private String name;\\n    private MutableDate birthDate;\\n\\n    public Person(String name, MutableDate birthDate) {\\n        this.name = name;\\n        this.birthDate = birthDate;\\n    }\\n\\n    // ... getters ...\\n}\\n\\end{verbatim}","choices":{"0":"`public MutableDate getBirthDate() { return this.birthDate; }`","1":"`public String getName() { return this.name; }`","2":"`public MutableDate getBirthDate() { return new MutableDate(this.birthDate.getTime()); }`","3":"`public MutableDate getBirthDate() { return (MutableDate) this.birthDate.clone(); }` (Assume `clone()` is implemented correctly for a deep copy).","4":"`public void printBirthDate() { System.out.println(this.birthDate); }`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101600,"difficulty":"easy","type":"single","question":"Which of the following is a valid constructor declaration for a class named `Laptop`?","choices":{"0":"``public void Laptop() { }``","1":"``Laptop() { }``","2":"``public static Laptop() { }``","3":"``public new Laptop() { }``"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101601,"difficulty":"easy","type":"single","question":"What is the primary purpose of a constructor in Java?","choices":{"0":"To create a new thread of execution.","1":"To initialize the state of a newly created object.","2":"To be the first method that runs when a program starts.","3":"To return a new instance of a class."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101602,"difficulty":"easy","type":"single","question":"Under which condition does the Java compiler provide a default, no-argument constructor for a class?","choices":{"0":"Always.","1":"Only if the class is declared `public`.","2":"Only if the programmer has not defined any constructors in the class.","3":"Only if the class has no instance variables."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101603,"difficulty":"easy","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\npublic class Greeter {\\n    static {\\n        System.out.print(\"Static block! \");\\n    }\\n\\n    public static void main(String[] args) {\\n        System.out.print(\"Main method!\");\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Main method!","1":"Static block! Main method!","2":"Main method! Static block!","3":"The code does not compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101604,"difficulty":"easy","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\npublic class Init {\\n    { System.out.print(\"Instance, \"); }\\n\\n    public Init() {\\n        System.out.print(\"Constructor\");\\n    }\\n\\n    public static void main(String[] args) {\\n        new Init();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Constructor","1":"Instance, ","2":"Constructor, Instance","3":"Instance, Constructor"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101605,"difficulty":"easy","type":"multiple","question":"Which of the following statements about constructors are true? (Choose all that apply)","choices":{"0":"A constructor must have the same name as the class it is in.","1":"A constructor can have a `void` return type.","2":"A constructor is called automatically when an object is created using the `new` keyword.","3":"A constructor can be overloaded.","4":"A class can have more constructors than it has methods."},"answers":["0","2","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101606,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile and run the following code?\\n\\begin{verbatim}\\npublic class NotAConstructor {\\n    public void NotAConstructor() {\\n        System.out.println(\"Hello!\");\\n    }\\n\\n    public static void main(String[] args) {\\n        new NotAConstructor();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"It fails to compile because the constructor has a return type.","1":"It compiles and prints \"Hello!\" to the console.","2":"It compiles, but nothing is printed to the console.","3":"It compiles but throws an exception at runtime."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101607,"difficulty":"medium","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\npublic class OrderOfInit {\\n    static { System.out.print(\"S\"); }\\n\\n    public OrderOfInit() {\\n        System.out.print(\"C\");\\n    }\\n\\n    { System.out.print(\"I\"); }\\n\\n    public static void main(String[] args) {\\n        new OrderOfInit();\\n        new OrderOfInit();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"SIC SIC","1":"S IC IC","2":"S C I S C I","3":"IC IC S"},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101608,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile this class?\\n\\begin{verbatim}\\npublic class Chaining {\\n    public Chaining() {\\n        System.out.println(\"Building\");\\n        this(10);\\n    }\\n\\n    public Chaining(int i) {\\n        System.out.println(\"Building with \" + i);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"It compiles successfully.","1":"It fails to compile because the call to `this(10)` must be the first statement in the constructor.","2":"It fails to compile because of a recursive constructor invocation.","3":"It fails to compile because a constructor cannot be called with `this`."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101609,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile this class?\\n\\begin{verbatim}\\npublic class StaticAccess {\\n    private int x = 10;\\n\\n    static {\\n        System.out.println(x);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"It compiles and prints 10.","1":"It compiles and prints 0.","2":"It fails to compile because a static block cannot access a non-static variable.","3":"It compiles but throws a `NullPointerException` at runtime."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101610,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile the class `Sub`?\\n\\begin{verbatim}\\nclass Super {\\n    Super(String s) { }\\n}\\n\\nclass Sub extends Super {\\n    // No constructor defined\\n}\\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"A compilation error occurs in class `Sub`.","2":"A compilation error occurs in class `Super`.","3":"The code compiles, but a runtime error will occur if an attempt is made to instantiate `Sub`."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101611,"difficulty":"medium","type":"single","question":"What is printed by the following code?\\n\\begin{verbatim}\\npublic class Test {\\n    String name = \"Initial\";\\n\\n    { name = \"Instance Block\"; }\\n\\n    public Test() {\\n        name = \"Constructor\";\\n    }\\n\\n    public static void main(String[] args) {\\n        Test t = new Test();\\n        System.out.println(t.name);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Initial","1":"Instance Block","2":"Constructor","3":"The code does not compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101612,"difficulty":"medium","type":"single","question":"Which constructor is invoked by the call `new Box(5)`?\\n\\begin{verbatim}\\npublic class Box {\\n    public Box(long l) { System.out.println(\"long\"); }\\n    public Box(Integer i) { System.out.println(\"Integer\"); }\\n    public Box(Object o) { System.out.println(\"Object\"); }\\n\\n    public static void main(String[] args) {\\n        new Box(5);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"long","1":"Integer","2":"Object","3":"The code fails to compile due to ambiguity."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101613,"difficulty":"medium","type":"single","question":"How many times will `Static Block` be printed?\\n\\begin{verbatim}\\npublic class Counter {\\n    static {\\n        System.out.println(\"Static Block\");\\n    }\\n\\n    public static void main(String[] args) {\\n        Counter c1;\\n        System.out.println(\"Declared c1\");\\n        Counter c2 = new Counter();\\n        System.out.println(\"Created c2\");\\n        Counter c3 = null;\\n        System.out.println(\"Declared c3\");\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"0","1":"1","2":"2","3":"3"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101614,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile this class?\\n\\begin{verbatim}\\npublic class Cycle {\\n    public Cycle() {\\n        this(5);\\n    }\\n    public Cycle(int x) {\\n        this();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Compilation succeeds.","1":"Compilation fails due to a recursive constructor invocation.","2":"Compilation fails because the default constructor is not explicitly defined.","3":"Compilation succeeds but will cause a `StackOverflowError` at runtime."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101615,"difficulty":"medium","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\npublic class FinalInit {\\n    private final String name;\\n\\n    {\\n        name = \"Block\";\\n    }\\n\\n    public FinalInit() {\\n        // Line 1\\n    }\\n\\n    public static void main(String[] args) {\\n        System.out.println(new FinalInit().name);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Block","1":"null","2":"The code fails to compile.","3":"A runtime exception is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101616,"difficulty":"medium","type":"single","question":"What is the output of this program?\\n\\begin{verbatim}\\npublic class MainTest {\\n    public MainTest() {\\n        System.out.print(\"A\");\\n    }\\n\\n    public static void main(String... args) {\\n        System.out.print(\"B\");\\n        MainTest test = new MainTest();\\n    }\\n\\n    static {\\n        System.out.print(\"C\");\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"C B A","1":"B C A","2":"A B C","3":"C A B"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101617,"difficulty":"medium","type":"multiple","question":"Which of the following statements about static initializer blocks are true? (Choose all that apply)","choices":{"0":"They are executed only once, when the class is first loaded by the JVM.","1":"They can access `this` to refer to the current object.","2":"A class can have multiple static initializer blocks.","3":"They can access non-static instance variables of the class.","4":"They are guaranteed to execute before any instance of the class is created.","5":"They can throw checked exceptions without a `throws` clause."},"answers":["0","2","4"],"attempts":1,"attempted":true,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101618,"difficulty":"medium","type":"multiple","question":"Which of the following code snippets will result in a compilation error? (Choose all that apply)","choices":{"0":"``class A { A() { super(); this(); } }``","1":"``class B { B() { } B(int i) { } }``","2":"``class C { final int x; { x = 10; } }``","3":"``class D { D() { return; } }``","4":"``class E { void E() {} }``"},"answers":["0"],"attempts":1,"attempted":true,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101619,"difficulty":"medium","type":"multiple","question":"Given the class `X`, which lines of code can be uncommented independently and still allow the class to compile? (Choose all that apply)\\n\\begin{verbatim}\\npublic class X {\\n    private final int value;\\n\\n    // public X() { this.value = 1; } // Line 1\\n    // public X() { value = 2; }       // Line 2\\n    // { value = 3; }                   // Line 3\\n    // public X() { this(4); }          // Line 4\\n    // public X(int v) { this.value = v; } // Line 5\\n}\\n\\end{verbatim}","choices":{"0":"Line 1 and Line 3","1":"Line 2 and Line 5","2":"Line 3 and Line 5","3":"Line 4 and Line 5"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101620,"difficulty":"medium","type":"multiple","question":"In the process of creating a new object of a class that extends another class, which of the following are executed? (Choose all that apply)","choices":{"0":"The superclass's static initializers.","1":"The subclass's static initializers.","2":"The superclass's instance initializers.","3":"The superclass's constructor.","4":"The subclass's instance initializers.","5":"The subclass's constructor."},"answers":["0","1","2","3","4","5"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101621,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\nclass Base {\\n    static { System.out.print(\"A\"); }\\n    { System.out.print(\"B\"); }\\n    Base() { System.out.print(\"C\"); }\\n}\\nclass Derived extends Base {\\n    static { System.out.print(\"D\"); }\\n    { System.out.print(\"E\"); }\\n    Derived() { System.out.print(\"F\"); }\\n\\n    public static void main(String[] args) {\\n        new Derived();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"A D B C E F","1":"A B C D E F","2":"D A E B F C","3":"A D B E C F"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101622,"difficulty":"hard","type":"single","question":"What is the output of this program?\\n\\begin{verbatim}\\npublic class ForwardReference {\\n    {\\n        System.out.print(value + \" \");\\n    }\\n    private int value = 1;\\n    {\\n        System.out.print(value + \" \");\\n    }\\n\\n    public ForwardReference() {\\n        System.out.print(value);\\n    }\\n\\n    public static void main(String... args) {\\n        new ForwardReference();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"1 1 1","1":"0 1 1","2":"0 0 1","3":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101623,"difficulty":"hard","type":"single","question":"What is the output of this program?\\n\\begin{verbatim}\\npublic class StaticForward {\\n    static {\\n        System.out.print(x + \" \");\\n    }\\n    private static int x = initX();\\n    static {\\n        System.out.print(x + \" \");\\n    }\\n\\n    private static int initX() {\\n        System.out.print(\"initX \");\\n        return 10;\\n    }\\n\\n    public static void main(String[] args) {\\n        // Class loading is triggered by main method lookup\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"0 initX 10","1":"initX 10 10","2":"The code fails to compile due to illegal forward reference.","3":"initX 0 10"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101624,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\npublic class SelfInit {\\n    static { System.out.print(\"S1 \"); }\\n\\n    private static final SelfInit instance = new SelfInit();\\n\\n    static { System.out.print(\"S2 \"); }\\n\\n    private SelfInit() { System.out.print(\"C \"); }\\n\\n    { System.out.print(\"I \"); }\\n\\n    public static void main(String[] args) { }\\n}\\n\\end{verbatim}","choices":{"0":"S1 S2 I C","1":"S1 I C S2","2":"I C S1 S2","3":"S1 C I S2"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101625,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run the following code?\\n\\begin{verbatim}\\nabstract class Builder {\\n    Builder() { System.out.print(\"B\"); }\\n}\\n\\npublic class House extends Builder {\\n    House() {\\n        // super() is implicitly called here\\n        System.out.print(\"H\");\\n    }\\n\\n    public static void main(String[] args) {\\n        new House();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"The code fails to compile because an abstract class cannot have a constructor.","1":"The code compiles and prints \"BH\".","2":"The code compiles and prints \"HB\".","3":"The code fails to compile because `new Builder()` is not allowed."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101626,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\npublic class TrickyInit {\\n    TrickyInit(int i) {\\n        System.out.print(\"C(\" + i + \")\");\\n    }\\n\\n    { System.out.print(\"I1 \"); }\\n\\n    int x = 1;\\n\\n    TrickyInit() {\\n        this(2);\\n        System.out.print(\"C() \");\\n    }\\n\\n    { System.out.print(\"I2 \"); }\\n\\n    public static void main(String... args) {\\n        new TrickyInit();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"I1 I2 C(2)C()","1":"I1 C(2)I2 C()","2":"C(2)C() I1 I2","3":"I1 I2 C()C(2)"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101627,"difficulty":"hard","type":"single","question":"What is the result of compiling this class? \\n\\begin{verbatim}\\npublic class FinalChallenge {\\n    private final int value;\\n\\n    public FinalChallenge() {\\n        this(10);\\n        // value = 20; // Line A\\n    }\\n\\n    public FinalChallenge(int value) {\\n        this.value = value;\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"The code compiles successfully as is.","1":"The code fails to compile because a final field is assigned in one constructor but not the other.","2":"If Line A is uncommented, the code will fail to compile.","3":"The code fails to compile because a final field cannot be assigned in a constructor that uses `this()`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101628,"difficulty":"hard","type":"multiple","question":"Which of these initialization scenarios will result in a compilation error? (Choose all that apply)","choices":{"0":"A final instance variable initialized in an instance block but not in the constructor.","1":"A final instance variable initialized in one constructor but not in an overloaded constructor.","2":"An instance variable accessed from an instance block declared before the variable's declaration.","3":"A static variable accessed from a static block declared before the variable's declaration.","4":"A constructor with a call to `super()` followed by a call to `this()`."},"answers":["1","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101629,"difficulty":"hard","type":"multiple","question":"Which statements correctly describe the complete order of initialization for an object `new Sub()` where `Sub extends Super`? (Choose all that apply)","choices":{"0":"Static initializers of `Super` run before static initializers of `Sub`.","1":"All instance initializers (both `Super` and `Sub`) run before any constructor code.","2":"The constructor body of `Super` runs before the instance initializers of `Sub`.","3":"The constructor body of `Sub` is the very last thing to run for the `Sub` object's initialization.","4":"Static initializers of `Sub` run before instance initializers of `Super`.","5":"Instance initializers of `Sub` run before the constructor body of `Sub`."},"answers":["0","2","3","4","5"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101700,"difficulty":"easy","type":"single","question":"Which keyword in Java is used to refer to the current object instance from within an instance method or a constructor?","choices":{"0":"`self`","1":"`current`","2":"`this`","3":"`static`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101701,"difficulty":"easy","type":"single","question":"What is the correct way to call the static method `getPi()` from the `Math` class?","choices":{"0":"`new Math().getPi();`","1":"`Math.getPi();`","2":"`this.getPi();`","3":"`getPi();`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101702,"difficulty":"easy","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\npublic class Dog {\\n    private String name;\\n\\n    public Dog(String name) {\\n        this.name = name;\\n    }\\n\\n    public String getName() {\\n        return name;\\n    }\\n\\n    public static void main(String[] args) {\\n        Dog d = new Dog(\"Buddy\");\\n        System.out.println(d.getName());\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"name","1":"Buddy","2":"null","3":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101703,"difficulty":"easy","type":"single","question":"Which of the following statements is true about static variables?","choices":{"0":"Each instance of the class has its own copy of a static variable.","1":"A static variable can only be accessed by static methods.","2":"Static variables are shared among all instances of a class.","3":"Static variables must be declared `final`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101704,"difficulty":"easy","type":"single","question":"What is the result of attempting to compile and run the following code?\\n\\begin{verbatim}\\npublic class StaticContext {\\n    public static void main(String[] args) {\\n        System.out.println(this);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"The code prints the memory address of the `StaticContext` object.","1":"The code prints `null`.","2":"The code fails to compile.","3":"The code compiles but throws a `NullPointerException`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101705,"difficulty":"easy","type":"multiple","question":"Which of the following are valid uses for the `this` keyword? (Choose all that apply)","choices":{"0":"To call a static method in the same class.","1":"To call an overloaded constructor from another constructor.","2":"To distinguish an instance variable from a method parameter with the same name.","3":"To pass the current object as an argument to another method.","4":"To create a new instance of the current class."},"answers":["1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101706,"difficulty":"medium","type":"single","question":"What is the output of the following program?\\n\\begin{verbatim}\\npublic class Counter {\\n    static int count = 0;\\n\\n    public Counter() {\\n        count++;\\n    }\\n\\n    public static void main(String[] args) {\\n        Counter c1 = new Counter();\\n        Counter c2 = new Counter();\\n        Counter c3 = new Counter();\\n        System.out.println(count);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"0","1":"1","2":"3","3":"The code fails to compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101707,"difficulty":"medium","type":"single","question":"What is the result of trying to compile this class?\\n\\begin{verbatim}\\npublic class Validator {\\n    private boolean valid;\\n\\n    public static void validate() {\\n        this.valid = true;\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Compilation is successful.","1":"Compilation fails because `this` cannot be used in a static context.","2":"Compilation fails because the `valid` field cannot be accessed from `validate()`.","3":"Compilation fails because a static method cannot have a `void` return type."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101708,"difficulty":"medium","type":"single","question":"What is the output of the following code snippet?\\n\\begin{verbatim}\\npublic class Player {\\n    private int score = 10;\\n\\n    public void setScore(int score) {\\n        score = score;\\n    }\\n\\n    public static void main(String[] args) {\\n        Player p = new Player();\\n        p.setScore(100);\\n        System.out.println(p.score);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"10","1":"100","2":"0","3":"The code fails to compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101709,"difficulty":"medium","type":"single","question":"What is the result of compiling and running the following code?\\n\\begin{verbatim}\\npublic class StaticAccess {\\n    static String GREETING = \"Hello\";\\n\\n    public static void main(String[] args) {\\n        StaticAccess sa = null;\\n        System.out.println(sa.GREETING);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Hello","1":"null","2":"A `NullPointerException` is thrown at runtime.","3":"The code fails to compile."},"answers":["0"],"attempts":1,"attempted":true,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101710,"difficulty":"medium","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\nimport static java.lang.Integer.MAX_VALUE;\\n\\npublic class StaticImportTest {\\n    public static void main(String[] args) {\\n        System.out.println(MAX_VALUE);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"MAX_VALUE","1":"2147483647","2":"The code does not compile because of the import statement.","3":"The code does not compile because `MAX_VALUE` is ambiguous."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101711,"difficulty":"medium","type":"single","question":"Which statement is correct about the following code?\\n\\begin{verbatim}\\npublic class AccessTest {\\n    int a = 1;\\n    static int b = 2;\\n\\n    public void instanceMethod() {\\n        System.out.println(a + b);\\n    }\\n\\n    public static void staticMethod() {\\n        System.out.println(a + b); // Line X\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"The code compiles without error.","1":"A compile error occurs on Line X.","2":"A compile error occurs in `instanceMethod`.","3":"The code compiles, but a runtime error occurs if `staticMethod` is called."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101712,"difficulty":"medium","type":"single","question":"What is the output of this code?\\n\\begin{verbatim}\\npublic class Builder {\\n    public Builder step1() {\\n        System.out.print(\"1\");\\n        return this;\\n    }\\n\\n    public Builder step2() {\\n        System.out.print(\"2\");\\n        return this;\\n    }\\n\\n    public static void main(String[] args) {\\n        new Builder().step1().step2();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"1","1":"2","2":"12","3":"21"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101713,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile this class?\\n\\begin{verbatim}\\npublic class Car {\\n    private int speed;\\n\\n    public Car() {\\n        System.out.println(\"Car created.\");\\n        this(0); // Line X\\n    }\\n\\n    public Car(int speed) {\\n        this.speed = speed;\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"It compiles successfully.","1":"It fails to compile because of a recursive constructor call.","2":"It fails to compile because the call to `this(0)` at Line X is not the first statement.","3":"It fails to compile because `this()` cannot be called from a no-arg constructor."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101714,"difficulty":"medium","type":"single","question":"What is the output of the following program?\\n\\begin{verbatim}\\npublic class StaticVar {\\n    static int x = 5;\\n\\n    public static void main(String[] args) {\\n        StaticVar sv1 = new StaticVar();\\n        StaticVar sv2 = new StaticVar();\\n        sv1.x = 10;\\n        sv2.x = 20;\\n        System.out.print(sv1.x);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"5","1":"10","2":"20","3":"The code produces a compiler warning but prints 20."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101715,"difficulty":"medium","type":"single","question":"What is the result of this code?\\n\\begin{verbatim}\\npublic class Main {\\n    int instanceVar = 10;\\n\\n    public static void main(String[] args) {\\n        Main m = new Main();\\n        m.process();\\n    }\\n\\n    public void process() {\\n        int instanceVar = 20;\\n        System.out.println(this.instanceVar);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"10","1":"20","2":"The code fails to compile.","3":"A runtime exception is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101716,"difficulty":"medium","type":"single","question":"Which of the following lines can be inserted at `// INSERT` to make the code compile?\\n\\begin{verbatim}\\npublic class Test {\\n    private int value;\\n\\n    public static void setValue(int v) {\\n        // INSERT\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"`value = v;`","1":"`this.value = v;`","2":"`new Test().value = v;`","3":"`super.value = v;`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101717,"difficulty":"medium","type":"multiple","question":"Which statements are true about `static` methods? (Choose all that apply)","choices":{"0":"They can be called without creating an instance of the class.","1":"They can directly access instance variables of the same class.","2":"They can use the `this` keyword.","3":"They can call other static methods in the same class.","4":"They cannot be overloaded.","5":"The `main` method is an example of a static method."},"answers":["0","3","5"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101718,"difficulty":"medium","type":"multiple","question":"Which of the following code snippets will cause a compilation error? (Choose all that apply)","choices":{"0":"`class A { static { this.hashCode(); } }`","1":"`class B { static int x; void method() { x = 10; } }`","2":"`class C { int y; static void method() { y = 20; } }`","3":"`class D { static void method() {} public static void main(String[] args) { D.method(); } }`","4":"`abstract class E { public static abstract void go(); }`"},"answers":["0","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101719,"difficulty":"medium","type":"multiple","question":"Given the class `Calculator`, which of the following calls are valid and will not cause a compile error or runtime exception? (Choose all that apply)\\n\\begin{verbatim}\\npublic class Calculator {\\n    public static int add(int a, int b) {\\n        return a + b;\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"`Calculator.add(1, 2);`","1":"`Calculator calc = new Calculator(); calc.add(1, 2);`","2":"`Calculator calc = null; calc.add(1, 2);`","3":"`new Calculator().add(1, 2);`"},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101720,"difficulty":"medium","type":"multiple","question":"From within a non-static method of a class, which of the following can be accessed directly without an explicit reference? (Choose all that apply)","choices":{"0":"An instance variable of the same class.","1":"A static variable of the same class.","2":"The `this` reference.","3":"A static method of the same class.","4":"An instance variable of another object of the same class."},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101721,"difficulty":"hard","type":"single","question":"What is the output of the following code? This question tests method hiding.\\n\\begin{verbatim}\\nclass Animal {\\n    static void eat() { System.out.println(\"Animal eats\"); }\\n}\\nclass Dog extends Animal {\\n    static void eat() { System.out.println(\"Dog eats\"); }\\n}\\npublic class Test {\\n    public static void main(String[] args) {\\n        Animal myAnimal = new Dog();\\n        myAnimal.eat();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Animal eats","1":"Dog eats","2":"The code fails to compile.","3":"A runtime exception is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101722,"difficulty":"hard","type":"single","question":"What is the output of this program?\\n\\begin{verbatim}\\npublic class ShadowTest {\\n    static int x = 1;\\n    int y = 2;\\n\\n    void print() {\\n        int x = 3;\\n        int y = 4;\\n        System.out.print(x);\\n        System.out.print(this.y);\\n        System.out.print(ShadowTest.x);\\n    }\\n\\n    public static void main(String[] args) {\\n        new ShadowTest().print();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"341","1":"321","2":"123","3":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101723,"difficulty":"hard","type":"single","question":"What is the output of the following code? This question tests static initialization order.\\n\\begin{verbatim}\\npublic class Init {\\n    static { a = b * 2; }\\n    static int a = 10;\\n    static int b = 5;\\n    static { a = b * 3; }\\n\\n    public static void main(String[] args) {\\n        System.out.println(a);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"10","1":"15","2":"30","3":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101724,"difficulty":"hard","type":"single","question":"What is the output?\\n\\begin{verbatim}\\nimport static java.lang.System.out;\\n\\npublic class NameClash {\\n    static String out = \"Local out\";\\n\\n    public static void main(String[] args) {\\n        out.println(\"Hello\");\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"The code prints \"Hello\".","1":"The code prints \"Local out\".","2":"The code fails to compile due to an ambiguous reference to 'out'.","3":"The code fails to compile because `out.println` is not a method on the String class."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101725,"difficulty":"hard","type":"single","question":"What is the output of this code? This tests understanding of `this` within inner classes.\\n\\begin{verbatim}\\npublic class Outer {\\n    String name = \"Outer\";\\n\\n    class Inner {\\n        String name = \"Inner\";\\n        void printNames() {\\n            System.out.println(name);\\n            System.out.println(this.name);\\n            System.out.println(Outer.this.name);\\n        }\\n    }\\n\\n    public static void main(String[] args) {\\n        new Outer().new Inner().printNames();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Inner\\nInner\\nOuter","1":"Outer\\nOuter\\nOuter","2":"Inner\\nOuter\\nOuter","3":"The code fails to compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101726,"difficulty":"hard","type":"single","question":"What is the result of the following code?\\n\\begin{verbatim}\\npublic class StaticInit {\\n    private static final int a = b;\\n    private static final int b = 10;\\n\\n    public static void main(String[] args) {\\n        System.out.println(a);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"0","1":"10","2":"The code fails to compile due to an illegal forward reference.","3":"A runtime exception is thrown."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101727,"difficulty":"hard","type":"single","question":"What is the output of the following program?\\n\\begin{verbatim}\\npublic class StaticBlockSideEffect {\\n    static final String name;\\n\\n    static {\\n        name = \"Java\";\\n        System.out.print(\"Block 1 \");\\n    }\\n\\n    static {\\n        System.out.print(name + \" \");\\n    }\\n\\n    public static void main(String[] args) {\\n        System.out.print(\"Main\");\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Block 1 Java Main","1":"Java Block 1 Main","2":"Block 1 null Main","3":"The code fails to compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101728,"difficulty":"hard","type":"multiple","question":"Which of the following combinations of modifiers are illegal in Java? (Choose all that apply)","choices":{"0":"`private static` on a method.","1":"`final static` on a variable.","2":"`abstract static` on a method.","3":"`static` on a top-level class.","4":"`static` on a constructor.","5":"`static` on an interface method (in Java 8)."},"answers":["2","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101729,"difficulty":"hard","type":"multiple","question":"Given `public class Test { static int x = 1; int y = 2; }`, which of the following lines of code are valid if placed inside the `main` method of another class? (Choose all that apply)","choices":{"0":"`System.out.println(Test.x);`","1":"`System.out.println(Test.y);`","2":"`Test t = new Test(); System.out.println(t.x);`","3":"`Test t = new Test(); System.out.println(t.y);`","4":"`Test t = null; System.out.println(t.x);`","5":"`Test t = null; System.out.println(t.y);`"},"answers":["0","2","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101800,"difficulty":"easy","type":"single","question":"Which of the following statements is most accurate regarding the Java Garbage Collector (GC)?","choices":{"0":"Calling `System.gc()` forces the Garbage Collector to run immediately and reclaim all eligible objects.","1":"The Garbage Collector guarantees that an object's `finalize()` method will be called before it is deallocated.","2":"The Garbage Collector is a process that runs on a predictable schedule to free up memory.","3":"The Garbage Collector automatically frees memory occupied by objects that are no longer reachable from any active threads."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101801,"difficulty":"easy","type":"single","question":"Consider the following code snippet:\n\\begin{verbatim}\npublic class Car {\n    private String model;\n    public Car(String model) { this.model = model; }\n}\n\npublic class Test {\n    public static void main(String[] args) {\n        Car myCar = new Car(\"Sedan\"); // Line 1\n        myCar = new Car(\"SUV\");     // Line 2\n        // Point X\n    }\n}\n\\end{verbatim}\nAt Point X, how many `Car` objects are eligible for garbage collection?","choices":{"0":"0","1":"1","2":"2","3":"It is impossible to determine."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101802,"difficulty":"easy","type":"single","question":"What is the direct consequence of setting an object reference variable to `null`?","choices":{"0":"The object is immediately destroyed by the Garbage Collector.","1":"The object's `finalize()` method is immediately invoked.","2":"The reference variable is removed from the stack, but the object on the heap remains until the program ends.","3":"The object may become eligible for garbage collection if no other reachable references to it exist."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101803,"difficulty":"easy","type":"multiple","question":"Which of the following actions can make a previously referenced object eligible for garbage collection? (Choose all that apply)","choices":{"0":"Reassigning the reference variable to a new object.","1":"Setting the reference variable to `null`.","2":"The reference variable going out of scope.","3":"Calling the `finalize()` method on the object."},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101804,"difficulty":"easy","type":"single","question":"When does an object created inside a method become eligible for garbage collection?","choices":{"0":"Immediately after it is created.","1":"Only when `System.gc()` is called.","2":"After the method in which it was created completes execution, assuming no references to the object escape the method.","3":"When the entire application shuts down."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101805,"difficulty":"easy","type":"single","question":"Which method is called by the Garbage Collector on an object just before reclaiming its memory?","choices":{"0":"`destroy()`","1":"`gc()`","2":"`finalize()`","3":"`delete()`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101806,"difficulty":"medium","type":"single","question":"What is the result of executing the following code?\n\\begin{verbatim}\npublic class TestGC {\n    public static void main(String[] args) {\n        StringBuilder s1 = new StringBuilder(\"A\");\n        StringBuilder s2 = new StringBuilder(\"B\");\n        process(s1, s2);\n        System.out.println(s1 + \" \" + s2);\n    }\n\n    static void process(StringBuilder x, StringBuilder y) {\n        x.append(\"C\");\n        y = x;\n    }\n}\n\\end{verbatim}","choices":{"0":"AC B","1":"A B","2":"AC AC","3":"A AC","4":"Compilation fails."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101807,"difficulty":"medium","type":"single","question":"Examine this code:\n\\begin{verbatim}\npublic class Island {\n    Island i;\n    public static void main(String[] args) {\n        Island i1 = new Island();\n        Island i2 = new Island();\n        Island i3 = new Island();\n\n        i1.i = i2; // Line 1\n        i2.i = i3; // Line 2\n        i3.i = i1; // Line 3\n\n        i1 = null; // Line 4\n        i2 = null; // Line 5\n        // Point X\n        // Assume GC runs here\n    }\n}\n\\end{verbatim}\nAfter Line 5, but before Point X, how many objects are eligible for garbage collection?","choices":{"0":"0","1":"1","2":"2","3":"3","4":"It depends on whether `i3` is set to null."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101808,"difficulty":"medium","type":"single","question":"What is true about the `finalize()` method?","choices":{"0":"It is guaranteed to be called exactly once for every object.","1":"If `finalize()` throws an unhandled exception, the application will terminate.","2":"It can be invoked by the programmer, and the JVM is guaranteed to invoke it again before garbage collection.","3":"The JVM may call `finalize()` on an object at most once."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101809,"difficulty":"medium","type":"single","question":"Consider the following code:\n\\begin{verbatim}\npublic class Counter {\n    private static int count = 0;\n    protected void finalize() {\n        count++;\n    }\n    public static void main(String[] args) {\n        for(int i=0; i < 5; i++) {\n            Counter c = new Counter();\n        }\n        System.gc();\n        // Point X\n        System.out.println(\"Finalized count: \" + count);\n    }\n}\n\\end{verbatim}\nWhat is the most likely output?","choices":{"0":"Finalized count: 0","1":"Finalized count: 1","2":"Finalized count: 5","3":"The output is not predictable."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101810,"difficulty":"medium","type":"multiple","question":"Which of the following statements about `System.gc()` are true? (Choose all that apply)","choices":{"0":"It is a request to the JVM to run the garbage collector.","1":"It guarantees that the garbage collector will run.","2":"It guarantees that all unreachable objects will be collected.","3":"It is equivalent to calling `Runtime.getRuntime().gc()`.","4":"It forces finalization of all objects pending finalization."},"answers":["0","3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101811,"difficulty":"medium","type":"single","question":"Examine this code:\n\\begin{verbatim}\npublic class TestScope {\n    public static void main(String [] args) {\n        // Point A\n        methodA();\n        // Point C\n        System.gc();\n        // Point D\n    }\n\n    public static void methodA() {\n        String local = new String(\"Hello\");\n        // Point B\n    }\n}\n\\end{verbatim}\nAt which point does the `String` object created in `methodA` first become eligible for garbage collection?","choices":{"0":"Point A","1":"Point B","2":"Point C","3":"Point D"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101812,"difficulty":"medium","type":"single","question":"Which of the following can prevent an object from being garbage collected?","choices":{"0":"The object is an instance of a class that implements `Serializable`.","1":"The object has a non-empty `finalize()` method.","2":"The object is referenced by a static variable.","3":"The object has been passed to `System.out.println()`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101813,"difficulty":"medium","type":"multiple","question":"Given the code:\n\\begin{verbatim}\nList<String> list1 = new ArrayList<>();\nList<String> list2 = new ArrayList<>();\nlist1.add(\"A\");\nlist2 = list1;\nlist1 = null;\n// Point X\n\\end{verbatim}\nWhich statements are true at Point X? (Choose all that apply)","choices":{"0":"The `ArrayList` object originally assigned to `list1` is eligible for GC.","1":"The `ArrayList` object originally assigned to `list1` is not eligible for GC.","2":"The `ArrayList` object originally assigned to `list2` is eligible for GC.","3":"No objects are eligible for GC.","4":"The reference `list1` is null.","5":"The reference `list2` is null."},"answers":["1","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101814,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\npublic class MyObject {\n    public static void main(String[] args) {\n        MyObject obj1 = new MyObject();\n        MyObject obj2 = m1(obj1);\n        MyObject obj3 = new MyObject();\n        obj2 = obj3;\n        // Point X\n        // How many MyObject instances are eligible for GC at this point?\n    }\n\n    static MyObject m1(MyObject temp) {\n        temp = new MyObject();\n        return temp;\n    }\n}\n\\end{verbatim}","choices":{"0":"0","1":"1","2":"2","3":"3"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101815,"difficulty":"medium","type":"multiple","question":"Which of the following are valid declarations for the `finalize` method in a class named `MyClass`? (Choose all that apply)","choices":{"0":"`public void finalize()`","1":"`protected void finalize() throws Throwable`","2":"`private void finalize()`","3":"`void finalize()`","4":"`public Object finalize()`"},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101816,"difficulty":"medium","type":"single","question":"Consider the code:\n\\begin{verbatim}\npublic class FinalizeTest {\n    public static void main(String[] args) {\n        FinalizeTest ft = new FinalizeTest();\n        try {\n            ft.finalize();\n            ft.finalize();\n            System.out.print(\"A\");\n        } catch (Throwable t) {\n            System.out.print(\"B\");\n        } finally {\n            System.out.print(\"C\");\n        }\n    }\n}\n\\end{verbatim}\nWhat is the output?","choices":{"0":"AC","1":"BC","2":"C","3":"ABC","4":"Compilation fails."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101817,"difficulty":"medium","type":"multiple","question":"Which of the following guarantee that an object will NOT be garbage collected? (Choose all that apply)","choices":{"0":"The object is referenced by a local variable in a method that is currently executing.","1":"The object is referenced by another object which is itself unreachable.","2":"The object has just been created with the `new` keyword.","3":"The object is referenced by a static variable in a loaded class.","4":"The object's `finalize()` method has not yet been run."},"answers":["0","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101818,"difficulty":"medium","type":"single","question":"After the `go()` method is called, how many `Dog` objects are eligible for GC?\n\\begin{verbatim}\nclass Dog {}\nclass Test {\n    public static void main(String[] args) {\n        new Test().go();\n    }\n    void go() {\n        Dog aDog = new Dog();\n        Dog sameDog = getDog(aDog);\n    }\n    Dog getDog(Dog d) {\n        return d;\n    }\n}\n\\end{verbatim}","choices":{"0":"0","1":"1","2":"2","3":"The result is unpredictable."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101819,"difficulty":"medium","type":"single","question":"Examine this code:\n\\begin{verbatim}\npublic class Island {\n    Island i;\n    public static void main(String[] args) {\n        Island i1 = new Island();\n        Island i2 = new Island();\n\n        i1.i = i2;\n        i2.i = i1;\n\n        i1 = null;\n        i2 = null;\n\n        // Point X\n        System.gc();\n    }\n}\n\\end{verbatim}\nAt Point X, what is the state of the two `Island` objects created in `main`?","choices":{"0":"Both objects are reachable and not eligible for GC.","1":"Exactly one object is eligible for GC.","2":"Both objects are eligible for GC.","3":"The code will result in a `StackOverflowError`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101820,"difficulty":"medium","type":"single","question":"What happens if an exception is thrown from within a `finalize()` method?","choices":{"0":"The exception propagates to the `main` thread and terminates the application if not caught.","1":"The garbage collector catches the exception, ignores it, and halts finalization for that object.","2":"The object is not garbage collected.","3":"The JVM will shut down immediately.","4":"It causes a compilation error."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101821,"difficulty":"hard","type":"single","question":"Examine this code carefully:\n\\begin{verbatim}\npublic class Zombie {\n    static Zombie zombie;\n    @Override\n    protected void finalize() {\n        System.out.print(\"X\");\n        zombie = this; // Resurrection\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        Zombie z = new Zombie();\n        z = null;\n        System.gc();\n        Thread.sleep(100); // Allow time for finalization\n\n        if (zombie != null) {\n            zombie = null;\n            System.gc();\n            Thread.sleep(100); // Allow time for GC again\n        }\n        System.out.print(\"Y\");\n    }\n}\n\\end{verbatim}\nWhat is the most likely output?","choices":{"0":"XY","1":"XXY","2":"Y","3":"YX","4":"The output is unpredictable."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101822,"difficulty":"hard","type":"single","question":"What is the final value of `count` printed to the console?\n\\begin{verbatim}\npublic class GCCount {\n    static int count = 0;\n    int id;\n\n    public GCCount(int id) { this.id = id; }\n\n    public static void main(String[] args) {\n        new GCCount(1);\n        GCCount g2 = new GCCount(2);\n        GCCount g3 = new GCCount(3);\n        g2 = g3;\n        new GCCount(4);\n        g3 = null;\n        // Point X\n        System.gc();\n        System.out.println(count);\n    }\n\n    @Override\n    protected void finalize() {\n        count++;\n    }\n}\n\\end{verbatim}","choices":{"0":"0","1":"2","2":"3","3":"4","4":"The output is not guaranteed."},"answers":["4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101823,"difficulty":"hard","type":"multiple","question":"Which of these statements are true regarding Java's memory management and garbage collection? (Choose all that apply)","choices":{"0":"Objects are stored on the heap, while object references are typically stored on the stack.","1":"The `finalize()` method is a reliable mechanism for cleaning up critical resources like database connections.","2":"An 'island of isolation' refers to a group of objects that reference each other but have no external reachable references, making them eligible for GC.","3":"Generational garbage collectors divide the heap into young and old generations to improve efficiency, assuming most objects die young.","4":"Calling `System.exit(0)` will trigger garbage collection and finalization for all live objects before the JVM shuts down."},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101824,"difficulty":"hard","type":"single","question":"How many objects are eligible for GC at Point X?\n\\begin{verbatim}\npublic class ComplexRef {\n    ComplexRef child;\n    public static void main(String[] args) {\n        ComplexRef c1 = new ComplexRef();\n        ComplexRef c2 = new ComplexRef();\n        ComplexRef c3 = new ComplexRef();\n        c1.child = c2;\n        c2.child = c3;\n        c3.child = c1;\n        c1 = new ComplexRef();\n        c1.child = c2;\n        c2 = null;\n        // Point X\n    }\n}\n\\end{verbatim}","choices":{"0":"0","1":"1","2":"3","3":"4"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101825,"difficulty":"hard","type":"single","question":"Given the following code, what is the most likely output?\n\\begin{verbatim}\npublic class FinalizerBomb {\n    @Override\n    protected void finalize() {\n        System.out.print(\"A\");\n        throw new RuntimeException(\"Boom!\");\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        FinalizerBomb fb1 = new FinalizerBomb();\n        FinalizerBomb fb2 = new FinalizerBomb();\n        fb1 = null;\n        fb2 = null;\n        System.gc();\n        Thread.sleep(200);\n        System.out.print(\"B\");\n    }\n}\n\\end{verbatim}","choices":{"0":"AAB","1":"AB","2":"B","3":"A `RuntimeException` is printed to the console, and the program terminates.","4":"The output could be AAB, ABA, BAA, AB, BA, or B, depending on thread scheduling."},"answers":["4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101826,"difficulty":"hard","type":"multiple","question":"Select all lines of code after which at least one `Gadget` object becomes eligible for garbage collection.\n\\begin{verbatim}\nclass Gadget {}\npublic class GadgetFactory {\n    static Gadget staticGadget = new Gadget(); // Line 1\n    Gadget instanceGadget = new Gadget();      // Line 2\n\n    public static void main(String[] args) {\n        GadgetFactory gf = new GadgetFactory(); // Line 3\n        Gadget g1 = new Gadget();               // Line 4\n        gf.build(g1);\n        g1 = null;                              // Line 5\n        gf = null;                              // Line 6\n    }\n\n    void build(Gadget g) {\n        Gadget g2 = new Gadget();               // Line 7\n    } // End of build method is effectively Line 8\n}\n\\end{verbatim}","choices":{"0":"Line 5","1":"Line 6","2":"Line 8","3":"The line after the `main` method completes.","4":"Line 3"},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101827,"difficulty":"hard","type":"single","question":"What is the output of the following program?\n\\begin{verbatim}\npublic class Holder {\n    private String s = \"\";\n    public Holder(String s) { this.s = s; }\n\n    public static void main(String[] args) {\n        Holder h1 = new Holder(\"A\");\n        Holder h2 = new Holder(\"B\");\n        swap(h1, h2);\n        System.out.println(h1.s + \",\" + h2.s);\n    }\n\n    public static void swap(Holder a, Holder b) {\n        Holder temp = a;\n        a = b;\n        b = temp;\n    }\n}\n\\end{verbatim}","choices":{"0":"A,B","1":"B,A","2":"null,null","3":"Compilation fails."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101828,"difficulty":"hard","type":"single","question":"Analyze the following code. At Point Y, how many `java.lang.String` objects are eligible for GC, assuming no string pooling optimizations for literals?\n\\begin{verbatim}\npublic class StringGC {\n    public static void main(String[] args) {\n        String s1 = \"one\";\n        String s2 = new String(\"two\");\n        String s3 = \"three\";\n        s3 = s1;\n        s1 = s2;\n        s2 = null;\n\n        // What about the object referred to by s1 originally (\"one\")?\n        // What about the object referred to by s2 originally (\"two\")?\n        // What about the object referred to by s3 originally (\"three\")?\n        // Point Y\n    }\n}\n\\end{verbatim}","choices":{"0":"0","1":"1","2":"2","3":"3"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101829,"difficulty":"hard","type":"single","question":"What is the result of compiling and running this code?\n\\begin{verbatim}\npublic class ScopeTest {\n    static String s = \"s1\";\n    public static void main(String[] args) {\n        String s = \"s2\";\n        new ScopeTest().run();\n        System.out.println(s);\n    }\n\n    void run() {\n        String s = \"s3\";\n        System.out.println(s);\n        System.out.println(this.s);\n    }\n}\n\\end{verbatim}","choices":{"0":"s3\\ns1\\ns2","1":"s3\\ns2\\ns2","2":"s2\\ns1\\ns2","3":"s3\\ns1\\ns1","4":"Compilation fails due to ambiguous variable 's'."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101900,"difficulty":"easy","type":"single","question":"Which of the following is the primary goal of encapsulation in Object-Oriented Programming?","choices":{"0":"To allow methods to be used by many different types of objects.","1":"To bundle an object's data (fields) and methods together, hiding the internal state from the outside.","2":"To create a parent-child relationship between classes.","3":"To ensure all fields in a class are declared as `public` for easy access."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101901,"difficulty":"easy","type":"single","question":"Which access modifier restricts access to members of a class to only the class itself?","choices":{"0":"`public`","1":"`protected`","2":"`private`","3":"`default`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101902,"difficulty":"easy","type":"single","question":"If a class member (field or method) is declared without any access modifier, what is its access level?","choices":{"0":"public","1":"protected","2":"private","3":"default (package-private)"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101903,"difficulty":"easy","type":"multiple","question":"Which of the following are valid access modifiers for a top-level class declaration (a class not nested inside another)? (Choose all that apply)","choices":{"0":"`public`","1":"`protected`","2":"`private`","3":"`default` (no modifier)"},"answers":["0","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101904,"difficulty":"easy","type":"single","question":"Which access modifier allows access to a member from any class in any package?","choices":{"0":"`public`","1":"`protected`","2":"`global`","3":"`unrestricted`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101905,"difficulty":"easy","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\n// In file A.java\npublic class A {\n    private int value = 10;\n}\n\n// In file B.java\npublic class B {\n    public static void main(String[] args) {\n        A obj = new A();\n        System.out.println(obj.value);\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles and prints 10.","1":"The code fails to compile because class B cannot access the private member `value` of class A.","2":"The code compiles but throws a runtime exception.","3":"The code fails to compile because class A does not have a main method."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101906,"difficulty":"medium","type":"single","question":"Given the following file structure:\n\\begin{verbatim}\n/app\n  /p1\n    Parent.java\n  /p2\n    Child.java\n\\end{verbatim}\nAnd the following code:\n\\begin{verbatim}\n// In p1/Parent.java\npackage p1;\npublic class Parent {\n    protected void greet() {\n        System.out.println(\"Hello\");\n    }\n}\n\n// In p2/Child.java\npackage p2;\nimport p1.Parent;\npublic class Child extends Parent {\n    public void testGreeting() {\n        greet(); // Line X\n    }\n}\n\\end{verbatim}\nWhat is the result of Line X?","choices":{"0":"Compilation fails because `greet()` is protected and in a different package.","1":"Compilation is successful.","2":"Compilation fails because `greet()` must be called on an object reference.","3":"Compilation is successful, but a runtime error occurs."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101907,"difficulty":"medium","type":"single","question":"A method is declared as `protected void process()` in a class `A`. A subclass `B` wants to override this method. Which of the following declarations for the overriding method in `B` is illegal?","choices":{"0":"`public void process()`","1":"`protected void process()`","2":"`void process()`","3":"All of the above are legal."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101908,"difficulty":"medium","type":"single","question":"Given the following classes in the same package `com.test`:\n\\begin{verbatim}\npackage com.test;\nclass Vehicle {\n    String type = \"Car\";\n}\n\npackage com.test;\npublic class TestVehicle {\n    public static void main(String[] args) {\n        Vehicle v = new Vehicle();\n        System.out.println(v.type);\n    }\n}\n\\end{verbatim}\nWhat is the result?","choices":{"0":"Compilation fails because `Vehicle` is not public.","1":"Compilation fails because `type` is not accessible from `TestVehicle`.","2":"The code compiles and prints \"Car\".","3":"The code compiles but throws an `IllegalAccessException` at runtime."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101909,"difficulty":"medium","type":"single","question":"What is the main consequence of a class having a `private` constructor?","choices":{"0":"The class cannot be instantiated at all.","1":"The class can only be instantiated from within the class itself.","2":"The class can only be instantiated by subclasses.","3":"It causes a compilation error because constructors must be public."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101910,"difficulty":"medium","type":"multiple","question":"Given a class `Animal` in package `zoo`. The class has members with all four access modifiers. Which of these members can a class `Bird` in package `zoo.aviary` access, assuming `Bird` extends `Animal`? (Choose all that apply)","choices":{"0":"A `public` member.","1":"A `protected` member.","2":"A `default` (package-private) member.","3":"A `private` member."},"answers":["0","1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101911,"difficulty":"medium","type":"single","question":"Consider this code:\n\\begin{verbatim}\npublic class Data { \n    private java.util.List<String> list = new java.util.ArrayList<>();\n\n    public java.util.List<String> getList() {\n        return list;\n    }\n}\n\n// In another class:\nData data = new Data();\nList<String> myList = data.getList();\nmyList.add(\"New Item\");\n\\end{verbatim}\nWhich principle of OOP is primarily violated by the `getList()` method?","choices":{"0":"Inheritance","1":"Polymorphism","2":"Encapsulation","3":"Abstraction"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101912,"difficulty":"medium","type":"single","question":"Given two packages, `p1` and `p2`:\n\\begin{verbatim}\n// In package p1\npackage p1;\npublic class A {\n    protected int value = 42;\n}\n\n// In package p2\npackage p2;\nimport p1.A;\npublic class B {\n    public void test() {\n        A a = new A();\n        System.out.println(a.value); // Line X\n    }\n}\n\\end{verbatim}\nWhat is the result of attempting to compile these classes?","choices":{"0":"Compilation succeeds, and it would print 42 if `test()` were called.","1":"Compilation fails at Line X.","2":"Compilation succeeds, but a runtime exception occurs at Line X.","3":"Compilation fails because class B cannot import class A."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101913,"difficulty":"medium","type":"multiple","question":"Which of the following declarations will cause a compilation error? (Choose all that apply)","choices":{"0":"`private interface MyInterface {}` (at the top level)","1":"`public class MyClass { private class Inner {} }`","2":"`final abstract class MyAbstractClass {}`","3":"`protected class MyClass {}` (at the top level)","4":"`public class MyClass { public static final int x = 1; }`"},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101914,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nclass Parent {\n    public String name = \"Parent\";\n    void printName() { System.out.println(name); }\n}\n\nclass Child extends Parent {\n    public String name = \"Child\";\n    void printName() { System.out.println(name); }\n}\n\npublic class Test {\n    public static void main(String[] args) {\n        Parent p = new Child();\n        System.out.println(p.name);\n        p.printName();\n    }\n}\n\\end{verbatim}","choices":{"0":"Parent\\nChild","1":"Child\\nChild","2":"Parent\\nParent","3":"Child\\nParent","4":"Compilation fails."},"answers":["0"],"attempts":1,"attempted":true,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101915,"difficulty":"medium","type":"multiple","question":"A class `X` is in package `pkgA`. It has four methods, one for each access level.\n\\begin{verbatim}\npackage pkgA;\npublic class X {\n    public void m1() {}\n    protected void m2() {}\n    void m3() {}\n    private void m4() {}\n}\n\\end{verbatim}\nWhich methods can be legally called from a class `Y` located in the same package (`pkgA`), assuming `Y` does not extend `X`? (Choose all that apply)","choices":{"0":"`m1()`","1":"`m2()`","2":"`m3()`","3":"`m4()`"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101916,"difficulty":"medium","type":"single","question":"Given the following code in two separate files:\n\\begin{verbatim}\n// File: pkg1/Base.java\npackage pkg1;\npublic class Base {\n    public void method() {\n        System.out.println(\"Base\");\n    }\n}\n\n// File: pkg2/Derived.java\npackage pkg2;\nimport pkg1.Base;\npublic class Derived extends Base {\n    private void method() {\n        System.out.println(\"Derived\");\n    }\n    public static void main(String[] args) {\n        Base b = new Derived();\n        b.method();\n    }\n}\n\\end{verbatim}\nWhat is the result?","choices":{"0":"Base","1":"Derived","2":"Compilation fails because the overriding method is more restrictive.","3":"Compilation fails because `method()` in `Derived` is not an override.","4":"A runtime error occurs."},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101917,"difficulty":"medium","type":"multiple","question":"Which are true statements about encapsulation? (Choose all that apply)","choices":{"0":"It allows the internal implementation of an object to be changed without affecting external code.","1":"It is primarily enforced by making all class members `public`.","2":"Getter and setter methods provide controlled access to an object's state.","3":"It prevents a class from being subclassed.","4":"It helps in achieving a more maintainable and flexible codebase."},"answers":["0","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101918,"difficulty":"medium","type":"single","question":"A public class `Appliance` has a `protected` constructor. Which of the following is true?","choices":{"0":"The class `Appliance` cannot be instantiated anywhere.","1":"The class `Appliance` can be instantiated from any other class in the same package.","2":"The class `Appliance` cannot be extended.","3":"The class `Appliance` can only be instantiated by calling `new Appliance()` from within a subclass in another package."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101919,"difficulty":"medium","type":"single","question":"Which line of code will cause a compilation error?\n\\begin{verbatim}\npackage my.app;\npublic class AccessTest {\n    private int x = 1;      // Line 1\n    static int y = 2;       // Line 2\n\n    public static void main(String[] args) {\n        int z = 3;          // Line 3\n        System.out.println(x + y + z); // Line 4\n    }\n}\n\\end{verbatim}","choices":{"0":"Line 1","1":"Line 2","2":"Line 3","3":"Line 4"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101920,"difficulty":"medium","type":"single","question":"Given:\n\\begin{verbatim}\n// In package finance\npackage finance;\npublic class Account {}\n\n// In package client\npackage client;\n// import finance.Account;\npublic class Client {\n    finance.Account acc;\n}\n\\end{verbatim}\nWhat is the result of compiling this code?","choices":{"0":"Both files compile successfully.","1":"Compilation of `Client.java` fails.","2":"Compilation of `Account.java` fails.","3":"A runtime error occurs if a `Client` object is created."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101921,"difficulty":"hard","type":"single","question":"Given the following classes in separate packages:\n\\begin{verbatim}\n// In package p1\npackage p1;\npublic class SuperClass {\n    protected void testMethod() { System.out.println(\"Super\"); }\n}\n\n// In package p2\npackage p2;\nimport p1.SuperClass;\npublic class SubClass extends SuperClass {\n    public void accessTest(SuperClass sc, SubClass subc) {\n        sc.testMethod();    // Line 1\n        subc.testMethod();  // Line 2\n    }\n}\n\\end{verbatim}\nWhat is the result of attempting to compile these classes?","choices":{"0":"Compilation succeeds for both classes.","1":"Compilation fails at Line 1 only.","2":"Compilation fails at Line 2 only.","3":"Compilation fails at both Line 1 and Line 2."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101922,"difficulty":"hard","type":"single","question":"Given:\n\\begin{verbatim}\n// In file p1/A.java\npackage p1;\nclass A {\n    public void process() { System.out.println(\"A\"); }\n}\n\n// In file p2/B.java\npackage p2;\nimport p1.*;\npublic class B {\n    public static void main(String[] args) {\n        A a = new A();\n        a.process();\n    }\n}\n\\end{verbatim}\nWhat is the result of compiling and running class `p2.B`?","choices":{"0":"The code prints \"A\".","1":"A compilation error occurs in `p2/B.java`.","2":"A compilation error occurs in `p1/A.java`.","3":"A `NoClassDefFoundError` is thrown at runtime."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101923,"difficulty":"hard","type":"multiple","question":"Which of the following lines of code, when inserted independently at `// INSERT HERE`, will cause a compilation error?\n\\begin{verbatim}\n// In file abc/A.java\npackage abc;\npublic class A {\n    protected int val = 1;\n}\n\n// In file xyz/B.java\npackage xyz;\nimport abc.A;\npublic class B extends A {\n    public void test() {\n        // INSERT HERE\n    }\n}\n\n// In file xyz/C.java\npackage xyz;\nimport abc.A;\npublic class C {\n    public void test() {\n        // INSERT HERE\n    }\n}\n\\end{verbatim}","choices":{"0":"In `xyz.B`: `System.out.println(val);`","1":"In `xyz.B`: `A a = new A(); System.out.println(a.val);`","2":"In `xyz.C`: `B b = new B(); System.out.println(b.val);`","3":"In `xyz.B`: `B b = new B(); System.out.println(b.val);`"},"answers":["1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101924,"difficulty":"hard","type":"single","question":"Given the code:\n\\begin{verbatim}\n// In package company.parts\npackage company.parts;\npublic class Engine {\n    // package-private constructor\n    Engine() {}\n}\n\n// In package company.parts\npackage company.parts;\npublic class PartsFactory {\n    public static Engine getEngine() {\n        return new Engine();\n    }\n}\n\n// In package company.vehicles\npackage company.vehicles;\nimport company.parts.*;\npublic class Car {\n    public static void main(String[] args) {\n        Engine e = PartsFactory.getEngine(); // Line X\n        System.out.println(\"Engine acquired\");\n    }\n}\n\\end{verbatim}\nWhat is the result?","choices":{"0":"Compilation fails at Line X because `Engine`'s constructor is not visible.","1":"Compilation fails at Line X because the `Engine` class is not visible.","2":"Compilation succeeds, and \"Engine acquired\" is printed.","3":"Compilation fails because `PartsFactory.getEngine()` returns a type whose constructor is not public."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101925,"difficulty":"hard","type":"single","question":"Examine the following code:\n\\begin{verbatim}\n// In package p1\npackage p1;\npublic interface CanFly {\n    void fly(); // public abstract by default\n}\n\n// In package p1\npackage p1;\npublic abstract class Bird {\n    protected abstract void sing();\n}\n\n// In package p2\npackage p2;\nimport p1.*;\nclass Robin extends Bird implements CanFly {\n    // Which implementation of fly() is valid?\n    // Which implementation of sing() is valid?\n}\n\\end{verbatim}\nWhich pair of method implementations, when inserted into the `Robin` class, will allow the code to compile?","choices":{"0":"`void fly() {}` and `protected void sing() {}`","1":"`public void fly() {}` and `private void sing() {}`","2":"`protected void fly() {}` and `void sing() {}`","3":"`public void fly() {}` and `public void sing() {}`"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101926,"difficulty":"hard","type":"multiple","question":"Which of the following combinations of modifiers are illegal for a method declaration in a class? (Choose all that apply)","choices":{"0":"`public static final`","1":"`private abstract`","2":"`protected synchronized`","3":"`final private`","4":"`abstract static`"},"answers":["1","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101927,"difficulty":"hard","type":"single","question":"Given the following two files:\n\\begin{verbatim}\n// File: pkgA/Router.java\npackage pkgA;\ninterface NetworkDevice { String getType(); }\npublic class Router implements NetworkDevice {\n    public String getType() { return \"Router\"; }\n}\n\n// File: pkgB/Firewall.java\npackage pkgB;\nimport pkgA.*;\npublic class Firewall {\n    public static void main(String[] args) {\n        Router r = new Router();\n        NetworkDevice n = r;\n        System.out.println(n.getType());\n    }\n}\n\\end{verbatim}\nWhat is the result of attempting to compile `Firewall.java`?","choices":{"0":"Compilation succeeds, and it will print \"Router\" when run.","1":"Compilation fails because the type `NetworkDevice` is not visible in `pkgB`.","2":"Compilation fails because the type `Router` cannot be instantiated in `pkgB`.","3":"Compilation fails because `n.getType()` is an ambiguous call."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101928,"difficulty":"hard","type":"single","question":"What is the result of the following code?\n\\begin{verbatim}\n// In pkg1/A.java\npackage pkg1;\npublic class A {\n    protected A() {}\n}\n\n// In pkg2/B.java\npackage pkg2;\nimport pkg1.A;\npublic class B extends A {\n    // Line 1\n}\n\n// In pkg2/C.java\npackage pkg2;\nimport pkg1.A;\npublic class C {\n    A a = new A(); // Line 2\n}\n\\end{verbatim}","choices":{"0":"Compilation fails only at Line 1.","1":"Compilation fails only at Line 2.","2":"Compilation fails at both Line 1 and Line 2.","3":"All code compiles successfully."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101929,"difficulty":"hard","type":"single","question":"Examine the code:\n\\begin{verbatim}\npublic final class MyData {\n    private final StringBuilder builder;\n\n    public MyData(StringBuilder b) {\n        this.builder = b;\n    }\n\n    public StringBuilder getBuilder() {\n        return builder;\n    }\n}\n\n// Main method in another class\nStringBuilder sb = new StringBuilder(\"Initial\");\nMyData data = new MyData(sb);\nsb.append(\" Changed\");\nSystem.out.println(data.getBuilder());\n\\end{verbatim}\nWhat is the output?","choices":{"0":"Initial","1":"Initial Changed","2":"A new `StringBuilder` object's string representation.","3":"Compilation fails because `final` fields cannot be assigned in a constructor.","4":"Compilation fails because `StringBuilder` is mutable."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102000,"difficulty":"easy","type":"single","question":"Which keyword is used in Java to specify that a class is inheriting from another class?","choices":{"0":"`implements`","1":"`inherits`","2":"`extends`","3":"`super`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102001,"difficulty":"easy","type":"single","question":"What is the implicit statement that the Java compiler inserts as the first line of a constructor if no explicit `this()` or `super()` is present?","choices":{"0":"A call to `this()`.","1":"A call to `super()`.","2":"An allocation of memory for the object.","3":"Nothing is inserted implicitly."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102002,"difficulty":"easy","type":"single","question":"Given the following classes, what is the output?\n\\begin{verbatim}\nclass Animal {\n    public void makeSound() {\n        System.out.print(\"Generic Sound\");\n    }\n}\nclass Dog extends Animal {\n    @Override\n    public void makeSound() {\n        System.out.print(\"Woof\");\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n        Animal myAnimal = new Dog();\n        myAnimal.makeSound();\n    }\n}\n\\end{verbatim}","choices":{"0":"Generic Sound","1":"Woof","2":"Compilation fails.","3":"A runtime error occurs."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102003,"difficulty":"easy","type":"multiple","question":"Which of the following statements about inheritance in Java are true? (Choose all that apply)","choices":{"0":"A class can extend multiple other classes.","1":"The `extends` keyword is used to create a subclass.","2":"Private members of a superclass are inherited by the subclass.","3":"Constructors of the superclass are inherited by the subclass.","4":"If a class does not explicitly extend another class, it implicitly extends the `java.lang.Object` class."},"answers":["1","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102004,"difficulty":"easy","type":"single","question":"Which of the following prevents a method from being overridden in a subclass?","choices":{"0":"The `static` modifier.","1":"The `private` modifier.","2":"The `final` modifier.","3":"All of the above."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102005,"difficulty":"easy","type":"single","question":"What is the purpose of the `@Override` annotation?","choices":{"0":"It forces a method to be overridden in all subclasses.","1":"It allows the programmer to change the method signature during overriding.","2":"It instructs the compiler to verify that the annotated method is correctly overriding a superclass method.","3":"It is a runtime directive to the JVM to use the superclass method instead."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102006,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile the following code?\n\\begin{verbatim}\nclass Machine {\n    public Machine(String name) {\n        System.out.println(\"Machine created: \" + name);\n    }\n}\n\nclass Computer extends Machine {\n    public Computer() {\n        // Line X\n        System.out.println(\"Computer created\");\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation succeeds.","1":"Compilation fails because `Machine` does not have a no-argument constructor.","2":"Compilation fails because the `Computer` constructor must be `public`.","3":"Compilation succeeds, but a runtime error occurs if a `Computer` is instantiated."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102007,"difficulty":"medium","type":"single","question":"What is printed by the following code?\n\\begin{verbatim}\nclass Parent {\n    String name = \"Parent\";\n    String getName() { return this.name; }\n}\nclass Child extends Parent {\n    String name = \"Child\";\n    String getName() { return this.name; }\n}\npublic class TestFields {\n    public static void main(String[] args) {\n        Parent p = new Child();\n        System.out.print(p.name + \", \");\n        System.out.print(p.getName());\n    }\n}\n\\end{verbatim}","choices":{"0":"Parent, Parent","1":"Child, Child","2":"Parent, Child","3":"Child, Parent","4":"Compilation fails."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102008,"difficulty":"medium","type":"single","question":"Given the following classes, which statement is true?\n\\begin{verbatim}\nclass Building {\n    Object getInfo() { return new Object(); }\n}\n\nclass House extends Building {\n    // Method declaration here\n}\n\\end{verbatim}\nWhich of the following can be inserted as the method declaration in the `House` class?","choices":{"0":"`public String getInfo() { return \"House\"; }`","1":"`public Object getInfo() { return \"House\"; }`","2":"`String getInfo() { return \"House\"; }`","3":"All of the above are valid."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102009,"difficulty":"medium","type":"single","question":"What is the result of the following code?\n\\begin{verbatim}\nclass Figure {\n    public static void identify() {\n        System.out.print(\"Figure \");\n    }\n}\nclass Shape extends Figure {\n    public static void identify() {\n        System.out.print(\"Shape \");\n    }\n}\npublic class TestStatic {\n    public static void main(String[] args) {\n        Figure f = new Shape();\n        f.identify();\n        Shape.identify();\n    }\n}\n\\end{verbatim}","choices":{"0":"Shape Shape ","1":"Figure Shape ","2":"Figure Figure ","3":"Shape Figure ","4":"Compilation fails."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102010,"difficulty":"medium","type":"multiple","question":"Which rules must be followed when overriding a method? (Choose all that apply)","choices":{"0":"The argument list must be exactly the same.","1":"The return type must be the same or a subtype (covariant).","2":"The access level must be the same or more restrictive.","3":"The overriding method can throw any new `RuntimeException`.","4":"A `final` method in the superclass can be overridden if the subclass is also `final`."},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102011,"difficulty":"medium","type":"single","question":"What is the output of this program?\n\\begin{verbatim}\nclass A {\n    A() { System.out.print(\"A\"); }\n}\nclass B extends A {\n    B() {\n        this(5);\n        System.out.print(\"B\");\n    }\n    B(int x) {\n        System.out.print(\"B\" + x);\n    }\n}\npublic class TestConstructors {\n    public static void main(String[] args) {\n        new B();\n    }\n}\n\\end{verbatim}","choices":{"0":"AB5B","1":"AB5","2":"B5B","3":"AB5B","4":"Compilation fails."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102012,"difficulty":"medium","type":"single","question":"Examine the following code:\n\\begin{verbatim}\nclass Super {\n    public void calculate() throws java.io.IOException {}\n}\nclass Sub extends Super {\n    // Which overriding method is valid?\n}\n\\end{verbatim}","choices":{"0":"`public void calculate() throws Exception {}`","1":"`public void calculate() throws java.sql.SQLException {}`","2":"`public void calculate() throws java.io.FileNotFoundException {}`","3":"`public void calculate() throws java.text.ParseException {}`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102013,"difficulty":"medium","type":"multiple","question":"Given the class `Game`:\n\\begin{verbatim}\nclass Game {\n    public void play() throws Exception {}\n}\n\\end{verbatim}\nWhich of the following are valid overrides of the `play()` method in a subclass? (Choose all that apply)","choices":{"0":"`public void play() {}`","1":"`public void play() throws java.io.IOException {}`","2":"`public void play() throws RuntimeException {}`","3":"`void play() throws Exception {}`","4":"`public void play() throws Throwable {}`"},"answers":["0","1","2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102014,"difficulty":"medium","type":"single","question":"What is the result of compiling and running this code?\n\\begin{verbatim}\nclass Vehicle {\n    private void drive() {\n        System.out.println(\"Driving vehicle\");\n    }\n    public static void main(String[] args) {\n        Vehicle v = new Car();\n        v.drive();\n    }\n}\nclass Car extends Vehicle {\n    protected void drive() {\n        System.out.println(\"Driving car\");\n    }\n}\n\\end{verbatim}","choices":{"0":"Driving vehicle","1":"Driving car","2":"Compilation fails because the `drive` method in `Car` is not a valid override.","3":"Compilation fails because `v.drive()` cannot access the private method.","4":"A runtime error occurs."},"answers":["3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102015,"difficulty":"medium","type":"multiple","question":"Which lines of code, when used to replace `// INSERT CODE HERE`, will cause a compilation error? (Choose all that apply)\n\\begin{verbatim}\nclass A {\n    A() { this(1); }\n    A(int i) {}\n}\nclass B extends A {\n    // INSERT CODE HERE\n}\n\\end{verbatim}","choices":{"0":"(No code inserted)","1":"`B() {}`","2":"`B() { super(); }`","3":"`B(int i) { super(i); }`"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102016,"difficulty":"medium","type":"single","question":"What is the output?\n\\begin{verbatim}\nclass Alpha {\n    public String doStuff(String msg) { return msg; }\n}\nclass Beta extends Alpha {\n    public String doStuff(String msg) { return msg.replace('a', 'e'); }\n}\nclass Gamma extends Beta {\n    public String doStuff(String msg) { return msg.substring(2); }\n}\npublic class TestHierarchy {\n    public static void main(String[] args) {\n        Alpha a = new Gamma();\n        System.out.println(a.doStuff(\"java\"));\n    }\n}\n\\end{verbatim}","choices":{"0":"java","1":"jeve","2":"va","3":"ve","4":"Compilation fails."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102017,"difficulty":"medium","type":"multiple","question":"Which of the following are true about the `super` keyword? (Choose all that apply)","choices":{"0":"`super()` can appear anywhere in a constructor.","1":"`super.methodName()` can be used to call a hidden static method.","2":"`super()` and `this()` can be used in the same constructor.","3":"`super.fieldName` can be used to access a hidden instance variable from the superclass.","4":"`super.methodName()` can be used to call an overridden method from the superclass."},"answers":["3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102018,"difficulty":"medium","type":"single","question":"Which statement best describes the difference between method overriding and method hiding?","choices":{"0":"Overriding applies to instance methods, while hiding applies to static methods. Method resolution for overriding is at runtime; for hiding, it's at compile-time.","1":"Overriding applies to static methods, while hiding applies to instance methods. Method resolution for overriding is at compile-time; for hiding, it's at runtime.","2":"Overriding involves changing the method signature, while hiding keeps it the same.","3":"There is no difference; they are two terms for the same concept."},"answers":["0"],"attempts":1,"attempted":true,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102019,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nclass X {\n    void print() { System.out.print(\"X \"); }\n}\nclass Y extends X {\n    void print() { System.out.print(\"Y \"); }\n}\nclass Z extends Y {\n    void print() {\n        super.print();\n        System.out.print(\"Z \");\n    }\n    public static void main(String[] args) {\n        Z z = new Z();\n        z.print();\n    }\n}\n\\end{verbatim}","choices":{"0":"X Y Z ","1":"Y Z ","2":"X Z ","3":"Z ","4":"Compilation fails."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102020,"difficulty":"medium","type":"single","question":"An overriding method can have a different return type than the method it overrides if...","choices":{"0":"The new return type is a supertype of the original.","1":"The new return type is a subtype of the original (covariant).","2":"The original return type is a primitive.","3":"This is never allowed."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102021,"difficulty":"hard","type":"single","question":"What is the output of this code?\n\\begin{verbatim}\nclass Mammal {\n    public Mammal(int age) {\n        System.out.print(\"Mammal\");\n    }\n}\nclass Platypus extends Mammal {\n    public Platypus() {\n        super(5);\n        System.out.print(\"Platypus\");\n    }\n}\npublic class TestOrder extends Platypus {\n    public TestOrder() {\n        System.out.print(\"TestOrder\");\n    }\n    public static void main(String[] args) {\n        new TestOrder();\n    }\n}\n\\end{verbatim}","choices":{"0":"TestOrderPlatypusMammal","1":"MammalPlatypusTestOrder","2":"TestOrder","3":"Compilation fails because of constructor issues in `TestOrder`.","4":"Compilation fails because of constructor issues in `Platypus`."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102022,"difficulty":"hard","type":"single","question":"What is the result?\n\\begin{verbatim}\nclass SuperClass {\n    static String ID = \"Super\";\n    void printID() { System.out.println(ID); }\n}\n\nclass SubClass extends SuperClass {\n    static String ID = \"Sub\";\n    void printID() { System.out.println(ID); }\n}\n\npublic class TestHiding {\n    public static void main(String[] args) {\n        SuperClass sup = new SubClass();\n        System.out.println(sup.ID);\n        sup.printID();\n    }\n}\n\\end{verbatim}","choices":{"0":"Super\\nSub","1":"Sub\\nSub","2":"Super\\nSuper","3":"Sub\\nSuper","4":"Compilation fails."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102023,"difficulty":"hard","type":"multiple","question":"Which of these statements about method overriding are true? (Choose all that apply)","choices":{"0":"An overriding method can be `final`, even if the superclass method is not.","1":"An overriding method must not throw a checked exception that is a superclass of an exception thrown by the overridden method.","2":"If a superclass method is `static`, a subclass can declare a non-static method with the same signature without a compile error.","3":"The return type of an overriding method can be a covariant array type (e.g., `String[]` can override `Object[]`).","4":"A `private` method in a superclass can be validly 'overridden' by a `public` method in a subclass, but it is not true overriding."},"answers":["0","1","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102024,"difficulty":"hard","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nclass Base {\n    Base() { init(); }\n    void init() { System.out.print(\"B\"); }\n}\nclass Derived extends Base {\n    int i = 1;\n    Derived() { i = 2; }\n    void init() { System.out.print(\"D\" + i); }\n    public static void main(String[] args) {\n        new Derived();\n    }\n}\n\\end{verbatim}","choices":{"0":"BD2","1":"B D2","2":"D0","3":"D1","4":"Compilation fails."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102025,"difficulty":"hard","type":"single","question":"Which line causes a compilation error?\n\\begin{verbatim}\nclass T1 {\n    T1() { super(); }\n    T1(int i) { this(); }\n}\nclass T2 extends T1 {\n    T2() { super(5); }\n    T2(int i) { this(); }\n    T2(String s) {}\n}\n\\end{verbatim}","choices":{"0":"`T1() { super(); }`","1":"`T1(int i) { this(); }`","2":"`T2() { super(5); }`","3":"`T2(int i) { this(); }`","4":"`T2(String s) {}`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102026,"difficulty":"hard","type":"multiple","question":"You have a superclass method: `public Number process() throws java.io.IOException, java.sql.SQLException`. Which of the following are valid overriding methods in a subclass? (Choose all that apply)","choices":{"0":"`public Integer process() throws java.io.FileNotFoundException;`","1":"`protected Number process() throws java.io.IOException;`","2":"`public Number process() throws Exception;`","3":"`public Double process();`","4":"`public Number process() throws java.io.IOException, java.sql.SQLException, InterruptedException;`"},"answers":["0","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102027,"difficulty":"hard","type":"single","question":"What is the result of the following code?\n\\begin{verbatim}\nclass Writer {\n    public static void write() { System.out.print(\"W\"); }\n}\nclass Author extends Writer {\n    public static void write() { System.out.print(\"A\"); }\n}\npublic class Poet extends Author {\n    public static void write() { System.out.print(\"P\"); }\n    public static void main(String[] args) {\n        Writer w = new Poet();\n        w.write();\n        Author a = (Author)w;\n        a.write();\n        Poet p = (Poet)a;\n        p.write();\n    }\n}\n\\end{verbatim}","choices":{"0":"PPP","1":"WAP","2":"PAP","3":"WWW","4":"Compilation fails."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102028,"difficulty":"hard","type":"single","question":"Given:\n\\begin{verbatim}\ninterface I {\n    int VAL = 1; // public static final\n    void m1(); // public abstract\n}\nclass C1 implements I {\n    public void m1() { System.out.print(VAL); }\n}\nclass C2 extends C1 {\n    int VAL = 2;\n    public void m1() { System.out.print(VAL); }\n}\n\\end{verbatim}\nWhat is the output when `new C2().m1()` is executed?","choices":{"0":"1","1":"2","2":"Compilation fails because `VAL` cannot be changed.","3":"Compilation fails because `C2` cannot override `m1` from `C1`.","4":"Compilation fails because `VAL` in `C2` hides the interface field."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102029,"difficulty":"hard","type":"single","question":"What is the result?\n\\begin{verbatim}\nclass Top {\n    public Top(String s) { System.out.print(\"T\"); }\n}\npublic class Bottom extends Top {\n    public Bottom(String s) { System.out.print(\"B\"); }\n    public static void main(String[] args) {\n        new Bottom(\"C\");\n        System.out.println(\"D\");\n    }\n}\n\\end{verbatim}","choices":{"0":"BD","1":"TBD","2":"TD","3":"Compilation fails.","4":"A runtime exception is thrown."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102100,"difficulty":"easy","type":"single","question":"What is the output of the following code snippet?\\n\\begin{verbatim}\nclass Animal {\n    public void makeSound() {\n        System.out.println(\"Generic Animal Sound\");\n    }\n}\n\nclass Dog extends Animal {\n    @Override\n    public void makeSound() {\n        System.out.println(\"Woof\");\n    }\n}\n\npublic class Test {\n    public static void main(String[] args) {\n        Animal myAnimal = new Dog();\n        myAnimal.makeSound();\n    }\n}\n\\end{verbatim}","choices":{"0":"Generic Animal Sound","1":"Woof","2":"The code will not compile.","3":"A runtime exception is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102101,"difficulty":"easy","type":"single","question":"Which method is invoked by the call `p.print(10.5);`?\\n\\begin{verbatim}\nclass Printer {\n    public void print(String s) {\n        System.out.println(\"String\");\n    }\n    public void print(double d) {\n        System.out.println(\"Double\");\n    }\n    public void print(int i) {\n        System.out.println(\"Integer\");\n    }\n}\n\npublic class Test {\n    public static void main(String[] args) {\n        Printer p = new Printer();\n        p.print(10.5);\n    }\n}\n\\end{verbatim}","choices":{"0":"The method `print(String s)`","1":"The method `print(double d)`","2":"The method `print(int i)`","3":"The code results in a compile-time error due to ambiguity."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102102,"difficulty":"easy","type":"single","question":"What is the result of executing the following code?\\n\\begin{verbatim}\nclass Vehicle {}\nclass Car extends Vehicle {\n    public void drive() {\n        System.out.println(\"Car is driving\");\n    }\n}\n\npublic class Test {\n    public static void main(String[] args) {\n        Vehicle v = new Car();\n        Car c = (Car) v;\n        c.drive();\n    }\n}\n\\end{verbatim}","choices":{"0":"A compile-time error occurs.","1":"A `ClassCastException` is thrown at runtime.","2":"The code compiles and prints \"Car is driving\".","3":"The code compiles but does not print anything."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102103,"difficulty":"easy","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\nclass Animal {}\nclass Reptile extends Animal {}\nclass Mammal extends Animal {}\nclass Cat extends Mammal {}\n\npublic class Test {\n    public static void main(String[] args) {\n        Animal myAnimal = new Cat();\n        System.out.println(myAnimal instanceof Mammal);\n    }\n}\n\\end{verbatim}","choices":{"0":"true","1":"false","2":"A compile-time error occurs.","3":"A runtime exception is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102104,"difficulty":"easy","type":"single","question":"Which of the four pillars of Object-Oriented Programming is best described as the ability of an object to take on many forms, primarily achieved through inheritance and method overriding?","choices":{"0":"Encapsulation","1":"Abstraction","2":"Inheritance","3":"Polymorphism"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102105,"difficulty":"easy","type":"multiple","question":"Which of the following are valid rules for method overriding in Java? (Choose all that apply)","choices":{"0":"The method in the subclass must have the same name as the method in the superclass.","1":"The method in the subclass must have the exact same parameter list as the method in the superclass.","2":"The access level of the overriding method in the subclass can be more restrictive than the overridden method in the superclass (e.g., `public` in superclass to `protected` in subclass).","3":"The return type of the overriding method can be a subtype of the return type of the overridden method (covariant return type).","4":"A `final` method in the superclass can be overridden."},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102106,"difficulty":"medium","type":"single","question":"What is the result of compiling and running the following code?\\n\\begin{verbatim}\nclass Shape {\n    public Object getArea() {\n        return new Object();\n    }\n}\n\nclass Circle extends Shape {\n    @Override\n    public String getArea() {\n        return \"Circle Area\";\n    }\n}\n\npublic class Test {\n    public static void main(String[] args) {\n        Shape s = new Circle();\n        System.out.println(s.getArea());\n    }\n}\n\\end{verbatim}","choices":{"0":"The code will not compile because the return types are different.","1":"The code compiles and prints \"Circle Area\".","2":"The code compiles, but throws a `ClassCastException` at runtime.","3":"The code compiles and prints the hash code of a new Object."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102107,"difficulty":"medium","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\nclass Parent {\n    static void whoAmI() {\n        System.out.println(\"I am Parent\");\n    }\n}\n\nclass Child extends Parent {\n    static void whoAmI() {\n        System.out.println(\"I am Child\");\n    }\n}\n\npublic class Test {\n    public static void main(String[] args) {\n        Parent p = new Child();\n        p.whoAmI();\n    }\n}\n\\end{verbatim}","choices":{"0":"I am Parent","1":"I am Child","2":"The code will not compile.","3":"A runtime exception is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102108,"difficulty":"medium","type":"single","question":"What is the result of executing the following code snippet?\\n\\begin{verbatim}\nclass Animal {}\nclass Dog extends Animal {}\nclass Cat extends Animal {}\n\npublic class Test {\n    public static void main(String[] args) {\n        Animal animal = new Dog();\n        if (animal instanceof Cat) {\n            Cat cat = (Cat) animal;\n            System.out.println(\"It's a cat!\");\n        } else {\n             System.out.println(\"Not a cat.\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"It's a cat!","1":"Not a cat.","2":"The code fails to compile.","3":"A `ClassCastException` is thrown at runtime."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102109,"difficulty":"medium","type":"single","question":"Given the following overloaded methods, which one will be called by `test.method(10);`?\\n\\begin{verbatim}\npublic class OverloadTest {\n    public void method(long l) {\n        System.out.println(\"long\");\n    }\n    public void method(Integer i) {\n        System.out.println(\"Integer\");\n    }\n    \n    public static void main(String[] args) {\n        OverloadTest test = new OverloadTest();\n        test.method(10);\n    }\n}\n\\end{verbatim}","choices":{"0":"The method with the `long` parameter.","1":"The method with the `Integer` parameter.","2":"The code fails to compile due to ambiguity.","3":"Neither method is called; a runtime error occurs."},"answers":["0"],"attempts":1,"attempted":true,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102110,"difficulty":"medium","type":"single","question":"What is the output of the following program?\\n\\begin{verbatim}\nclass SuperType {\n    String name = \"Super\";\n}\n\nclass SubType extends SuperType {\n    String name = \"Sub\";\n}\n\npublic class Test {\n    public static void main(String[] args) {\n        SuperType st = new SubType();\n        System.out.println(st.name);\n    }\n}\n\\end{verbatim}","choices":{"0":"Super","1":"Sub","2":"The code does not compile.","3":"null"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102111,"difficulty":"medium","type":"single","question":"What is printed by the following code?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        String text = null;\n        if (text instanceof String) {\n            System.out.println(\"Is a String\");\n        } else {\n            System.out.println(\"Is not a String\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"Is a String","1":"Is not a String","2":"A compile-time error occurs.","3":"A `NullPointerException` is thrown at runtime."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102112,"difficulty":"medium","type":"single","question":"What is the outcome of compiling and running this code?\\n\\begin{verbatim}\ninterface Flyable {\n    void fly();\n}\nclass Bird implements Flyable {\n    public void fly() { System.out.println(\"Bird flying\"); }\n}\nclass Plane implements Flyable {\n    public void fly() { System.out.println(\"Plane flying\"); }\n}\npublic class Test {\n    public static void main(String[] args) {\n        Flyable flyer = new Plane();\n        flyer.fly();\n    }\n}\n\\end{verbatim}","choices":{"0":"Bird flying","1":"Plane flying","2":"A compile-time error occurs.","3":"A `ClassCastException` is thrown."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102113,"difficulty":"medium","type":"single","question":"Given the following class, which method is invoked by the call `m.calculate(5);`?\\n\\begin{verbatim}\nclass MathUtil {\n    public void calculate(int x) {\n        System.out.println(\"int\");\n    }\n    public void calculate(int... x) {\n        System.out.println(\"varargs\");\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n        MathUtil m = new MathUtil();\n        m.calculate(5);\n    }\n}\n\\end{verbatim}","choices":{"0":"The `calculate(int x)` method.","1":"The `calculate(int... x)` method.","2":"The code fails to compile due to ambiguity.","3":"A runtime exception is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102114,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile the following code?\\n\\begin{verbatim}\nclass A {\n    protected void process() {}\n}\nclass B extends A {\n    void process() {} // default access\n}\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"A compile-time error occurs because the overriding method has a more restrictive access modifier.","2":"A compile-time error occurs because the method is not marked with `@Override`.","3":"The code compiles but will throw an `IllegalAccessError` at runtime."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102115,"difficulty":"medium","type":"single","question":"What is the result of executing the following code?\\n\\begin{verbatim}\ninterface Readable {}\nclass Book implements Readable {}\nclass EBook extends Book {\n    public void read() { System.out.println(\"Reading EBook\"); }\n}\npublic class Test {\n    public static void main(String[] args) {\n        Readable r = new EBook();\n        if (r instanceof EBook) {\n            ((EBook) r).read();\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"Reading EBook","1":"The code fails to compile because `r` does not have a `read()` method.","2":"The code fails to compile because an interface reference cannot be cast to a class.","3":"A `ClassCastException` is thrown at runtime."},"answers":["0"],"attempts":1,"attempted":true,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102116,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile this code?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        String s = \"hello\";\n        if (s instanceof Integer) {\n            // some code\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles and runs without issue.","1":"The code compiles, but the `if` block is never entered.","2":"A compile-time error occurs because `String` and `Integer` are unrelated final classes.","3":"A `ClassCastException` is thrown at runtime."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102117,"difficulty":"medium","type":"multiple","question":"Which of the following statements about object type casting in Java are true? (Choose all that apply)","choices":{"0":"Upcasting (from a subclass to a superclass) is implicit and always safe at runtime.","1":"Downcasting (from a superclass to a subclass) requires an explicit cast operator `()`.","2":"Attempting to downcast an object to a type it is not an instance of results in a compile-time error.","3":"The `instanceof` operator can be used to prevent a `ClassCastException` during downcasting.","4":"A `ClassCastException` is a checked exception and must be handled with a `try-catch` block."},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102118,"difficulty":"medium","type":"multiple","question":"Given the following class, which of the method calls in the `main` method will compile successfully? (Choose all that apply)\\n\\begin{verbatim}\nclass Calculator {\n    void add(int a, long b) { System.out.println(\"int, long\"); }\n    void add(long a, int b) { System.out.println(\"long, int\"); }\n}\npublic class Test {\n    public static void main(String[] args) {\n        Calculator c = new Calculator();\n        // Line 1\n        c.add(10, 20L);\n        // Line 2\n        c.add(10L, 20);\n        // Line 3\n        c.add(10, 20);\n        // Line 4\n        c.add(10L, 20L);\n    }\n}\n\\end{verbatim}","choices":{"0":"Line 1","1":"Line 2","2":"Line 3","3":"Line 4"},"answers":["0","1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102119,"difficulty":"medium","type":"single","question":"Consider the following overloaded methods. What is the output when `test.process(10);` is executed?\\n\\begin{verbatim}\nclass Processor {\n    void process(long val) { System.out.println(\"long\"); }\n    void process(Integer val) { System.out.println(\"Integer\"); }\n    void process(int... val) { System.out.println(\"varargs\"); }\n}\npublic class Test {\n    public static void main(String[] args) {\n        Processor test = new Processor();\n        test.process(10);\n    }\n}\n\\end{verbatim}","choices":{"0":"long","1":"Integer","2":"varargs","3":"The code will not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102120,"difficulty":"medium","type":"multiple","question":"Given the following class hierarchy and a variable `Animal a = new Lion();`, which of the following lines of code will compile without error? (Choose all that apply)\\n\\begin{verbatim}\ninterface Hunter {}\nclass Animal {}\nclass Feline extends Animal {}\nclass Lion extends Feline implements Hunter {\n    public void roar() {}\n}\n\\end{verbatim}","choices":{"0":"Feline f = (Feline) a;","1":"a.roar();","2":"Hunter h = (Hunter) a;","3":"((Lion)a).roar();"},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102121,"difficulty":"hard","type":"single","question":"Which overloaded method is invoked by the call `test.execute(10, 20);`?\\n\\begin{verbatim}\npublic class OverloadChallenge {\n    void execute(Integer i) {\n        System.out.println(\"Integer\");\n    }\n    void execute(long... l) {\n        System.out.println(\"long varargs\");\n    }\n    public static void main(String[] args) {\n        OverloadChallenge test = new OverloadChallenge();\n        test.execute(10, 20);\n    }\n}\n\\end{verbatim}","choices":{"0":"The `execute(Integer i)` method.","1":"The `execute(long... l)` method.","2":"The code does not compile because of an ambiguous call.","3":"The code does not compile for a different reason."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102122,"difficulty":"hard","type":"single","question":"What is the result of executing the following code?\\n\\begin{verbatim}\ninterface CanSwim {}\ninterface CanFly {}\nclass Bird implements CanFly {}\nclass Fish extends Bird implements CanSwim {}\npublic class Test {\n    public static void main(String[] args) {\n        CanFly flyer = new Fish();\n        CanSwim swimmer = (CanSwim) flyer;\n        System.out.println(\"Cast successful\");\n    }\n}\n\\end{verbatim}","choices":{"0":"A compile-time error occurs because `Fish` cannot extend `Bird`.","1":"A compile-time error occurs because of an illegal cast.","2":"A `ClassCastException` is thrown at runtime.","3":"The code compiles and prints \"Cast successful\"."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102123,"difficulty":"hard","type":"single","question":"What is the result of executing the following code?\\n\\begin{verbatim}\nclass Fruit {}\nclass Apple extends Fruit {}\nclass Orange extends Fruit {}\npublic class Test {\n    public static void main(String[] args) {\n        Fruit[] fruits = new Apple[2];\n        try {\n            fruits[0] = new Apple();\n            fruits[1] = new Orange(); \n            System.out.println(\"Success\");\n        } catch (Exception e) {\n            System.out.println(e.getClass().getSimpleName());\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"Success","1":"ClassCastException","2":"ArrayStoreException","3":"ArrayIndexOutOfBoundsException"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102124,"difficulty":"hard","type":"single","question":"What is the result of compiling this code?\\n\\begin{verbatim}\nclass Machine {\n    public final void start() {\n        System.out.println(\"Machine starting\");\n    }\n}\nclass Computer extends Machine {\n    public void start() {\n        System.out.println(\"Computer starting\");\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"A compile-time error occurs because a `final` method cannot be overridden.","2":"The code compiles, but `Computer`'s `start()` method is considered an overload, not an override.","3":"The code compiles but will throw a runtime exception if `Computer.start()` is called."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102125,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\nclass Parent {\n    void process(Object o) {\n        System.out.println(\"Parent-Object\");\n    }\n}\nclass Child extends Parent {\n    @Override\n    void process(Object o) {\n        System.out.println(\"Child-Object\");\n    }\n    void process(String s) {\n        System.out.println(\"Child-String\");\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n        Parent p = new Child();\n        p.process(\"test\");\n    }\n}\n\\end{verbatim}","choices":{"0":"Parent-Object","1":"Child-Object","2":"Child-String","3":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102126,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile this code snippet?\\n\\begin{verbatim}\nimport java.util.*;\n\npublic class GenericsTest {\n    public static void main(String[] args) {\n        List<String> stringList = new ArrayList<>();\n        if (stringList instanceof List<Integer>) {\n            System.out.println(\"It's a list of Integers\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles and runs, but the `if` block is never executed.","1":"The code compiles and throws a `ClassCastException` at runtime.","2":"A compile-time error occurs.","3":"The code compiles and runs, and the `if` block is executed due to type erasure."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102127,"difficulty":"hard","type":"multiple","question":"Which of the following statements about polymorphism and casting in Java are true? (Choose all that apply)","choices":{"0":"A compile-time error will occur if an `instanceof` check is performed on an object against a final class that is not in its direct inheritance hierarchy (e.g. `\"hello\" instanceof Integer`).","1":"Casting a `null` reference to any object type will result in a `NullPointerException`.","2":"When accessing instance variables, the reference type at compile-time determines which variable is used, regardless of the actual object type at runtime.","3":"Static methods cannot be overridden, but they can be hidden. The version that gets called is determined by the object's type at runtime."},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102128,"difficulty":"hard","type":"multiple","question":"What is the result of compiling and running the following code? (Choose all that apply)\\n\\begin{verbatim}\nclass Super {\n    static String ID = \"SuperID\";\n    static void print() {\n        System.out.print(\"SuperPrint \");\n    }\n}\nclass Sub extends Super {\n    static String ID = \"SubID\";\n    static void print() {\n        System.out.print(\"SubPrint \");\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n        Super s = new Sub();\n        System.out.print(s.ID + \" \");\n        s.print();\n        ((Sub)s).print();\n    }\n}\n\\end{verbatim}","choices":{"0":"The code produces the output: `SuperID SuperPrint SubPrint `","1":"The code produces the output: `SubID SubPrint SubPrint `","2":"The code fails to compile because static members cannot be accessed via an instance reference.","3":"The code produces a compiler warning but compiles successfully.","4":"The code throws a `ClassCastException`."},"answers":["0","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102129,"difficulty":"hard","type":"single","question":"What is the result of compiling and running the following code?\\n\\begin{verbatim}\npublic class AmbiguousCall {\n    static void probe(Object x) { System.out.println(\"In Object\"); }\n    static void probe(Integer x) { System.out.println(\"In Integer\"); }\n    static void probe(Long x) { System.out.println(\"In Long\"); }\n\n    public static void main(String[] args) {\n        probe(null);\n    }\n}\n\\end{verbatim}","choices":{"0":"In Object","1":"In Integer","2":"In Long","3":"The code fails to compile due to an ambiguous method call."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102200,"difficulty":"easy","type":"single","question":"Which statement is true about abstract classes?","choices":{"0":"An abstract class can be instantiated using the `new` keyword.","1":"An abstract class cannot have a constructor.","2":"An abstract class can have both abstract and non-abstract (concrete) methods.","3":"A class that contains any non-abstract methods must be declared abstract."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102201,"difficulty":"easy","type":"single","question":"What is the result of attempting to compile the following code?\\n\\begin{verbatim}\ninterface Movable {\n    void move();\n}\npublic class Car implements Movable {\n    // No implementation of move()\n    public void startEngine() {\n        System.out.println(\"Engine started.\");\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"A compile-time error occurs because `Car` is not declared abstract and does not implement `move()`.","2":"A runtime error occurs when an instance of `Car` is created.","3":"A compile-time error occurs because interfaces cannot be implemented."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102202,"difficulty":"easy","type":"single","question":"In Java 8, how is a `default` method in an interface correctly invoked?","choices":{"0":"By calling it on the interface name, like `MyInterface.defaultMethod()`.","1":"By calling it on an instance of a class that implements the interface.","2":"`default` methods cannot be invoked directly.","3":"Only from within another `default` method in the same interface."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102203,"difficulty":"easy","type":"single","question":"What is the result of the following code?\\n\\begin{verbatim}\nabstract class Vehicle {\n    public Vehicle() {\n        System.out.print(\"Vehicle \");\n    }\n    abstract void drive();\n}\nclass Bus extends Vehicle {\n    public Bus() {\n        System.out.print(\"Bus \");\n    }\n    void drive() {\n        System.out.print(\"Driving\");\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n        new Bus();\n    }\n}\n\\end{verbatim}","choices":{"0":"Bus Driving","1":"Vehicle Bus ","2":"Vehicle Bus Driving","3":"A compile-time error."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102204,"difficulty":"easy","type":"single","question":"Any variable declared inside an interface is implicitly...","choices":{"0":"`private`, `static`, `final`","1":"`public`, `final`","2":"`public`, `static`, `final`","3":"`protected`, `static`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102205,"difficulty":"easy","type":"multiple","question":"Which of the following keywords are implicitly applied to a non-`default`, non-`static` method declaration within an interface? (Choose all that apply)","choices":{"0":"`public`","1":"`static`","2":"`final`","3":"`abstract`"},"answers":["0","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102206,"difficulty":"medium","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\ninterface Logger {\n    static void log(String message) {\n        System.out.println(\"LOG: \" + message);\n    }\n}\npublic class MyService implements Logger {\n    public void doWork() {\n        // Line 1\n    }\n    public static void main(String[] args) {\n        // Line 2\n    }\n}\n\\end{verbatim}\nWhich line of code, when inserted at Line 2, will correctly call the `log` method?","choices":{"0":"`MyService.log(\"Done\");`","1":"`new MyService().log(\"Done\");`","2":"`Logger.log(\"Done\");`","3":"`super.log(\"Done\");`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102207,"difficulty":"medium","type":"single","question":"What is the result of the following code?\\n\\begin{verbatim}\ninterface Speaker {\n    default void sayHello() {\n        System.out.print(\"Hello Interface \");\n    }\n}\nclass Person implements Speaker {\n    public void sayHello() {\n        System.out.print(\"Hello Person \");\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n        Speaker s = new Person();\n        s.sayHello();\n    }\n}\n\\end{verbatim}","choices":{"0":"Hello Interface","1":"Hello Person","2":"The code fails to compile because a class cannot override a default method.","3":"The code fails to compile due to ambiguity."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102208,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile this code?\\n\\begin{verbatim}\npublic abstract class Shape {\n    private abstract void draw();\n}\n\\end{verbatim}","choices":{"0":"It compiles successfully.","1":"It fails to compile because an abstract method cannot be `private`.","2":"It fails to compile because the class is abstract but has no concrete methods.","3":"It fails to compile because `draw()` has no method body."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102209,"difficulty":"medium","type":"single","question":"Consider the following code. What is the result?\\n\\begin{verbatim}\ninterface Flyable { void fly(); }\nabstract class Bird implements Flyable {}\nclass Sparrow extends Bird {\n    public void fly() {\n        System.out.println(\"Sparrow flying\");\n    }\n}\n\\end{verbatim}","choices":{"0":"A compile-time error occurs at `abstract class Bird` because it doesn't implement `fly()`.","1":"A compile-time error occurs at `class Sparrow` for some reason.","2":"The code compiles successfully.","3":"A compile-time error occurs at `interface Flyable`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102210,"difficulty":"medium","type":"single","question":"What is the result of compiling and running the following code?\\n\\begin{verbatim}\ninterface Schedulable {\n    String C_NAME = \"Scheduler\";\n    static void checkStatus() {\n        System.out.println(\"OK\");\n    }\n}\nclass Task implements Schedulable {\n    void execute() {\n        checkStatus();\n    }\n    public static void main(String[] args) {\n        Task t = new Task();\n        t.execute();\n    }\n}\n\\end{verbatim}","choices":{"0":"The code prints \"OK\".","1":"The code fails to compile because `checkStatus()` cannot be called from `execute()`.","2":"The code compiles but throws a runtime exception.","3":"The code prints `null`."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102211,"difficulty":"medium","type":"single","question":"What is the result of the following code snippet?\\n\\begin{verbatim}\ninterface CanRun {\n    int MAX_SPEED = 100;\n}\nclass Athlete implements CanRun {\n    void test() {\n        MAX_SPEED = 120; // attempting to change\n    }\n}\n\\end{verbatim}","choices":{"0":"A compile-time error occurs because `MAX_SPEED` is final.","1":"The code compiles, but `MAX_SPEED` remains 100.","2":"A runtime error occurs.","3":"The code compiles, and a new instance variable `MAX_SPEED` is created in `Athlete`."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102212,"difficulty":"medium","type":"single","question":"What is the outcome of compiling and running this program?\\n\\begin{verbatim}\ninterface App {\n    public static void main(String[] args) {\n        System.out.println(\"Running App\");\n    }\n}\n\\end{verbatim}\n(Assuming you run it as `java App`)","choices":{"0":"A compile-time error occurs because interfaces cannot have a `main` method.","1":"A runtime error occurs, as interfaces cannot be executed.","2":"The code compiles and runs, printing \"Running App\".","3":"The code compiles, but nothing is printed."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102213,"difficulty":"medium","type":"single","question":"What is the result of the following code?\\n\\begin{verbatim}\nabstract class Writer {\n    public static void write() {\n        System.out.println(\"Writing...\");\n    }\n}\nclass Author extends Writer {\n    public static void write() {\n        System.out.println(\"Writing book\");\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n        Writer w = new Author();\n        w.write();\n    }\n}\n\\end{verbatim}","choices":{"0":"Writing...","1":"Writing book","2":"A compile-time error.","3":"A runtime exception."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102214,"difficulty":"medium","type":"single","question":"Given the following definitions, what is the result of compiling the `Test` class?\\n\\begin{verbatim}\nabstract class Employee {\n    abstract void calculatePay();\n}\ninterface Interviewer {\n    void conductInterview();\n}\nclass Manager extends Employee implements Interviewer {\n    // Missing implementation for calculatePay()\n    public void conductInterview() {\n        System.out.println(\"Interview\");\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n        Manager m = new Manager();\n    }\n}\n\\end{verbatim}","choices":{"0":"A compile-time error because `Manager` must be declared abstract.","1":"A compile-time error because a class cannot both extend a class and implement an interface.","2":"The code compiles successfully.","3":"A compile-time error because the constructor of `Manager` is not defined."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102215,"difficulty":"medium","type":"single","question":"What is the result of this code?\\n\\begin{verbatim}\nclass SuperCalculator {\n    public void calculate() {\n        System.out.println(\"Super\");\n    }\n}\ninterface Calculable {\n    void calculate();\n}\nclass PowerCalculator extends SuperCalculator implements Calculable {\n}\npublic class Test {\n    public static void main(String[] args) {\n        new PowerCalculator().calculate();\n    }\n}\n\\end{verbatim}","choices":{"0":"The code fails to compile because `PowerCalculator` doesn't explicitly implement `calculate`.","1":"The code compiles and prints \"Super\".","2":"The code fails to compile because of a conflict between the superclass and interface method.","3":"The code compiles but results in a runtime error."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102216,"difficulty":"medium","type":"multiple","question":"Which of the following are valid declarations inside an abstract class `MyAbstract`? (Choose all that apply)","choices":{"0":"`public abstract void methodA();`","1":"`public int x = 5;`","2":"`public MyAbstract() {}`","3":"`private static final void methodB() {}`"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102217,"difficulty":"medium","type":"multiple","question":"Which statements are true about `default` methods in Java 8 interfaces? (Choose all that apply)","choices":{"0":"They must be marked with the `default` keyword.","1":"They are implicitly `public`.","2":"A class can implement two interfaces with the same default method signature without providing its own implementation.","3":"They cannot be `static` or `final`."},"answers":["0","1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102218,"difficulty":"medium","type":"multiple","question":"Which of the following code snippets will cause a compilation error? (Choose all that apply)","choices":{"0":"\\begin{verbatim}\ninterface I { final void m(); }\n\\end{verbatim}","1":"\\begin{verbatim}\nabstract class A { abstract static void m(); }\n\\end{verbatim}","2":"\\begin{verbatim}\ninterface J { private void m(); }\n\\end{verbatim}","3":"\\begin{verbatim}\nfinal abstract class B {}\n\\end{verbatim}"},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102219,"difficulty":"medium","type":"single","question":"What is the outcome?\\n\\begin{verbatim}\ninterface I1 {\n    void m1();\n}\ninterface I2 extends I1 {\n    void m2();\n}\nclass C1 implements I2 {\n    public void m1() { System.out.println(\"m1\"); }\n    public void m2() { System.out.println(\"m2\"); }\n}\npublic class Test {\n    public static void main(String[] args) {\n        I1 i = new C1();\n        i.m1();\n    }\n}\n\\end{verbatim}","choices":{"0":"A compile-time error because `I1` does not have an `m2` method.","1":"The code compiles and prints \"m1\".","2":"A compile-time error because `C1` must implement methods from `I1` and `I2` separately.","3":"The code compiles and prints \"m2\"."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102220,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile the `MultiWriter` class?\\n\\begin{verbatim}\ninterface Writer {\n    default void write() {\n        System.out.println(\"Writing to file.\");\n    }\n}\ninterface Blogger {\n    default void write() {\n        System.out.println(\"Writing to blog.\");\n    }\n}\nclass MultiWriter implements Writer, Blogger {\n    // No methods implemented\n}\n\\end{verbatim}","choices":{"0":"It compiles successfully. An instance would call `Writer.super.write()` by default.","1":"It fails to compile because of a conflict between the two `write()` default methods.","2":"It compiles successfully. An instance would call `Blogger.super.write()` by default.","3":"It fails to compile because a class cannot implement two interfaces."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102221,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\nclass Walkable {\n    public void move() { System.out.println(\"Walking\"); }\n}\ninterface Flyable {\n    default void move() { System.out.println(\"Flying\"); }\n}\nclass Bird extends Walkable implements Flyable {\n}\npublic class Test {\n    public static void main(String[] args) {\n        new Bird().move();\n    }\n}\n\\end{verbatim}","choices":{"0":"Flying","1":"Walking","2":"A compile-time error occurs due to the conflict.","3":"A runtime exception is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102222,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile class `C`?\\n\\begin{verbatim}\ninterface I1 {\n    void m();\n}\ninterface I2 {\n    default void m() {\n        System.out.println(\"I2 default\");\n    }\n}\nclass C implements I1, I2 {\n    // No implementation of m()\n}\n\\end{verbatim}","choices":{"0":"It compiles. An instance of `C` will use the default method from `I2`.","1":"It fails to compile. `C` must provide an implementation for `m()` because `I1` declares it as abstract.","2":"It fails to compile for a different reason related to ambiguity.","3":"It compiles, but `m()` cannot be called on an instance of `C`."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102223,"difficulty":"hard","type":"single","question":"What is the result of attempting to access `MyDevice.NAME` in another class?\\n\\begin{verbatim}\ninterface Device {\n    String NAME = \"Device\";\n}\ninterface Gadget {\n    String NAME = \"Gadget\";\n}\nclass MyDevice implements Device, Gadget {\n    // Some code\n}\n// In another class:\n// System.out.println(MyDevice.NAME);\n\\end{verbatim}","choices":{"0":"It prints \"Device\".","1":"It prints \"Gadget\".","2":"It results in a compile-time error due to an ambiguous field.","3":"It prints `null`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102224,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile the `CustomSet` interface?\\n\\begin{verbatim}\nimport java.util.Collection;\n\npublic interface CustomSet extends Collection {\n    @Override\n    default boolean equals(Object o) { // line 1\n        return true;\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation is successful.","1":"A compile-time error occurs because a default method cannot be added to a standard library interface.","2":"A compile-time error occurs because a default method is not allowed to override a method from `java.lang.Object`.","3":"A compile-time error occurs because the return type is not compatible with `Collection.equals()`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102225,"difficulty":"hard","type":"single","question":"What is the result of compiling this code?\\n\\begin{verbatim}\nabstract class AbstractLogger {\n    abstract void log(String msg);\n}\ninterface RemoteLogger {\n    default void log(String msg) {\n        // sends log to remote server\n    }\n}\nabstract class HybridLogger extends AbstractLogger implements RemoteLogger {\n    @Override\n    public abstract void log(String msg);\n}\n\\end{verbatim}","choices":{"0":"A compile-time error because `HybridLogger` tries to make a default method abstract.","1":"A compile-time error because an abstract class cannot implement an interface.","2":"The code compiles successfully.","3":"A compile-time error because of a method conflict between `AbstractLogger` and `RemoteLogger`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102226,"difficulty":"hard","type":"multiple","question":"Which statements are correct regarding interfaces in Java SE 8? (Choose all that apply)","choices":{"0":"An interface can extend a class.","1":"An interface can contain `protected` static methods.","2":"If a class inherits a method from a superclass and also inherits a default method with the same signature from an interface, the superclass's method takes precedence.","3":"An interface cannot be declared `final`."},"answers":["2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102227,"difficulty":"hard","type":"multiple","question":"Given the following code, which statements are true? (Choose all that apply)\\n\\begin{verbatim}\ninterface I {\n    static void m1() { System.out.println(\"I.m1\"); }\n    default void m2() { System.out.println(\"I.m2\"); }\n}\nabstract class A implements I {\n    public static void m1() { System.out.println(\"A.m1\"); }\n}\nclass B extends A {\n    public void m2() { System.out.println(\"B.m2\"); }\n}\n\\end{verbatim}","choices":{"0":"The declaration of `m1()` in class `A` hides the `m1()` method from interface `I`.","1":"The call `new B().m1()` will fail to compile.","2":"The call `new B().m2()` will print \"B.m2\".","3":"The call `I.m1()` will print \"A.m1\" due to inheritance."},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102228,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run the Test class?\\n\\begin{verbatim}\ninterface I1 {\n    default void go() { System.out.println(\"I1\"); }\n}\ninterface I2 {\n    default void go() { System.out.println(\"I2\"); }\n}\nclass C1 implements I1, I2 {\n    public void go() {\n        I1.super.go();\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n        new C1().go();\n    }\n}\n\\end{verbatim}","choices":{"0":"A compile-time error at `class C1`.","1":"The code compiles and prints \"I1\".","2":"The code compiles and prints \"I2\".","3":"A compile-time error at `I1.super.go();` because `super` can only be used with classes."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102300,"difficulty":"easy","type":"single","question":"What is the primary consequence of declaring a Java class with the `final` keyword?","choices":{"0":"All methods in the class are implicitly `private`.","1":"The class cannot be instantiated.","2":"The class cannot be extended (subclassed).","3":"The class cannot have any `static` members."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102301,"difficulty":"easy","type":"single","question":"What is the result of attempting to compile the following code?\\n\\begin{verbatim}\nclass Parent {\n    public final void show() {\n        System.out.println(\"Parent show\");\n    }\n}\nclass Child extends Parent {\n    public void show() { // Attempting to override\n        System.out.println(\"Child show\");\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"A runtime exception is thrown.","2":"A compile-time error occurs because a final method cannot be overridden.","3":"The `show()` method in `Child` overloads the one in `Parent`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102302,"difficulty":"easy","type":"single","question":"Which of the following lines of code will cause a compilation error?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        final int x = 10;\n        x = 20; // Line 1\n\n        final StringBuilder sb = new StringBuilder(\"Java\");\n        sb.append(\" 8\"); // Line 2\n    }\n}\n\\end{verbatim}","choices":{"0":"Line 1","1":"Line 2","2":"Both Line 1 and Line 2","3":"Neither line causes an error."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102303,"difficulty":"easy","type":"single","question":"When can a `final` instance variable be initialized?","choices":{"0":"Only at the time of declaration.","1":"Only in a static initializer block.","2":"At declaration, in an instance initializer, or in a constructor.","3":"Anywhere in the class, as long as it's before it is used."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102304,"difficulty":"easy","type":"single","question":"Which of these common Java classes is declared as `final`?","choices":{"0":"`java.lang.Object`","1":"`java.lang.String`","2":"`java.lang.Exception`","3":"`java.util.ArrayList`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102305,"difficulty":"easy","type":"multiple","question":"Which of the following declarations will result in a compile-time error? (Choose all that apply)","choices":{"0":"`final abstract class MyClass {}`","1":"`public class MyClass { final abstract void myMethod(); }`","2":"`final class MyClass {}`","3":"`abstract class MyClass { final void myMethod() {} }`"},"answers":["0","1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102306,"difficulty":"medium","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class FinalTest {\n    public static void main(String[] args) {\n        final List<String> list = new ArrayList<>();\n        list.add(\"A\");\n        list.add(\"B\");\n        list.remove(0);\n        System.out.println(list.get(0));\n    }\n}\n\\end{verbatim}","choices":{"0":"A","1":"B","2":"The code fails to compile because a `final` list cannot be modified.","3":"A runtime exception is thrown."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102307,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile this class?\\n\\begin{verbatim}\npublic class Config {\n    private final int maxConnections;\n\n    public Config() {\n        // maxConnections is not initialized here\n    }\n    \n    public void setMaxConnections(int max) {\n        this.maxConnections = max;\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"A compile-time error occurs because `maxConnections` is not initialized in the constructor.","2":"A compile-time error occurs in the `setMaxConnections` method.","3":"The code compiles but will throw an exception if `setMaxConnections` is called."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102308,"difficulty":"medium","type":"single","question":"Examine the following code. What is the result?\\n\\begin{verbatim}\nclass Calculator {\n    public final void calculate(int x) {\n        System.out.println(\"int\");\n    }\n}\n\nclass AdvancedCalculator extends Calculator {\n    public void calculate(long x) {\n        System.out.println(\"long\");\n    }\n}\n\\end{verbatim}","choices":{"0":"A compile-time error occurs because `calculate` is final.","1":"The code compiles successfully.","2":"A runtime error occurs.","3":"A compile-time error occurs for a different reason."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102309,"difficulty":"medium","type":"single","question":"What is the result of this code?\\n\\begin{verbatim}\npublic class Test {\n    public void process(final int value) {\n        if (value > 10) {\n            value = 100; // Reassignment\n        }\n        System.out.println(value);\n    }\n\n    public static void main(String[] args) {\n        new Test().process(20);\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints 100.","1":"It prints 20.","2":"A compile-time error occurs because the `final` parameter `value` cannot be reassigned.","3":"A runtime exception is thrown."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102310,"difficulty":"medium","type":"single","question":"What is the result of compiling and running the following code?\\n\\begin{verbatim}\npublic class Test {\n    final int value;\n    {\n        value = 10;\n    }\n    public Test() {\n        // Constructor is empty\n    }\n    public static void main(String[] args) {\n        System.out.println(new Test().value);\n    }\n}\n\\end{verbatim}","choices":{"0":"0","1":"10","2":"A compile-time error occurs because `value` is not initialized in the constructor.","3":"A compile-time error occurs because a `final` variable cannot be initialized in an instance initializer."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102311,"difficulty":"medium","type":"single","question":"Which statement about the following code is true?\\n\\begin{verbatim}\nfinal class Algorithm {\n    public final void perform() {\n        // ...\n    }\n}\n\\end{verbatim}","choices":{"0":"The `final` keyword on the `perform` method is required for the code to compile.","1":"The `final` keyword on the `perform` method is redundant.","2":"The `final` keyword on the class `Algorithm` is redundant.","3":"This code will not compile."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102312,"difficulty":"medium","type":"single","question":"What is the result of the following code?\\n\\begin{verbatim}\npublic class BlankFinal {\n    public static void main(String[] args) {\n        final String message;\n        boolean error = true;\n        if (error) {\n            message = \"Error\";\n        } \n        // 'else' block is missing\n        // System.out.println(message); // This line is commented out\n    }\n}\n\\end{verbatim}\nWhat happens if the commented-out line `System.out.println(message);` is uncommented?","choices":{"0":"The code will compile and print \"Error\".","1":"The code will compile and throw a runtime exception.","2":"The code will fail to compile because `message` might not have been initialized.","3":"The code will fail to compile because a `final` variable must be initialized at declaration."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102313,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile and run this code?\\n\\begin{verbatim}\nclass Data {\n    private static final int VALUE;\n    static {\n        VALUE = 25;\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(Data.VALUE);\n    }\n}\n\\end{verbatim}","choices":{"0":"A compile-time error because `VALUE` is not initialized at declaration.","1":"The code compiles and prints 25.","2":"The code compiles and prints 0.","3":"A runtime exception is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102314,"difficulty":"medium","type":"single","question":"Given a final variable declared as `final int[] nums = {10, 20, 30};`, which of the following operations is illegal?","choices":{"0":"`nums[0] = 5;`","1":"`System.out.println(nums[1]);`","2":"`nums = new int[]{40, 50};`","3":"`int len = nums.length;`"},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102315,"difficulty":"medium","type":"single","question":"Which statement accurately describes the relationship between `private` and `final` for methods?","choices":{"0":"A `private` method must be declared `final`.","1":"A `final` method must be declared `private`.","2":"A `private` method is implicitly `final`.","3":"There is no relationship between `private` and `final` methods."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102316,"difficulty":"medium","type":"multiple","question":"Which of the following statements about `final` variables are true? (Choose all that apply)","choices":{"0":"A `final` reference variable cannot be reassigned to point to a different object.","1":"The object referenced by a `final` reference variable is immutable.","2":"A `final` static variable must be initialized in a static initializer block.","3":"A `final` instance variable can be initialized in a constructor."},"answers":["0","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102317,"difficulty":"medium","type":"multiple","question":"Where can a non-static `final` variable be initialized? (Choose all that apply)","choices":{"0":"At the point of declaration.","1":"In any method of the class.","2":"In an instance initializer block.","3":"In a constructor.","4":"In a static initializer block."},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102318,"difficulty":"medium","type":"multiple","question":"A variable `x` is used inside a Java 8 lambda expression. `x` is declared outside the lambda. Which of the following are true about `x`? (Choose all that apply)","choices":{"0":"`x` must be explicitly declared `final`.","1":"`x` can be a local variable, instance variable, or static variable.","2":"If `x` is a local variable, it must be effectively final (i.e., its value is never changed after initialization).","3":"The lambda expression can reassign a new value to `x` if it is an instance variable."},"answers":["1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102319,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile this class?\\n\\begin{verbatim}\npublic class MyConfig {\n    private final String name;\n    public MyConfig() {\n        this(\"Default\");\n    }\n    public MyConfig(String name) {\n        this.name = name;\n    }\n    public MyConfig(int id) {\n        // name is not initialized here\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"A compile-time error occurs because the constructor `MyConfig(int id)` does not initialize the final field `name`.","2":"A compile-time error occurs because a class cannot have multiple constructors when a final field is present.","3":"A compile-time error occurs at the `this(\"Default\");` call."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102320,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\npublic class Finalizer {\n    private final int value;\n    public Finalizer(int v) {\n        this.value = v;\n    }\n    public int getValue() {\n        return this.value;\n    }\n    public static void main(String[] args) {\n        final Finalizer f = new Finalizer(20);\n        // Line X\n        System.out.println(f.getValue());\n    }\n    public void modify(Finalizer fin) {\n        fin = new Finalizer(30);\n    }\n}\n\\end{verbatim}\nWhat would happen if `modify(f);` was inserted at 'Line X'?","choices":{"0":"The code would fail to compile because `f` is final.","1":"The code would print 30.","2":"The code would print 20.","3":"The code would throw a runtime exception."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102321,"difficulty":"hard","type":"single","question":"What is the result of compiling this code?\\n\\begin{verbatim}\nclass A {\n    final void m() {}\n}\nclass B extends A {\n    static void m() {}\n}\n\\end{verbatim}","choices":{"0":"It compiles successfully, as method hiding is not overriding.","1":"It fails to compile because a static method cannot have the same signature as a final instance method in a superclass.","2":"It fails to compile because the `final` method `m()` cannot be hidden.","3":"It fails to compile because `m()` in `B` needs to be declared `final` as well."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102322,"difficulty":"hard","type":"single","question":"What is the result of compiling the following code?\\n\\begin{verbatim}\npublic class Test {\n    public void process() {\n        final int x;\n        try {\n            x = 10;\n        } catch (Exception e) {\n            // x is not initialized here\n        }\n        // System.out.println(x); // Uncomment this line\n    }\n}\n\\end{verbatim}\nIf the final line is uncommented, what happens?","choices":{"0":"The code compiles fine.","1":"A compile-time error occurs because `x` may not have been initialized.","2":"A compile-time error occurs because a final variable cannot be initialized inside a `try` block.","3":"The code compiles but throws an `IllegalStateException` at runtime."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102323,"difficulty":"hard","type":"single","question":"Examine the following code. What is its result?\\n\\begin{verbatim}\npublic class Runner {\n    public static void main(String[] args) {\n        int y = 1;\n        Runnable r = () -> {\n            // Line 1\n            System.out.println(y);\n        };\n        // Line 2\n    }\n}\n\\end{verbatim}\nWhat happens if the statement `y = 2;` is placed at Line 2?","choices":{"0":"The code compiles and runs fine.","1":"The code fails to compile due to an error at Line 1 (`System.out.println(y);`).","2":"The code fails to compile due to an error at `y = 2;` because `y` is now effectively final.","3":"The code compiles but throws a runtime exception."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102324,"difficulty":"hard","type":"single","question":"What is the result of the following code snippet?\\n\\begin{verbatim}\npublic class Circle {\n    private final double radius;\n    private static final double PI = 3.14159;\n\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    public void setPi(double newPi) {\n        PI = newPi;\n    }\n}\n\\end{verbatim}","choices":{"0":"It compiles successfully.","1":"It fails to compile because `PI` cannot be assigned in `setPi()`.","2":"It fails to compile because `radius` is not initialized.","3":"It fails to compile because a `static final` variable cannot be private."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102325,"difficulty":"hard","type":"multiple","question":"Which of these statements are reasons that the `String` class is declared as `final` in Java? (Choose all that apply)","choices":{"0":"To prevent developers from creating inefficient custom `String` implementations.","1":"To ensure security, as many parts of the Java API (like class loading and network connections) rely on the predictable, immutable behavior of strings.","2":"To allow the Java compiler to perform string concatenation optimizations at compile time.","3":"To enable the String Constant Pool, which saves memory by ensuring that identical string literals refer to the same object."},"answers":["1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102326,"difficulty":"hard","type":"multiple","question":"Which of the following code blocks are valid and will compile without error? (Choose all that apply)","choices":{"0":"\\begin{verbatim}\nclass A {\n  final int X;\n  A() { X = 1; }\n  A(int x) { X = x; }\n}\n\\end{verbatim}","1":"\\begin{verbatim}\nclass B {\n  final int X;\n}\n\\end{verbatim}","2":"\\begin{verbatim}\nclass C {\n  final int X;\n  { X = 10; }\n}\n\\end{verbatim}","3":"\\begin{verbatim}\nclass D {\n  final int X;\n  D(int val) { X = val; }\n  void setX() { X = 5; }\n}\n\\end{verbatim}"},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102327,"difficulty":"hard","type":"multiple","question":"Given `final int[] arr = new int[2];`, which of the following lines of code will compile and execute without error if placed after the declaration? (Choose all that apply)","choices":{"0":"`arr[0] = 1;`","1":"`arr = new int[]{1, 2};`","2":"`final int[] brr = arr;`","3":"`arr = null;`"},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102400,"difficulty":"easy","type":"single","question":"Which of the following is a correct way to declare and initialize a one-dimensional array of integers?","choices":{"0":"\\verb|int[] arr = {1, 2, 3};|","1":"\\verb|int arr[] = new int(3);|","2":"\\verb|int arr[3] = {1, 2, 3};|","3":"\\verb|int[] arr = new int[3]{1, 2, 3};|"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102401,"difficulty":"easy","type":"single","question":"What is the output of the following code snippet?\\begin{verbatim}\nint[] nums = {10, 20, 30, 40};\nSystem.out.println(nums.length);\n\\end{verbatim}","choices":{"0":"3","1":"4","2":"10","3":"Compilation fails."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102402,"difficulty":"easy","type":"single","question":"What is the value of \\verb|arr[1]| after the following code executes?\\begin{verbatim}\nString[] arr = new String[3];\narr[0] = \"Java\";\narr[2] = \"8\";\n\\end{verbatim}","choices":{"0":"\\verb|\"\"| (empty string)","1":"\\verb|null|","2":"The code will throw a \\verb|NullPointerException|.","3":"The code will not compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102403,"difficulty":"easy","type":"single","question":"Which of the following lines of code will cause an \\verb|ArrayIndexOutOfBoundsException| at runtime?\\begin{verbatim}\nint[] data = new int[5]; // line 1\ndata[0] = 1;             // line 2\ndata[4] = 5;             // line 3\ndata[5] = 6;             // line 4\n\\end{verbatim}","choices":{"0":"line 1","1":"line 2","2":"line 3","3":"line 4"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102404,"difficulty":"easy","type":"single","question":"How do you correctly declare a two-dimensional array of characters?","choices":{"0":"\\verb|char[][] matrix;|","1":"\\verb|char matrix[][];|","2":"\\verb|char[] matrix[];|","3":"All of the above."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102405,"difficulty":"easy","type":"multiple","question":"Which of the following are valid array declarations? (Choose all that apply)","choices":{"0":"\\verb|int[] a;|","1":"\\verb|int b[];|","2":"\\verb|int[5] c;|","3":"\\verb|int[] d, e[];|"},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102406,"difficulty":"medium","type":"single","question":"What is the result of executing the following code?\\begin{verbatim}\nint[] a = new int[3];\nint[] b = {1, 2, 3, 4, 5};\na = b;\nSystem.out.println(a[3]);\n\\end{verbatim}","choices":{"0":"0","1":"3","2":"4","3":"An \\verb|ArrayIndexOutOfBoundsException| is thrown."},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102407,"difficulty":"medium","type":"single","question":"What is the output of this code snippet?\\begin{verbatim}\nint[][] matrix = new int[2][3];\nSystem.out.print(matrix[1].length + \" \");\nSystem.out.print(matrix[1][2]);\n\\end{verbatim}","choices":{"0":"3 0","1":"2 0","2":"3 null","3":"Compilation fails."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102408,"difficulty":"medium","type":"single","question":"Which statement about the following code is true?\\begin{verbatim}\nString[][] array = new String[2][];\narray[0] = new String[]{\"a\", \"b\", \"c\"};\narray[1] = new String[]{\"d\"};\n\\end{verbatim}","choices":{"0":"The code will not compile.","1":"The code compiles but throws an exception at runtime.","2":"\\verb|array.length| is 2 and \\verb|array[0].length| is 3.","3":"\\verb|array.length| is 3 and \\verb|array[1].length| is 1."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102409,"difficulty":"medium","type":"single","question":"What is the result?\\begin{verbatim}\nint[] arr1 = {1, 2, 3};\nint[] arr2 = arr1;\narr2[1] = 4;\nSystem.out.println(arr1[1]);\n\\end{verbatim}","choices":{"0":"1","1":"2","2":"3","3":"4"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102410,"difficulty":"medium","type":"single","question":"Examine the following code:\\begin{verbatim}\nint[][] arr = new int[2][];\nSystem.out.println(arr[0]);\n\\end{verbatim}What is the output?","choices":{"0":"0","1":"\\verb|null|","2":"An exception is thrown.","3":"The code does not compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102411,"difficulty":"medium","type":"single","question":"What happens when you try to compile and run this code?\\begin{verbatim}\nfinal int[] arr = {1, 2};\narr[0] = 3;\nSystem.out.println(arr[0]);\n\\end{verbatim}","choices":{"0":"Compilation fails because \\verb|arr| is final.","1":"An exception is thrown at runtime.","2":"It prints 1.","3":"It prints 3."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102412,"difficulty":"medium","type":"single","question":"Which of these array declarations and initializations is NOT legal?","choices":{"0":"\\verb|int[] arr = new int[2];|","1":"\\verb|int[] arr = new int[] {1, 2};|","2":"\\verb|int[] arr = {1, 2};|","3":"\\verb|int[] arr = new int[2] {1, 2};|"},"answers":["3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102413,"difficulty":"medium","type":"single","question":"What is the output?\\begin{verbatim}\nObject[] objArray = new String[3];\nobjArray[0] = \"Hello\";\nobjArray[1] = 10; // Line 3\nSystem.out.println(objArray[0]);\n\\end{verbatim}","choices":{"0":"Hello","1":"Compilation fails at Line 3.","2":"An \\verb|ArrayStoreException| is thrown at runtime at Line 3.","3":"An \\verb|IllegalAssignmentException| is thrown at runtime at Line 3."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102414,"difficulty":"medium","type":"single","question":"Consider this code:\\begin{verbatim}\nString[] one = {\"a\", \"b\", \"c\"};\nString[] two = {\"a\", \"b\", \"c\"};\nSystem.out.println(one == two);\n\\end{verbatim}What is printed?","choices":{"0":"\\verb|true|","1":"\\verb|false|","2":"The code does not compile.","3":"An exception is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102415,"difficulty":"medium","type":"single","question":"Which line of code, when inserted at // INSERT, will cause the code to print 4?\\begin{verbatim}\nint[][] matrix = {{1, 2}, {3, 4, 5}};\n// INSERT\nSystem.out.println(val);\n\\end{verbatim}","choices":{"0":"\\verb|int val = matrix[1][1];|","1":"\\verb|int val = matrix[2][2];|","2":"\\verb|int val = matrix[1][2];|","3":"\\verb|int val = matrix[0][2];|"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102416,"difficulty":"medium","type":"multiple","question":"Which of the following statements about multi-dimensional arrays in Java are true? (Choose all that apply)","choices":{"0":"A multi-dimensional array is an array of arrays.","1":"All rows in a 2D array must have the same number of columns.","2":"The declaration \\verb|int[][][] arr = new int[2][3][4];| is valid.","3":"The expression \\verb|arr.length| for a 2D array \\verb|arr| gives the total number of elements."},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102417,"difficulty":"medium","type":"multiple","question":"Given the following declaration, which of the following lines will compile? (Choose all that apply)\\begin{verbatim}\nint[] arr[];\n\\end{verbatim}","choices":{"0":"\\verb|arr = new int[2][3];|","1":"\\verb|arr = new int[2][];|","2":"\\verb|arr = new int[][3];|","3":"\\verb|arr = {{1,2}, {3,4}};|"},"answers":["0","1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102418,"difficulty":"medium","type":"multiple","question":"What is true about the following code snippet? (Choose all that apply)\\begin{verbatim}\nint[] a = {};\nSystem.out.println(a.length);\nSystem.out.println(a[0]);\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"The code prints 0 to the console.","2":"The code throws an \\verb|ArrayIndexOutOfBoundsException|.","3":"The declaration \\verb|int[] a = {};| is invalid."},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102419,"difficulty":"medium","type":"single","question":"Which of the following is the correct way to pass an anonymous array to a method that accepts an array of strings?\\begin{verbatim}\npublic void print(String[] messages) { /* ... */ }\n\\end{verbatim}","choices":{"0":"\\verb|print({\"msg1\", \"msg2\"});|","1":"\\verb|print(new String[]{\"msg1\", \"msg2\"});|","2":"\\verb|print(new String[2]{\"msg1\", \"msg2\"});|","3":"\\verb|String[] arr = {\"msg1\", \"msg2\"}; print(arr);|"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102420,"difficulty":"medium","type":"single","question":"What is the output of the following code?\\begin{verbatim}\nint i = 0;\nint[] a = {3, 4, 5};\na[i] = i = 1;\nSystem.out.println(a[0] + \", \" + a[1] + \", \" + i);\n\\end{verbatim}","choices":{"0":"1, 4, 1","1":"3, 1, 1","2":"1, 1, 1","3":"The code is not valid and will not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102421,"difficulty":"hard","type":"single","question":"What is the result of compiling and running this class?\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        String[][] matrix = new String[1][2];\n        matrix[0] = new String[3];\n        Object[] objArray = matrix;\n        objArray[0] = new int[]{1, 2, 3};\n        System.out.println(matrix[0][0]);\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints \\verb|null|.","1":"It prints \\verb|1|.","2":"An \\verb|ArrayStoreException| is thrown at runtime.","3":"A \\verb|ClassCastException| is thrown at runtime."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102422,"difficulty":"hard","type":"single","question":"Which of these lines of code is valid in Java?","choices":{"0":"\\verb|int[] arr[] = new int[3][];|","1":"\\verb|int[][] arr = new int[][3];|","2":"\\verb|int arr[][] = new int[3][3];|","3":"\\verb|int[] arr[] = new int[][3];|"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102423,"difficulty":"hard","type":"single","question":"What is the output of the following program?\\begin{verbatim}\npublic class StrangeLoop {\n    public static void main(String[] args) {\n        int[] arr = {1, 2, 3};\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = arr[i] * arr[i];\n            i++;\n        }\n        System.out.println(arr[0] + \",\" + arr[1] + \",\" + arr[2]);\n    }\n}\n\\end{verbatim}","choices":{"0":"1,2,9","1":"1,4,9","2":"1,4,3","3":"An \\verb|ArrayIndexOutOfBoundsException| is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102424,"difficulty":"hard","type":"multiple","question":"Which of the following statements are true? (Choose all that apply)","choices":{"0":"\\verb|int[] x, y[];| declares \\verb|x| as a 1D array and \\verb|y| as a 2D array.","1":"An array's size can be changed after it has been created.","2":"\\verb|new int[0]| creates an array of size 0.","3":"An \\verb|ArrayStoreException| is a checked exception."},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102425,"difficulty":"hard","type":"single","question":"What is the result?\\begin{verbatim}\nint[] a = {1, 2, 3};\nint[] b = a.clone();\nSystem.out.print((a == b) + \" \");\n\nint[][] c = {{1}, {2}};\nint[][] d = c.clone();\nSystem.out.print((c[0] == d[0]));\n\\end{verbatim}","choices":{"0":"false true","1":"false false","2":"true false","3":"true true"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102426,"difficulty":"hard","type":"single","question":"Consider the following method:\\begin{verbatim}\npublic void process(int... nums) {\n    System.out.println(nums.length);\n}\n\\end{verbatim}Which of the following calls will compile and print 1?","choices":{"0":"\\verb|process(new int[]{1});|","1":"\\verb|process({1});|","2":"\\verb|process(1);|","3":"Both A and C"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102427,"difficulty":"hard","type":"single","question":"What is the final value of \\verb|sum|?\\begin{verbatim}\nlong[][] arr = new long[2][2];\narr[0] = new long[]{1, 2};\narr[1] = arr[0];\narr[0][0] = 5;\nlong sum = arr[0][0] + arr[1][0];\n\\end{verbatim}","choices":{"0":"6","1":"7","2":"10","3":"Compilation fails."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102428,"difficulty":"hard","type":"multiple","question":"Which of these are legal ways to initialize a 2D array? (Choose all that apply)","choices":{"0":"\\verb|char[][] grid = new char[][] {{'a'},{'b'}};|","1":"\\verb|int[][] nums = new int[2][]; nums[0] = {1,2};|","2":"\\verb|boolean[][] flags = {{true}, new boolean[1]};|","3":"\\verb|double[][] matrix; matrix = new double[][]{{1.0},{2.0}};|"},"answers":["2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102429,"difficulty":"hard","type":"single","question":"Analyze the following code. What is the output?\\begin{verbatim}\npublic class ArrayFun {\n    public static void main(String... args) {\n        int[] array = new int[2];\n        array[array[0]] = array[0] = 1;\n        System.out.println(array[0] + \" \" + array[1]);\n    }\n}\n\\end{verbatim}","choices":{"0":"1 1","1":"1 0","2":"0 1","3":"The code will not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102500,"difficulty":"easy","type":"single","question":"Which of the following correctly creates an `ArrayList` of `String` objects?","choices":{"0":"\\verb|ArrayList<String> list = new ArrayList[];|","1":"\\verb|ArrayList<String> list = new ArrayList();|","2":"\\verb|ArrayList list = new ArrayList<String>();|","3":"\\verb|List<String> list = new List<String>();|"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102501,"difficulty":"easy","type":"single","question":"What is the output of the following code snippet?\\begin{verbatim}\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<String> list = new ArrayList<>();\n        list.add(\"A\");\n        list.add(\"B\");\n        list.add(1, \"C\");\n        System.out.println(list);\n    }\n}\n\\end{verbatim}","choices":{"0":"[A, B, C]","1":"[A, C, B]","2":"[C, A, B]","3":"Compilation fails."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102502,"difficulty":"easy","type":"single","question":"What is the primary difference between an `Array` and an `ArrayList`?","choices":{"0":"An `Array` can store primitives, while an `ArrayList` can only store objects.","1":"An `Array` has a fixed size, while an `ArrayList` has a dynamic size.","2":"An `Array` is part of the Collections Framework, while an `ArrayList` is not.","3":"Elements are accessed using `get(index)` in an `Array` and `[index]` in an `ArrayList`."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102503,"difficulty":"easy","type":"single","question":"What method is used to find the number of elements in an `ArrayList`?","choices":{"0":"\\verb|length|","1":"\\verb|length()|","2":"\\verb|size|","3":"\\verb|size()|"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102504,"difficulty":"easy","type":"single","question":"What is the result of this code?\\begin{verbatim}\nimport java.util.ArrayList;\n\npublic class Test {\n    public static void main(String[] args) {\n        ArrayList<Integer> nums = new ArrayList<>();\n        nums.add(1);\n        nums.add(2);\n        nums.remove(0);\n        System.out.println(nums.get(0));\n    }\n}\n\\end{verbatim}","choices":{"0":"1","1":"2","2":"An `IndexOutOfBoundsException` is thrown.","3":"Compilation fails."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102505,"difficulty":"easy","type":"multiple","question":"Which of the following are valid ways to declare and initialize an `ArrayList`? (Choose all that apply)","choices":{"0":"\\verb|ArrayList<String> list = new ArrayList<>();|","1":"\\verb|List<String> list = new ArrayList<String>();|","2":"\\verb|ArrayList<String> list = new List<>();|","3":"\\verb|var list = new ArrayList<String>();|","4":"\\verb|ArrayList<> list = new ArrayList<String>();|"},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102506,"difficulty":"medium","type":"single","question":"What is the output of the following code?\\begin{verbatim}\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<Integer> list = new ArrayList<>();\n        list.add(10);\n        list.add(20);\n        list.add(30);\n        list.remove(Integer.valueOf(20));\n        System.out.println(list);\n    }\n}\n\\end{verbatim}","choices":{"0":"[10, 30]","1":"[10, 20]","2":"An `IndexOutOfBoundsException` is thrown.","3":"Compilation fails."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102507,"difficulty":"medium","type":"single","question":"What is the result of the following code snippet?\\begin{verbatim}\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<Short> list = new ArrayList<>();\n        list.add((short)1);\n        list.add((short)2);\n        list.remove(1);\n        System.out.println(list);\n    }\n}\n\\end{verbatim}","choices":{"0":"[1]","1":"[2]","2":"[]","3":"Compilation fails."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102508,"difficulty":"medium","type":"single","question":"What happens when this code is executed?\\begin{verbatim}\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Test {\n    public static void main(String[] args) {\n        String[] array = {\"A\", \"B\"};\n        List<String> list = Arrays.asList(array);\n        list.add(\"C\");\n        System.out.println(list);\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints [A, B, C].","1":"It prints [A, B].","2":"An `UnsupportedOperationException` is thrown at runtime.","3":"The code does not compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102509,"difficulty":"medium","type":"single","question":"What is the output of this code?\\begin{verbatim}\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<String> list1 = new ArrayList<>();\n        list1.add(\"a\");\n        List<String> list2 = new ArrayList<>();\n        list2.add(\"a\");\n        System.out.println(list1 == list2);\n        System.out.println(list1.equals(list2));\n    }\n}\n\\end{verbatim}","choices":{"0":"true\\ntrue","1":"true\\nfalse","2":"false\\ntrue","3":"false\\nfalse"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102510,"difficulty":"medium","type":"single","question":"Which statement correctly replaces the element at index 1 with \"Z\"?\\begin{verbatim}\nList<String> list = new ArrayList<>();\nlist.add(\"X\");\nlist.add(\"Y\");\n// INSERT CODE HERE\n\\end{verbatim}","choices":{"0":"\\verb|list.add(1, \"Z\");|","1":"\\verb|list.set(1, \"Z\");|","2":"\\verb|list.replace(1, \"Z\");|","3":"\\verb|list[1] = \"Z\";|"},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102511,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile and run the following code?\\begin{verbatim}\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Test {\n    public static void main(String[] args) {\n        List list = new ArrayList();\n        list.add(\"hello\");\n        list.add(123);\n        System.out.println(list.get(1));\n    }\n}\n\\end{verbatim}","choices":{"0":"It compiles and prints `123`.","1":"It compiles and prints `hello`.","2":"It fails to compile.","3":"It throws an exception at runtime."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102512,"difficulty":"medium","type":"single","question":"What is the output of the following code?\\begin{verbatim}\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<String> list = new ArrayList<>();\n        list.add(\"One\");\n        list.add(\"Two\");\n        list.clear();\n        System.out.println(list.isEmpty() + \" \" + list.size());\n    }\n}\n\\end{verbatim}","choices":{"0":"false 0","1":"true 0","2":"false 2","3":"true 2"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102513,"difficulty":"medium","type":"single","question":"Examine the code:\\begin{verbatim}\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<Integer> list = new ArrayList<>();\n        list.add(1);\n        list.add(2);\n        list.add(null);\n        list.remove(2);\n        System.out.println(list);\n    }\n}\n\\end{verbatim}What is the output?","choices":{"0":"[1, 2]","1":"[1, null]","2":"A `NullPointerException` is thrown.","3":"An `IndexOutOfBoundsException` is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102514,"difficulty":"medium","type":"single","question":"What is the result of executing this code?\\begin{verbatim}\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Collections;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<String> list = new ArrayList<>();\n        list.add(\"c\");\n        list.add(\"a\");\n        list.add(\"b\");\n        Collections.sort(list);\n        System.out.println(list);\n    }\n}\n\\end{verbatim}","choices":{"0":"[c, a, b]","1":"[c, b, a]","2":"[a, b, c]","3":"Compilation fails because `ArrayList` does not have a `sort` method."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102515,"difficulty":"medium","type":"single","question":"What is the output?\\begin{verbatim}\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<String> list = new ArrayList<>();\n        list.add(\"A\");\n        list.add(\"B\");\n        list.add(\"C\");\n        System.out.println(list.remove(\"B\") + \" \" + list.size());\n    }\n}\n\\end{verbatim}","choices":{"0":"B 2","1":"true 2","2":"B 3","3":"true 3"},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102516,"difficulty":"medium","type":"multiple","question":"Given the following list, which of the options will result in the list `[X, Z]`? (Choose all that apply)\\begin{verbatim}\nList<String> list = new ArrayList<>();\nlist.add(\"X\");\nlist.add(\"Y\");\nlist.add(\"Z\");\n\\end{verbatim}","choices":{"0":"\\verb|list.remove(1);|","1":"\\verb|list.remove(\"Y\");|","2":"\\verb|list.remove(new String(\"Y\"));|","3":"\\verb|list.set(1, \"Z\"); list.remove(2);|"},"answers":["0","1","2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102517,"difficulty":"medium","type":"multiple","question":"Which of the following statements about `ArrayList` in Java 8 are true? (Choose all that apply)","choices":{"0":"An `ArrayList` can contain duplicate elements.","1":"An `ArrayList` maintains the insertion order of elements.","2":"An `ArrayList` cannot store `null` values.","3":"An `ArrayList` is thread-safe."},"answers":["0","1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102518,"difficulty":"medium","type":"multiple","question":"Which lines of code will throw an exception at runtime? (Choose all that apply)\\begin{verbatim}\nimport java.util.List;\nimport java.util.ArrayList;\n\nList<Object> list = new ArrayList<>();\nlist.add(\"A\");                       // Line 1\nlist.add(1, \"B\");                    // Line 2\nlist.remove(2);                    // Line 3\nlist.set(0, \"C\");                    // Line 4\nlist.get(-1);                      // Line 5\n\\end{verbatim}","choices":{"0":"Line 1","1":"Line 2","2":"Line 3","3":"Line 4","4":"Line 5"},"answers":["2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102519,"difficulty":"medium","type":"multiple","question":"Which of these are methods of the `java.util.Collection` interface? (Choose all that apply)","choices":{"0":"\\verb|add(E e)|","1":"\\verb|get(int index)|","2":"\\verb|remove(Object o)|","3":"\\verb|sort(Comparator c)|","4":"\\verb|size()|"},"answers":["0","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102520,"difficulty":"hard","type":"single","question":"What is the result of executing the following code?\\begin{verbatim}\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<Integer> list = new ArrayList<>();\n        list.add(1);\n        list.add(2);\n        list.add(3);\n        list.remove(2);\n        System.out.println(list);\n    }\n}\n\\end{verbatim}","choices":{"0":"[1, 2]","1":"[1, 3]","2":"[2, 3]","3":"An `IndexOutOfBoundsException` is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102521,"difficulty":"hard","type":"single","question":"What is the output of this code?\\begin{verbatim}\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<String> list = new ArrayList<>();\n        list.add(\"A\");\n        list.add(\"B\");\n        for (String s : list) {\n            if (\"A\".equals(s)) {\n                list.remove(s);\n            }\n        }\n        System.out.println(list);\n    }\n}\n\\end{verbatim}","choices":{"0":"[A, B]","1":"[B]","2":"A `ConcurrentModificationException` is thrown.","3":"The code does not compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102522,"difficulty":"hard","type":"single","question":"What is the result?\\begin{verbatim}\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<StringBuilder> list = new ArrayList<>();\n        list.add(new StringBuilder(\"A\"));\n        list.add(new StringBuilder(\"B\"));\n        List<StringBuilder> list2 = new ArrayList<>(list);\n        list.get(0).append(\"C\");\n        System.out.println(list.get(0) + \", \" + list2.get(0));\n    }\n}\n\\end{verbatim}","choices":{"0":"A, A","1":"AC, A","2":"A, AC","3":"AC, AC"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102523,"difficulty":"hard","type":"single","question":"What is printed to the console?\\begin{verbatim}\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<String> list = new ArrayList<>();\n        list.add(\"alpha\");\n        list.add(\"beta\");\n        list.add(\"gamma\");\n        list.removeIf(s -> s.length() > 4);\n        System.out.println(list);\n    }\n}\n\\end{verbatim}","choices":{"0":"[alpha, beta, gamma]","1":"[alpha, gamma]","2":"[beta]","3":"Compilation fails."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102524,"difficulty":"hard","type":"single","question":"Consider the following code:\\begin{verbatim}\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<String> list1 = new ArrayList<>(Arrays.asList(\"A\",\"B\"));\n        List<String> list2 = new ArrayList<>(Arrays.asList(\"B\",\"A\"));\n        List<String> list3 = new ArrayList<>(Arrays.asList(\"A\",\"B\"));\n        System.out.print(list1.equals(list2));\n        System.out.print(\", \");\n        System.out.print(list1.equals(list3));\n    }\n}\n\\end{verbatim}What is the output?","choices":{"0":"true, true","1":"true, false","2":"false, true","3":"false, false"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102525,"difficulty":"hard","type":"single","question":"Which code snippet demonstrates the correct way to create a generic `ArrayList` that can hold any subclass of `Number`?","choices":{"0":"\\verb|List<? super Number> list = new ArrayList<Integer>();|","1":"\\verb|List<? extends Number> list = new ArrayList<Integer>();|","2":"\\verb|List<T extends Number> list = new ArrayList<T>();|","3":"\\verb|List<Number> list = new ArrayList<Integer>();|"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102526,"difficulty":"hard","type":"single","question":"What is the result of this code?\\begin{verbatim}\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<Integer> list = new ArrayList<>(1);\n        list.add(10);\n        list.add(20);\n        list.add(30);\n        System.out.println(list.size());\n    }\n}\n\\end{verbatim}","choices":{"0":"1","1":"2","2":"3","3":"An exception is thrown."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102527,"difficulty":"hard","type":"multiple","question":"Which of the following will successfully compile and create a `List` containing the string \"Java\"? (Choose all that apply)","choices":{"0":"\\verb|List<String> l = new ArrayList<>(Arrays.asList(\"Java\"));|","1":"\\verb|List<String> l = Arrays.asList(\"Java\");|","2":"\\verb|List<String> l = List.of(\"Java\");|","3":"\\verb|var l = new ArrayList<String>(); l.add(\"Java\");|"},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102528,"difficulty":"hard","type":"multiple","question":"What is true about the following code snippet? (Choose all that apply)\\begin{verbatim}\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Test {\n    public static void main(String[] args) {\n        List list = new ArrayList();\n        list.add(1);\n        list.add(\"2\");\n        list.add(new Object());\n\n        for(Object obj : list) {\n            if(obj instanceof String) {\n                list.remove(obj);\n            }\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"It compiles without issues.","1":"It throws a `ConcurrentModificationException` at runtime.","2":"After execution, `list` will contain `[1, java.lang.Object]`.","3":"The code will not compile due to modifying a list during iteration."},"answers":["0","1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102600,"difficulty":"easy","type":"single","question":"What is the primary benefit of using generics in Java?","choices":{"0":"They improve the runtime performance of collections.","1":"They allow collections to store primitive types directly.","2":"They enforce type safety at compile time, reducing runtime errors.","3":"They eliminate the need for casting entirely."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102601,"difficulty":"easy","type":"single","question":"Which of the following lines of code will NOT compile?","choices":{"0":"\\verb|List<String> list = new ArrayList<>();|","1":"\\verb|List<Object> list = new ArrayList<String>();|","2":"\\verb|List list = new ArrayList<String>();|","3":"\\verb|List<String> list = new ArrayList<String>();|"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102602,"difficulty":"easy","type":"single","question":"Which of the following is a correct way to define a simple generic class?","choices":{"0":"\\verb|class Box<T> { private T t; }|","1":"\\verb|class <T> Box { private T t; }|","2":"\\verb|class Box { private <T> t; }|","3":"\\verb|class Box<T> { private <T> t; }|"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102603,"difficulty":"easy","type":"single","question":"Why is the following code invalid?\\begin{verbatim}\nList<int> numbers = new ArrayList<>();\n\\end{verbatim}","choices":{"0":"The diamond operator `<>` cannot be used with primitive types.","1":"Generic type parameters must be reference types, not primitive types.","2":"The `List` interface cannot be instantiated.","3":"`ArrayList` does not support `int` values."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102604,"difficulty":"easy","type":"single","question":"What does the term 'type erasure' mean in the context of Java generics?","choices":{"0":"Generic type information is removed by the compiler and replaced with casts.","1":"Generic type information is only available at runtime.","2":"You can erase the contents of a generic collection with the `erase()` method.","3":"It is a compiler error that happens when a type is not specified."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102605,"difficulty":"easy","type":"multiple","question":"Which of the following are valid declarations? (Choose all that apply)","choices":{"0":"\\verb|List<String> list1 = new ArrayList();|","1":"\\verb|List<Object> list2 = new ArrayList<>();|","2":"\\verb|Map<String, ? extends Number> map1 = new HashMap<>();|","3":"\\verb|List<int> list3 = new ArrayList<>();|","4":"\\verb|List<> list4 = new ArrayList<String>();|"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102606,"difficulty":"medium","type":"single","question":"Given the following code, what is the result?\\begin{verbatim}\nimport java.util.*;\n\npublic class Test {\n    public static void main(String[] args) {\n        List list = new ArrayList<Integer>();\n        list.add(1);\n        list.add(\"2\");\n        System.out.println(list.get(1));\n    }\n}\n\\end{verbatim}","choices":{"0":"1","1":"2","2":"A `ClassCastException` is thrown at runtime.","3":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102607,"difficulty":"medium","type":"single","question":"Which of the following method signatures uses a bounded type parameter correctly?","choices":{"0":"\\verb|public <T is Number> void process(T t)|","1":"\\verb|public <T implements Number> void process(T t)|","2":"\\verb|public <T extends Number> void process(T t)|","3":"\\verb|public <T inherits Number> void process(T t)|"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102608,"difficulty":"medium","type":"single","question":"What is the problem with the following code?\\begin{verbatim}\npublic class Box<T> {\n    private T contents;\n    public static T getEmptyContents() { // Line 3\n        return null;\n    }\n}\n\\end{verbatim}","choices":{"0":"A static method cannot return `null`.","1":"The method must be named `getContents` to match the field.","2":"A static method cannot refer to the class's type parameter `T`.","3":"There is no problem; the code is valid."},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102609,"difficulty":"medium","type":"single","question":"Consider the following method:\\begin{verbatim}\npublic void process(List<?> list) {\n    // Some code\n}\n\\end{verbatim}Which of the following operations is allowed inside the method?","choices":{"0":"\\verb|list.add(\"hello\");|","1":"\\verb|list.add(null);|","2":"\\verb|list.add(new Object());|","3":"All `add` operations are forbidden."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102610,"difficulty":"medium","type":"single","question":"What is the output of this code?\\begin{verbatim}\nimport java.util.*;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<String> sList = new ArrayList<>();\n        // Line 1\n        // Line 2\n        // System.out.println(sList.get(0));\n    }\n}\n\\end{verbatim}If we uncomment the print statement, which two lines, inserted at Line 1 and Line 2, will cause a `ClassCastException`?","choices":{"0":"\\verb|List oList = sList;|\\n\\verb|oList.add(123);|","1":"\\verb|List<Object> oList = sList;|\\n\\verb|oList.add(123);|","2":"\\verb|List<?> oList = sList;|\\n\\verb|oList.add(123);|","3":"None of the above will cause a `ClassCastException`."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102611,"difficulty":"medium","type":"single","question":"Which statement is true about the following code?\\begin{verbatim}\nList<Integer> numbers = new ArrayList<>();\nList<? extends Number> numList = numbers;\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"The code fails to compile because `Integer` is not a `Number`.","2":"The code fails to compile due to an invalid generic assignment.","3":"The code compiles but will throw a `ClassCastException` at runtime."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102612,"difficulty":"medium","type":"single","question":"Which line of code will fail to compile?\\begin{verbatim}\nimport java.util.*;\n\npublic class Wildcards {\n    public static void main(String[] args) {\n        List<? extends Number> list1 = new ArrayList<Integer>(); // Line 1\n        List<? super Integer> list2 = new ArrayList<Number>();   // Line 2\n        list1.add(1);                                            // Line 3\n        list2.add(1);                                            // Line 4\n    }\n}\n\\end{verbatim}","choices":{"0":"Line 1","1":"Line 2","2":"Line 3","3":"Line 4"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102613,"difficulty":"medium","type":"single","question":"What is the purpose of a generic method?","choices":{"0":"To create a method that can only be called from a generic class.","1":"To create a static method inside a generic class.","2":"To declare a method with its own type parameters, independent of the class's type parameters.","3":"To force a method to only accept `Object` as a parameter."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102614,"difficulty":"medium","type":"single","question":"Examine the following code:\\begin{verbatim}\nclass A {}\nclass B extends A {}\n\npublic class Test {\n    public static void main(String[] args) {\n        List<A> listA = new ArrayList<A>();\n        List<B> listB = new ArrayList<B>();\n        // Which assignment is valid?\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|listA = listB;|","1":"\\verb|listB = listA;|","2":"\\verb|listA = new ArrayList<B>();|","3":"None of the assignments are valid."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102615,"difficulty":"medium","type":"single","question":"What happens when you try to use `instanceof` with a generic type?\\begin{verbatim}\npublic <T> void check(Object obj) {\n    if (obj instanceof T) { // Line 2\n        System.out.println(\"It's a T!\");\n    }\n}\n\\end{verbatim}","choices":{"0":"The code works as expected.","1":"The code compiles, but throws an exception at runtime.","2":"The code fails to compile at Line 2.","3":"The code compiles only if `T` is a final class."},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102616,"difficulty":"medium","type":"multiple","question":"Given the following definitions, which of the instantiations are valid? (Choose all that apply)\\begin{verbatim}\nclass A {}\nclass B extends A implements I {}\ninterface I {}\n\nclass Crate<T> {}\n\\end{verbatim}","choices":{"0":"\\verb|Crate<A> c1 = new Crate<B>();|","1":"\\verb|Crate<? extends A> c2 = new Crate<B>();|","2":"\\verb|Crate<? super B> c3 = new Crate<A>();|","3":"\\verb|Crate<? extends B> c4 = new Crate<A>();|","4":"\\verb|Crate<? super A> c5 = new Crate<I>();|"},"answers":["1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102617,"difficulty":"medium","type":"multiple","question":"Which of the following statements are true about raw types in Java? (Choose all that apply)","choices":{"0":"Using raw types is completely forbidden in Java 8.","1":"Using raw types bypasses compile-time generic type checking.","2":"The compiler issues a warning when raw types are used.","3":"Raw types are necessary for backward compatibility with pre-Java 5 code.","4":"A `List` is equivalent to a `List<Object>`."},"answers":["1","2","3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102618,"difficulty":"medium","type":"multiple","question":"Given `List<? super Integer> list;`, which of the following lines of code are valid? (Choose all that apply)","choices":{"0":"\\verb|list = new ArrayList<Number>();|","1":"\\verb|list.add(123);|","2":"\\verb|Integer i = list.get(0);|","3":"\\verb|list = new ArrayList<Object>();|","4":"\\verb|Number n = list.get(0);|"},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102619,"difficulty":"medium","type":"multiple","question":"Which of the following are valid generic method declarations? (Choose all that apply)","choices":{"0":"\\verb|public static <T> T first(List<T> list) { return list.get(0); }|","1":"\\verb|public <T> new T() { return new T(); }|","2":"\\verb|public <X extends String> void process(X x) { System.out.println(x.length()); }|","3":"\\verb|public <?> void unknown(List<?> list) {}|","4":"\\verb|public static <T, U> U convert(T t) { return (U)t; }|"},"answers":["0","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102620,"difficulty":"hard","type":"single","question":"What is the result of compiling and running the following code?\\begin{verbatim}\nimport java.util.*;\n\npublic class Tricky {\n    public static void main(String[] args) {\n        List<String> list = new ArrayList<>();\n        addToList(list);\n        System.out.println(list.get(0));\n    }\n    public static void addToList(List list) {\n        list.add(123);\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `123`.","1":"It throws a `ClassCastException` at runtime.","2":"The code fails to compile.","3":"It throws an `IllegalStateException` at runtime."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102621,"difficulty":"hard","type":"single","question":"Which code snippet demonstrates wildcard capture?","choices":{"0":"\\verb|List<?> list = new ArrayList<String>(); list.add(\"hello\");|","1":"\\verb|List<?> list = new ArrayList<String>(); String s = list.get(0);|","2":"\\verb|void swap(List<?> list) { Object x = list.get(0); list.set(0, list.get(1)); list.set(1, x); }|","3":"\\verb|void swap(List<?> list) { swapHelper(list); } private <T> void swapHelper(List<T> list) { T x = list.get(0); list.set(0, list.get(1)); list.set(1, x); }|"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102622,"difficulty":"hard","type":"single","question":"Which of these lines causes a compilation error?\\begin{verbatim}\nimport java.util.*;\n\nclass Mammal {}\nclass Primate extends Mammal {}\nclass Human extends Primate {}\n\npublic class Test {\n    public static void main(String[] args) {\n        List<? super Primate> primates = new ArrayList<Mammal>(); // Line 1\n        primates.add(new Human());                                // Line 2\n        primates.add(new Primate());                              // Line 3\n        primates.add(new Mammal());                               // Line 4\n    }\n}\n\\end{verbatim}","choices":{"0":"Line 1","1":"Line 2","2":"Line 3","3":"Line 4"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102623,"difficulty":"hard","type":"single","question":"What is the problem with this code?\\begin{verbatim}\npublic class Creator<T> {\n    public T createInstance() {\n        return new T(); // Line 3\n    }\n}\n\\end{verbatim}","choices":{"0":"The method must be static.","1":"You cannot instantiate a type parameter `T` directly.","2":"The constructor `T()` is not visible.","3":"There is no problem; the code is valid if `T` has a no-arg constructor."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102624,"difficulty":"hard","type":"single","question":"Analyze the following class hierarchy and code snippet. What is the result?\\begin{verbatim}\nclass A<T> { T t; }\nclass B extends A<String> {}\nclass C extends A<Integer> {}\n\npublic class Test {\n    public static void main(String[] args) {\n        B b = new B();\n        b.t = \"hello\";\n        A a = b;\n        // What is the type of a.t and can it be assigned an Integer?\n        a.t = 123;\n        System.out.println(b.t);\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation fails at `a.t = 123;`.","1":"It compiles and prints `123`.","2":"It compiles but throws a `ClassCastException` at runtime.","3":"It prints `hello`."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102625,"difficulty":"hard","type":"single","question":"Due to type erasure, what does the following generic class effectively become after compilation?\\begin{verbatim}\npublic class Node<T extends Comparable<T>> {\n    private T data;\n    private Node<T> next;\n    public Node(T data, Node<T> next) {\n        this.data = data;\n        this.next = next;\n    }\n    public T getData() { return data; }\n}\n\\end{verbatim}","choices":{"0":"\\begin{verbatim}public class Node {\n    private Comparable data;\n    private Node next;\n    // ... constructor and methods with casts\n}\\end{verbatim}","1":"\\begin{verbatim}public class Node {\n    private Object data;\n    private Node next;\n    // ... constructor and methods with casts\n}\\end{verbatim}","2":"\\begin{verbatim}public class Node<Comparable> {\n    private Comparable data;\n    private Node<Comparable> next;\n    // ...\n}\\end{verbatim}","3":"The generic information is retained fully in the bytecode."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102626,"difficulty":"hard","type":"single","question":"What happens when you compile and run this code?\\begin{verbatim}\npublic class OverloadTest {\n    public void process(java.util.List<Integer> list) {\n        System.out.println(\"Integer List\");\n    }\n    public void process(java.util.List<String> list) {\n        System.out.println(\"String List\");\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles and runs successfully.","1":"The code compiles, but method calls will be ambiguous.","2":"The code fails to compile due to method overloading rules.","3":"The code fails to compile because both methods erase to the same signature `process(java.util.List)`."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102627,"difficulty":"hard","type":"multiple","question":"Which of the following are valid array creations? (Choose all that apply)","choices":{"0":"\\verb|List<String>[] arr = new List<String>[5];|","1":"\\verb|List<String>[] arr = new List<?>[5];|","2":"\\verb|T[] arr = new T[5]; // Inside a generic class Creator<T>|","3":"\\verb|List<?>[] arr = new List<?>[5];|"},"answers":["0","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1026,"topic":"Generics","questionId":102628,"difficulty":"hard","type":"multiple","question":"Given the method signature `public static <T> void copy(List<? extends T> src, List<? super T> dest)`, which of the following method calls are valid? (Choose all that apply)","choices":{"0":"\\verb|copy(new ArrayList<String>(), new ArrayList<Object>());|","1":"\\verb|copy(new ArrayList<Integer>(), new ArrayList<Number>());|","2":"\\verb|copy(new ArrayList<Object>(), new ArrayList<String>());|","3":"\\verb|copy(new ArrayList<Number>(), new ArrayList<Integer>());|","4":"\\verb|copy(new ArrayList<String>(), new ArrayList<String>());|"},"answers":["0","1","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102700,"difficulty":"easy","type":"single","question":"Which interface is used to define the natural ordering of a class?","choices":{"0":"`java.util.Comparator`","1":"`java.lang.Comparable`","2":"`java.util.Sortable`","3":"`java.lang.Orderable`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102701,"difficulty":"easy","type":"single","question":"What is the correct method signature to implement in a class that implements the `java.lang.Comparable<T>` interface?","choices":{"0":"`public int compare(T o1, T o2)`","1":"`public int compareTo(Object o)`","2":"`public int compareTo(T o)`","3":"`public boolean equals(Object o)`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102702,"difficulty":"easy","type":"multiple","question":"Which of the following are valid ways to sort an `ArrayList<String>` named `list` in ascending alphabetical order?","choices":{"0":"`java.util.Collections.sort(list);`","1":"`list.sort(null);`","2":"`list.sort((s1, s2) -> s1.compareTo(s2));`","3":"`java.util.Arrays.sort(list);`"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102703,"difficulty":"easy","type":"single","question":"If you want to sort a collection of custom objects based on a criterion other than their natural order, what should you pass to the `Collections.sort(List<T> list, Comparator<? super T> c)` method as the second argument?","choices":{"0":"An instance of the custom object.","1":"An implementation of the `Comparable` interface.","2":"An implementation of the `Comparator` interface.","3":"The string name of the field to sort by."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102704,"difficulty":"easy","type":"single","question":"What is the expected return value of `Collections.binarySearch()` if the target element is not found in the sorted list?","choices":{"0":"`0`","1":"`-1`","2":"An `ElementNotFoundException` is thrown.","3":"A negative value representing the insertion point."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102705,"difficulty":"easy","type":"single","question":"Which collection type automatically keeps its elements in a sorted order?","choices":{"0":"`ArrayList`","1":"`HashSet`","2":"`LinkedList`","3":"`TreeSet`"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102706,"difficulty":"medium","type":"single","question":"Given the following code:\n\\begin{verbatim}\nclass Book implements Comparable<Book> {\n    String title;\n    Book(String title) { this.title = title; }\n    public int compareTo(Book b) {\n        return title.compareTo(b.title);\n    }\n}\n//... inside a method\nList<Book> books = new ArrayList<>();\nbooks.add(new Book(\"Java\"));\nbooks.add(new Book(\"Python\"));\nbooks.add(new Book(\"C++\"));\nCollections.sort(books);\nSystem.out.println(books.get(0).title);\n\\end{verbatim}\nWhat is the output?","choices":{"0":"`Java`","1":"`Python`","2":"`C++`","3":"The code does not compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102707,"difficulty":"medium","type":"single","question":"What is the result of the following code snippet?\n\\begin{verbatim}\nList<Integer> numbers = new ArrayList<>();\nnumbers.add(5); numbers.add(2); numbers.add(8);\nCollections.sort(numbers, (i1, i2) -> i2.compareTo(i1));\nSystem.out.println(numbers);\n\\end{verbatim}","choices":{"0":"`[2, 5, 8]`","1":"`[5, 2, 8]`","2":"`[8, 5, 2]`","3":"A compilation error occurs."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102708,"difficulty":"medium","type":"single","question":"Consider the code:\n\\begin{verbatim}\nList<String> list = Arrays.asList(\"B\", \"C\", \"A\");\nCollections.binarySearch(list, \"A\");\n\\end{verbatim}\nWhat is the result?","choices":{"0":"`0`","1":"`2`","2":"A negative number.","3":"The result is unpredictable."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102709,"difficulty":"medium","type":"multiple","question":"Which of the following are true about the `Comparator` interface?","choices":{"0":"It is a functional interface.","1":"It defines a method named `compareTo`.","2":"It can be implemented using a lambda expression.","3":"A class can implement multiple `Comparator` strategies."},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102710,"difficulty":"medium","type":"single","question":"Given a `Player` class with `name` (String) and `score` (int) fields, which lambda expression correctly creates a `Comparator` to sort players by score in descending order?\n\\begin{verbatim}\nclass Player {\n    String name;\n    int score;\n    // constructor and getters\n}\n\\end{verbatim}","choices":{"0":"`Comparator<Player> c = (p1, p2) -> p1.getScore() - p2.getScore();`","1":"`Comparator<Player> c = (p1, p2) -> p2.getScore() - p1.getScore();`","2":"`Comparator<Player> c = (p1, p2) -> p1.name.compareTo(p2.name);`","3":"`Comparator<Player> c = (p1, p2) -> p2.score.compareTo(p1.score);`"},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102711,"difficulty":"medium","type":"single","question":"What happens when you add an object to a `TreeSet` that does not implement `Comparable` and no `Comparator` is provided at construction?","choices":{"0":"The element is added successfully.","1":"A `ClassCastException` is thrown at runtime when the second element is added.","2":"A `Compilation error` occurs.","3":"An `UnsupportedOperationException` is thrown at runtime."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102712,"difficulty":"medium","type":"single","question":"Which of the following is NOT a valid contract for `compare(o1, o2)` method in `Comparator`?","choices":{"0":"It must be that `sgn(compare(x, y)) == -sgn(compare(y, x))` for all x and y.","1":"It must be transitive: `(compare(x, y)>0 && compare(y, z)>0)` implies `compare(x, z)>0`.","2":"It must be that `compare(x, y)==0` implies that `sgn(compare(x, z)) == sgn(compare(y, z))` for all z.","3":"It must be that `compare(x, y)==0` implies that `x.equals(y)`."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102713,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nList<String> hex = Arrays.asList(\"30\", \"8\", \"3A\", \"FF\");\nCollections.sort(hex);\nSystem.out.println(hex);\n\\end{verbatim}","choices":{"0":"`[8, 30, 3A, FF]`","1":"`[30, 3A, 8, FF]`","2":"`[FF, 8, 3A, 30]`","3":"An exception is thrown at runtime."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102714,"difficulty":"medium","type":"single","question":"Examine this code:\n\\begin{verbatim}\nclass Student {\n    Integer id;\n    Student(Integer id) { this.id = id; }\n    public String toString() { return \"\" + id; }\n}\n// ... in a method\nSet<Student> students = new TreeSet<>((s1, s2) -> s2.id - s1.id);\nstudents.add(new Student(10));\nstudents.add(new Student(2));\nstudents.add(new Student(5));\nSystem.out.println(students);\n\\end{verbatim}\nWhat is the output?","choices":{"0":"`[2, 5, 10]`","1":"`[10, 5, 2]`","2":"`[10, 2, 5]`","3":"The code does not compile because Student does not implement Comparable."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102715,"difficulty":"medium","type":"multiple","question":"Which `Comparator` static methods can be used to create a `Comparator` instance?","choices":{"0":"`Comparator.comparing(Function)`","1":"`Comparator.naturalOrder()`","2":"`Comparator.reversed()`","3":"`Comparator.thenComparing(Comparator)`"},"answers":["0","1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102716,"difficulty":"medium","type":"single","question":"Given a sorted list, what is the return value of `Collections.binarySearch(list, key)` if the list contains duplicate elements equal to the key?","choices":{"0":"The index of the first occurrence of the key.","1":"The index of the last occurrence of the key.","2":"An index of any of the elements equal to the key; not guaranteed which one.","3":"A negative value, because duplicates are not allowed for binary search."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102717,"difficulty":"medium","type":"single","question":"What is the primary reason for using `Comparator.comparing()` over a traditional lambda like `(a, b) -> a.getField().compareTo(b.getField())`?","choices":{"0":"It is always faster.","1":"It improves type inference and readability, and allows for easier chaining.","2":"It is the only way to sort by a field of a generic type.","3":"It automatically handles `null` values."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102718,"difficulty":"medium","type":"single","question":"What is the output?\n\\begin{verbatim}\nList<Integer> list = Arrays.asList(10, 20, 30, 40, 50);\nint index = Collections.binarySearch(list, 35);\nSystem.out.println(index);\n\\end{verbatim}","choices":{"0":"`3`","1":"`-3`","2":"`4`","3":"`-4`"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102719,"difficulty":"medium","type":"single","question":"Which of these expressions will cause a compilation error?\n\\begin{verbatim}\nclass Animal { int age; public int getAge() { return age; } }\nclass Dog extends Animal {}\nList<Dog> dogs = new ArrayList<>();\n\\end{verbatim}","choices":{"0":"`Comparator<Animal> c1 = (a1, a2) -> a1.getAge() - a2.getAge(); dogs.sort(c1);`","1":"`Comparator<Dog> c2 = (d1, d2) -> d1.getAge() - d2.getAge(); dogs.sort(c2);`","2":"`Comparator<Object> c3 = (o1, o2) -> 1; dogs.sort(c3);`","3":"`Comparator<String> c4 = (s1, s2) -> s1.length() - s2.length(); dogs.sort(c4);`"},"answers":["3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102720,"difficulty":"medium","type":"single","question":"Which code snippet correctly sorts a `List<String> list` by length, and then alphabetically for strings of the same length?","choices":{"0":"`list.sort(Comparator.comparing(String::length).compareTo(Comparator.naturalOrder()));`","1":"`list.sort(Comparator.comparing(String::length).and(Comparator.naturalOrder()));`","2":"`list.sort(Comparator.comparing(String::length).thenComparing(Comparator.naturalOrder()));`","3":"`list.sort(Comparator.comparing(String::length) + Comparator.naturalOrder());`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102721,"difficulty":"hard","type":"single","question":"Given the following code:\n\\begin{verbatim}\nclass Person {\n    String name;\n    Person(String name) { this.name = name; }\n    public boolean equals(Object o) {\n        // implementation not shown\n    }\n}\nComparator<Person> comp = (p1, p2) -> 0;\nSet<Person> people = new TreeSet<>(comp);\npeople.add(new Person(\"Alice\"));\npeople.add(new Person(\"Bob\"));\npeople.add(new Person(\"Alice\"));\nSystem.out.println(people.size());\n\\end{verbatim}\nWhat is the output?","choices":{"0":"`1`","1":"`2`","2":"`3`","3":"The output is unpredictable."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102722,"difficulty":"hard","type":"single","question":"What is the result of this code?\n\\begin{verbatim}\nComparator<Integer> c = (i1, i2) -> i1 - i2;\nList<Integer> list = Arrays.asList(Integer.MAX_VALUE, Integer.MIN_VALUE);\nCollections.sort(list, c);\nSystem.out.println(list);\n\\end{verbatim}","choices":{"0":"`[-2147483648, 2147483647]`","1":"`[2147483647, -2147483648]`","2":"An `ArithmeticException` is thrown.","3":"The list remains unchanged."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102723,"difficulty":"hard","type":"multiple","question":"Which of the following method references are valid `Comparator`s for a `List<String>`?","choices":{"0":"`String::compareToIgnoreCase`","1":"`String::length`","2":"`Object::equals`","3":"`Integer::compare`"},"answers":["0","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102724,"difficulty":"hard","type":"single","question":"Examine the following code. Which line will cause a compilation failure?\n\\begin{verbatim}\n1.  List<Number> nums = new ArrayList<>();\n2.  Comparator<Object> comp = (a, b) -> 0;\n3.  Collections.sort(nums, comp); // Line 3\n4.  \n5.  List<Integer> ints = new ArrayList<>();\n6.  Comparator<Number> comp2 = (a, b) -> 0;\n7.  Collections.sort(ints, comp2); // Line 7\n\\end{verbatim}","choices":{"0":"Line 3","1":"Line 7","2":"Both Line 3 and Line 7","3":"Neither line causes a compilation failure."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102725,"difficulty":"hard","type":"single","question":"What is the output?\n\\begin{verbatim}\nclass Legacy {\n    public int compareTo(Object o) { return 0; }\n}\nclass Generic extends Legacy implements Comparable<Generic> {\n}\n// in a method\nComparable c = new Generic();\nSystem.out.println(c.compareTo(\"test\"));\n\\end{verbatim}","choices":{"0":"`0`","1":"A `ClassCastException` is thrown at runtime.","2":"The code does not compile.","3":"The output is unpredictable."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102726,"difficulty":"hard","type":"multiple","question":"A `Comparator` is defined as `(o1, o2) -> 1`. Which statements are true if this comparator is used to sort a `List`?","choices":{"0":"The sort operation is guaranteed to be stable.","1":"The sort order of the list is not guaranteed.","2":"This `Comparator` violates the `Comparator` contract.","3":"Using this comparator with `Collections.sort()` may result in an `IllegalArgumentException`."},"answers":["1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102727,"difficulty":"hard","type":"single","question":"Consider the `Employee` class sorted by `id` by default.\n\\begin{verbatim}\nclass Employee implements Comparable<Employee> { /* sorts by id */ }\nList<Employee> emps = /* list of employees sorted by id */;\nComparator<Employee> nameComp = /* sorts by name */; \n// ... Code to search\n\\end{verbatim}\nTo find an employee named \"Jones\" using `binarySearch`, which line of code is required?","choices":{"0":"`Collections.binarySearch(emps, new Employee(\"Jones\"), nameComp);`","1":"`Collections.sort(emps, nameComp);` followed by `Collections.binarySearch(emps, new Employee(\"Jones\"), nameComp);`","2":"`Collections.binarySearch(emps, new Employee(\"Jones\"));`","3":"It is not possible to search by name if the natural order is by id."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102728,"difficulty":"hard","type":"single","question":"What is the output of this code?\n\\begin{verbatim}\nList<String> data = new ArrayList<>();\ndata.add(\"C\");\ndata.add(null);\ndata.add(\"A\");\ndata.sort(Comparator.nullsFirst(Comparator.naturalOrder()));\nSystem.out.println(data);\n\\end{verbatim}","choices":{"0":"`[null, A, C]`","1":"`[A, C, null]`","2":"A `NullPointerException` is thrown.","3":"The code does not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102729,"difficulty":"hard","type":"multiple","question":"Which of the following code blocks will compile successfully?","choices":{"0":"\\begin{verbatim}\nList<String> list = new ArrayList<>();\nComparator<CharSequence> c = (cs1, cs2) -> 0;\nlist.sort(c);\n\\end{verbatim}","1":"\\begin{verbatim}\nList<Object> list = new ArrayList<>();\nComparator<String> c = (s1, s2) -> 0;\nlist.sort(c);\n\\end{verbatim}","2":"\\begin{verbatim}\nList<Integer> list = new ArrayList<>();\nlist.sort(Comparator.comparing(i -> i));\n\\end{verbatim}","3":"\\begin{verbatim}\nList<Integer> list = new ArrayList<>();\nComparator<Number> c = (n1, n2) -> 0;\nlist.sort(c);\n\\end{verbatim}"},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102800,"difficulty":"easy","type":"single","question":"What is the direct superclass of the `java.lang.Exception` class?","choices":{"0":"`java.lang.Object`","1":"`java.lang.Error`","2":"`java.lang.RuntimeException`","3":"`java.lang.Throwable`"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102801,"difficulty":"easy","type":"single","question":"Which of the following is an example of an unchecked exception?","choices":{"0":"`java.io.IOException`","1":"`java.sql.SQLException`","2":"`java.lang.NullPointerException`","3":"`java.io.FileNotFoundException`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102802,"difficulty":"easy","type":"multiple","question":"Which of the following must be handled or declared by the calling method?","choices":{"0":"Any class that extends `java.lang.Error`.","1":"Any class that extends `java.lang.RuntimeException`.","2":"Any class that extends `java.lang.Exception` but not `java.lang.RuntimeException`.","3":"Any class that extends `java.lang.Throwable`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102803,"difficulty":"easy","type":"single","question":"What is the primary characteristic of classes that extend `java.lang.Error`?","choices":{"0":"They represent errors caused by bad programming, like null pointer access.","1":"They represent serious, unrecoverable problems with the JVM that applications should not try to handle.","2":"They are checked exceptions that must be caught.","3":"They must be thrown explicitly by the programmer."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102804,"difficulty":"easy","type":"single","question":"What is the result of the following code snippet?\n\\begin{verbatim}\nString s = null;\nSystem.out.println(s.length());\n\\end{verbatim}","choices":{"0":"It prints `0`.","1":"It prints `null`.","2":"It throws `NullPointerException`.","3":"It does not compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102805,"difficulty":"easy","type":"single","question":"The term 'checked exception' refers to exceptions that the compiler checks for. What are the two valid ways to satisfy the compiler?","choices":{"0":"Catch the exception or throw the exception.","1":"Handle the exception with a `try-catch` block or declare it with a `throws` clause.","2":"Ignore the exception or log the exception.","3":"Fix the code that causes the exception or rethrow the exception."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102806,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\nimport java.io.IOException;\npublic class Test {\n    public static void main(String[] args) {\n        m1();\n    }\n    static void m1() {\n        System.out.println(\"In m1\");\n        new IOException(\"Problem\");\n        System.out.println(\"Finished m1\");\n    }\n}\n\\end{verbatim}","choices":{"0":"A compilation error occurs because `IOException` is a checked exception.","1":"It compiles and prints `In m1` followed by `Finished m1`.","2":"It compiles, but throws an `IOException` at runtime.","3":"It compiles and prints `In m1`."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102807,"difficulty":"medium","type":"single","question":"Given the following method, which of the calling code snippets will compile?\n\\begin{verbatim}\nvoid readFile() throws java.io.IOException {}\n\\end{verbatim}","choices":{"0":"\\begin{verbatim}\npublic void caller() {\n    readFile();\n}\n\\end{verbatim}","1":"\\begin{verbatim}\npublic void caller() throws Exception {\n    readFile();\n}\n\\end{verbatim}","2":"\\begin{verbatim}\npublic void caller() throws RuntimeException {\n    readFile();\n}\n\\end{verbatim}","3":"\\begin{verbatim}\npublic void caller() throws java.sql.SQLException {\n    readFile();\n}\n\\end{verbatim}"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102808,"difficulty":"medium","type":"multiple","question":"Which of the following are checked exceptions? (Choose all that apply)","choices":{"0":"`ArrayIndexOutOfBoundsException`","1":"`ClassNotFoundException`","2":"`IllegalArgumentException`","3":"`NumberFormatException`","4":"`IOException`"},"answers":["1","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102809,"difficulty":"medium","type":"single","question":"What is the output of the following code snippet?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            Object[] arr = new String[2];\n            arr[0] = \"Hello\";\n            arr[1] = 100; // Line 5\n            System.out.println(\"End of try\");\n        } catch (Exception e) {\n            System.out.println(e.getClass().getSimpleName());\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`NumberFormatException`","1":"`IllegalArgumentException`","2":"`ArrayStoreException`","3":"`ClassCastException`"},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102810,"difficulty":"medium","type":"single","question":"If a superclass method is declared as `public void process() throws java.io.IOException`, which of the following overridden methods in a subclass is NOT valid?","choices":{"0":"`public void process() {}`","1":"`public void process() throws java.io.FileNotFoundException {}`","2":"`public void process() throws java.lang.Exception {}`","3":"`public void process() throws java.io.IOException {}`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102811,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile the following code?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(\"Start\");\n        if (true) {\n            throw new java.io.IOException();\n        }\n        System.out.println(\"End\");\n    }\n}\n\\end{verbatim}","choices":{"0":"It compiles but fails at runtime with an `IOException`.","1":"It compiles and prints `Start`.","2":"It fails to compile.","3":"It compiles and prints `Start` followed by `End`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102812,"difficulty":"medium","type":"single","question":"A method is declared as `public void calculate() throws Exception`. Inside the method, the only exception that can actually be thrown is a `NullPointerException`. What is true about this code?","choices":{"0":"The code will not compile because `NullPointerException` is not an `Exception`.","1":"The code will compile, and callers of `calculate()` are not required to handle any exceptions.","2":"The code will compile, but callers of `calculate()` must handle or declare `Exception` (or a superclass).","3":"The code will not compile because `NullPointerException` is a `RuntimeException` and cannot be thrown when `Exception` is declared."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102813,"difficulty":"medium","type":"multiple","question":"Which of the following statements about `RuntimeException` are true? (Choose all that apply)","choices":{"0":"They are also known as unchecked exceptions.","1":"They are direct subclasses of `java.lang.Throwable`.","2":"The compiler does not require them to be caught or declared.","3":"They typically represent bugs or programmatic errors.","4":"`java.io.IOException` is a `RuntimeException`."},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102814,"difficulty":"medium","type":"single","question":"What is the output of the following program?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            System.out.print(\"A\");\n            badMethod();\n            System.out.print(\"B\");\n        } catch (Error e) {\n            System.out.print(\"C\");\n        } finally {\n            System.out.print(\"D\");\n        }\n        System.out.print(\"E\");\n    }\n    public static void badMethod() {\n        throw new StackOverflowError();\n    }\n}\n\\end{verbatim}","choices":{"0":"`ACDE`","1":"`ADE`","2":"`ACD` followed by a program crash.","3":"`AD` followed by a program crash."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102815,"difficulty":"medium","type":"single","question":"What is the relationship between `AssertionError` and `Exception`?","choices":{"0":"`AssertionError` extends `Exception`.","1":"`Exception` extends `AssertionError`.","2":"They are siblings, both extending `Throwable`.","3":"There is no inheritance relationship; `AssertionError` extends `Error`."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102816,"difficulty":"medium","type":"single","question":"Which exception will be thrown by the following code?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        String[] array = {\"a\", \"b\"};\n        System.out.println(array[getIdx()].length());\n    }\n    public static int getIdx() {\n        return 2;\n    }\n}\n\\end{verbatim}","choices":{"0":"`NullPointerException`","1":"`ArrayIndexOutOfBoundsException`","2":"`StringIndexOutOfBoundsException`","3":"No exception is thrown."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102817,"difficulty":"medium","type":"single","question":"Which best describes the purpose of creating custom checked exceptions?","choices":{"0":"To handle bugs in the code that are specific to the application.","1":"To represent recoverable error conditions that are specific to the application's domain, forcing callers to deal with them.","2":"To replace standard JVM exceptions like `NullPointerException` with more descriptive types.","3":"To avoid using `try-catch` blocks by creating exceptions that don't need to be handled."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102818,"difficulty":"medium","type":"multiple","question":"Given `class MyException extends RuntimeException {}`, which of the following method signatures are valid? (Choose all that apply)","choices":{"0":"`void methodA() throws MyException {}`","1":"`void methodB() throws RuntimeException {}`","2":"`void methodC() {}`","3":"`void methodD() throws Exception {}`"},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102819,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile and run this class?\n\\begin{verbatim}\npublic class Test {\n    public void go() throws java.sql.SQLException {\n        System.out.println(\"Going\");\n    }\n    public static void main(String[] args) {\n        Test t = new Test();\n        t.go();\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation fails because `main` must declare `throws java.sql.SQLException`.","1":"Compilation fails for a different reason.","2":"It compiles and prints `Going`.","3":"It compiles but throws `java.sql.SQLException` at runtime."},"answers":["0"],"attempts":1,"attempted":true,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102820,"difficulty":"medium","type":"single","question":"Consider the following class hierarchy: `class E1 extends Exception {}`, `class E2 extends E1 {}`. What is the result of this code?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            throw new E2();\n        } catch (E1 e) {\n            System.out.println(\"Caught E1\");\n        } catch (Exception e) {\n            System.out.println(\"Caught Exception\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"A compilation error occurs.","1":"`Caught E1`","2":"`Caught Exception`","3":"`Caught E1` followed by `Caught Exception`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102821,"difficulty":"hard","type":"single","question":"A superclass method declares `public void compute() throws RuntimeException`. Which of the following is a valid override in a subclass?","choices":{"0":"`public void compute() throws Exception {}`","1":"`public void compute() throws Throwable {}`","2":"`public void compute() throws java.io.IOException {}`","3":"`public void compute() throws NullPointerException {}`"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102822,"difficulty":"hard","type":"single","question":"What is the outcome of compiling and running the following code?\n\\begin{verbatim}\npublic class Test {\n    static {\n        if (true) {\n            throw new NullPointerException(\"Error in static block\");\n        }\n    }\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n}\n\\end{verbatim}","choices":{"0":"A `NullPointerException` is caught by the JVM and `Hello` is printed.","1":"The program prints `Hello` and exits normally.","2":"An `ExceptionInInitializerError` is thrown, and the program terminates.","3":"A `NullPointerException` is thrown, and the program terminates."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102823,"difficulty":"hard","type":"multiple","question":"Given `class Base { public void run() throws java.io.IOException, NumberFormatException {} }`, which of the following are valid overrides in a subclass `Derived extends Base`? (Choose all that apply)","choices":{"0":"`public void run() throws java.io.FileNotFoundException {}`","1":"`public void run() {}`","2":"`public void run() throws java.io.IOException, ClassCastException {}`","3":"`public void run() throws Exception {}`","4":"`public void run() throws java.sql.SQLException {}`"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102824,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile this code?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        throw new String(\"This is an error\");\n    }\n}\n\\end{verbatim}","choices":{"0":"It compiles, but throws a `ClassCastException` at runtime.","1":"It compiles, but throws a `RuntimeException` at runtime.","2":"It compiles, but throws an `Error` at runtime.","3":"It does not compile."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102825,"difficulty":"hard","type":"single","question":"Consider the following interface and class. What is the result?\n\\begin{verbatim}\ninterface Walker {\n    default void walk() throws java.io.IOException {}\n}\nclass Runner implements Walker {\n    public void walk() throws Exception {\n        System.out.println(\"Running!\");\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation succeeds.","1":"Compilation fails because `Runner.walk()` throws `Exception`, which is not a subtype of `IOException`.","2":"Compilation fails because a default method cannot throw a checked exception.","3":"Compilation fails because an implementing method cannot have a `throws` clause if the default method has one."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102826,"difficulty":"hard","type":"multiple","question":"Which of these code blocks will fail to compile?","choices":{"0":"\\begin{verbatim}\nfinal boolean b = false;\nif (b) { throw new java.io.IOException(); }\n\\end{verbatim}","1":"\\begin{verbatim}\nif (Math.random() > 2) { \n    throw new java.io.IOException();\n}\n\\end{verbatim}","2":"\\begin{verbatim}\ntry { \n    throw new java.io.IOException();\n} catch (java.io.FileNotFoundException e) {}\n\\end{verbatim}","3":"\\begin{verbatim}\ntry {\n    throw new java.lang.Error(); \n} catch (java.lang.Exception e) {}\n\\end{verbatim}"},"answers":["1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102827,"difficulty":"hard","type":"single","question":"What is the output of this code?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        System.out.print(check());\n    }\n    static String check() {\n        try {\n            throw new RuntimeException();\n        } catch (Exception e) {\n            throw new NullPointerException();\n        } finally {\n            // This block does not complete normally\n            throw new IllegalArgumentException(); \n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`RuntimeException` is thrown.","1":"`NullPointerException` is thrown.","2":"`IllegalArgumentException` is thrown.","3":"The code does not compile."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102828,"difficulty":"hard","type":"single","question":"Examine the following code. Which exception is ultimately propagated out of the `danger()` method call?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String... args) {\n        try {\n            danger();\n        } catch(Throwable t) {\n            System.out.println(t.getClass().getSimpleName());\n        }\n    }\n    static void danger() {\n        try {\n            throw new Exception(\"A\");\n        } finally {\n            try {\n                throw new Error(\"B\");\n            } catch (Error e) {\n                throw new RuntimeException(\"C\");\n            }\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`Exception`","1":"`Error`","2":"`RuntimeException`","3":"The code does not compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102829,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile this code?\n\\begin{verbatim}\nclass MyResource implements AutoCloseable {\n    public void close() throws Exception {\n        throw new Exception(\"Closing\");\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n        try (MyResource r = new MyResource()) {\n            // empty try\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"It compiles successfully.","1":"It does not compile because the `try` block is empty.","2":"It does not compile because the `catch` or `finally` block is missing.","3":"It does not compile because `main` must handle or declare the `Exception` from `close()`."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102900,"difficulty":"easy","type":"single","question":"Which statement best describes the purpose of the `finally` block?","choices":{"0":"It executes only when an exception is thrown in the `try` block.","1":"It executes only when no exception is thrown in the `try` block.","2":"It is intended for code that must be executed to clean up resources, regardless of whether an exception occurs.","3":"It is an alternative to a `catch` block for handling all types of exceptions."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102901,"difficulty":"easy","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            System.out.print(\"A\");\n            int x = 1 / 0;\n            System.out.print(\"B\");\n        } catch (ArithmeticException e) {\n            System.out.print(\"C\");\n        }\n        System.out.print(\"D\");\n    }\n}\n\\end{verbatim}","choices":{"0":"`ACD`","1":"`ABD`","2":"`A` followed by an `ArithmeticException`.","3":"`AC`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102902,"difficulty":"easy","type":"multiple","question":"Which of the following are valid constructs in Java? (Choose all that apply)","choices":{"0":"`try { ... }`","1":"`try { ... } catch (Exception e) { ... }`","2":"`try { ... } finally { ... }`","3":"`try { ... } catch (Exception e) { ... } finally { ... }`","4":"`try { ... } finally { ... } catch (Exception e) { ... }`"},"answers":["1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102903,"difficulty":"easy","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            System.out.print(\"Inside Try\");\n        } finally {\n            System.out.print(\" Inside Finally\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`Inside Try`","1":"`Inside Finally`","2":"`Inside Try Inside Finally`","3":"A compilation error."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102904,"difficulty":"easy","type":"single","question":"If an exception is thrown inside a `try` block, and there is no matching `catch` block, but there is a `finally` block, what happens?","choices":{"0":"The `finally` block is skipped and the program terminates.","1":"The `finally` block executes, and then the exception is propagated up the call stack.","2":"A compilation error occurs.","3":"The `finally` block executes, and the program continues normally after the `finally` block."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102905,"difficulty":"easy","type":"single","question":"Which code snippet will fail to compile?","choices":{"0":"`try {} catch(Exception e) {}`","1":"`try {} finally {}`","2":"`catch(Exception e) {} finally {}`","3":"`try {} catch(Exception e) {} finally {}`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102906,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile this code?\n\\begin{verbatim}\nimport java.io.*;\npublic class Test {\n    public void process() {\n        try {\n            // some code\n        } catch (Exception e) {\n            System.out.println(\"Exception\");\n        } catch (IOException e) {\n            System.out.println(\"IOException\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation succeeds.","1":"Compilation fails because `IOException` has already been caught by the `catch` block for `Exception`.","2":"Compilation fails because `IOException` is a checked exception.","3":"Compilation fails because the `try` block is empty."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102907,"difficulty":"medium","type":"single","question":"What is the output of this code?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        System.out.print(getValue());\n    }\n    public static int getValue() {\n        try {\n            return 10;\n        } finally {\n            System.out.print(\"Finally \");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`10 Finally`","1":"`Finally 10`","2":"`10`","3":"`Finally`"},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102908,"difficulty":"medium","type":"multiple","question":"Under which circumstances will a `finally` block NOT be executed? (Choose all that apply)","choices":{"0":"An exception is thrown in the `try` block and caught by a matching `catch` block.","1":"`System.exit(0);` is called in the `try` block.","2":"The thread executing the `try-finally` block is killed.","3":"An `Error` like `OutOfMemoryError` occurs.","4":"The `try` block contains an infinite loop."},"answers":["1","2","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102909,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile this method?\n\\begin{verbatim}\nimport java.io.IOException;\npublic void processFile() {\n    try {\n        throw new IOException();\n    } finally {\n        System.out.println(\"Closing file\");\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation succeeds, but the method must be called from within a `try-catch` block.","1":"Compilation succeeds, and the exception is silently ignored.","2":"Compilation fails because the checked `IOException` is not handled or declared.","3":"Compilation fails because a `try` with only a `finally` block cannot throw an exception."},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102910,"difficulty":"medium","type":"single","question":"What is printed to the console?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            System.out.print(\"A\");\n            throw new NullPointerException();\n        } catch (ArithmeticException e) {\n            System.out.print(\"B\");\n        } finally {\n            System.out.print(\"C\");\n        }\n        System.out.print(\"D\");\n    }\n}\n\\end{verbatim}","choices":{"0":"`ACD`","1":"`AC`","2":"`ABC`","3":"`AC` followed by a `NullPointerException`."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102911,"difficulty":"medium","type":"single","question":"What is the value returned by the `test()` method?\n\\begin{verbatim}\npublic int test() {\n    int i = 1;\n    try {\n        return i++;\n    } finally {\n        ++i;\n    }\n}\n\\end{verbatim}","choices":{"0":"`1`","1":"`2`","2":"`3`","3":"The code does not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102912,"difficulty":"medium","type":"single","question":"Which code snippet is a valid way to catch multiple specific exceptions?","choices":{"0":"`catch (IOException, SQLException e) { ... }`","1":"`catch (IOException | SQLException e) { ... }`","2":"`catch (IOException e | SQLException e) { ... }`","3":"`catch (e: IOException | SQLException) { ... }`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102913,"difficulty":"medium","type":"multiple","question":"Given `class E1 extends Exception {}` and `class E2 extends E1 {}`, which of the following `try-catch` structures are valid? (Choose all that apply)","choices":{"0":"`try{} catch(E1 e){} catch(E2 e){}`","1":"`try{} catch(E2 e){} catch(E1 e){}`","2":"`try{} catch(E1 e | E2 e){}`","3":"`try{} catch(Exception e){} catch(E1 e){}`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102914,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        String s = \"\";\n        try {\n            s += \"t\";\n            throw new Exception();\n        } catch (Exception e) {\n            s += \"c\";\n        } finally {\n            s += \"f\";\n        }\n        s += \"a\";\n        System.out.println(s);\n    }\n}\n\\end{verbatim}","choices":{"0":"`tfa`","1":"`tcfa`","2":"`tca`","3":"`tcf`"},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102915,"difficulty":"medium","type":"single","question":"What happens when this code is executed?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            System.out.println(\"A\");\n        } catch (Exception e) {\n            System.out.println(\"B\");\n        } finally {\n            System.out.println(\"C\");\n        }\n        System.out.println(\"D\");\n    }\n}\n\\end{verbatim}","choices":{"0":"`A B C D`","1":"`A C D`","2":"`A B D`","3":"`A D`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102916,"difficulty":"medium","type":"single","question":"Which statement is true about the `try-with-resources` statement?","choices":{"0":"It can be used with any Java object.","1":"It requires a `finally` block to close the resource.","2":"It automatically calls the `close()` method on resources that implement `java.lang.AutoCloseable`.","3":"It can only manage one resource at a time."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102917,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile and run this code?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        try\n            System.out.println(\"Try\");\n        finally\n            System.out.println(\"Finally\");\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `Try` followed by `Finally`.","1":"It prints `Try`.","2":"It prints `Finally`.","3":"It fails to compile."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102918,"difficulty":"medium","type":"multiple","question":"Which of the following are unchecked exceptions and do not need to be caught or declared? (Choose all that apply)","choices":{"0":"`java.io.IOException`","1":"`java.lang.ArrayIndexOutOfBoundsException`","2":"`java.lang.ClassCastException`","3":"`java.sql.SQLException`","4":"`java.lang.NumberFormatException`"},"answers":["1","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102919,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            System.out.print(\"1\");\n            int value = Integer.parseInt(\"a\");\n            System.out.print(\"2\");\n        } catch (NumberFormatException e) {\n            System.out.print(\"3\");\n            return;\n        } finally {\n            System.out.print(\"4\");\n        }\n        System.out.print(\"5\");\n    }\n}\n\\end{verbatim}","choices":{"0":"`1345`","1":"`13`","2":"`134`","3":"`1245`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102920,"difficulty":"medium","type":"single","question":"Which of these exception types can be caught by a `catch (RuntimeException e)` block?","choices":{"0":"`java.io.IOException`","1":"`java.lang.Error`","2":"`java.lang.NullPointerException`","3":"`java.lang.Exception`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102921,"difficulty":"hard","type":"single","question":"What is the value returned by the method `check()`?\n\\begin{verbatim}\npublic class Test {\n    public static int check() {\n        try {\n            return 1;\n        } catch (Exception e) {\n            return 2;\n        } finally {\n            return 3;\n        }\n    }\n    public static void main(String[] args) {\n        System.out.println(check());\n    }\n}\n\\end{verbatim}","choices":{"0":"`1`","1":"`2`","2":"`3`","3":"The code does not compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102922,"difficulty":"hard","type":"single","question":"What is the output of the following program?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            System.out.print(\"Try \");\n            System.exit(0);\n        } finally {\n            System.out.print(\"Finally\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`Try`","1":"`Finally`","2":"`Try Finally`","3":"The code does not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102923,"difficulty":"hard","type":"multiple","question":"Which of the following lines of code, if placed after the `finally` block, would be considered unreachable code by the compiler?\n\\begin{verbatim}\npublic int test() {\n    try {\n        return 1;\n    } finally {\n        return 2;\n    }\n    // Where to place the code?\n}\n\\end{verbatim}","choices":{"0":"`return 3;`","1":"`System.out.println(\"Hello\");`","2":"`int x = 5;`","3":"None of the above. The code after `finally` is always reachable."},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102924,"difficulty":"hard","type":"single","question":"What is the return value of the `getBuilder()` method?\n\\begin{verbatim}\npublic class Test {\n    public static StringBuilder getBuilder() {\n        StringBuilder sb = new StringBuilder(\"A\");\n        try {\n            return sb.append(\"B\");\n        } finally {\n            sb.append(\"C\");\n        }\n    }\n    public static void main(String[] args) {\n        System.out.println(getBuilder());\n    }\n}\n\\end{verbatim}","choices":{"0":"`A`","1":"`AB`","2":"`ABC`","3":"`AC`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102925,"difficulty":"hard","type":"single","question":"What is the result of executing this code?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            process();\n        } catch (Exception e) {\n            System.out.println(e.getMessage());\n        }\n    }\n    public static void process() {\n        try {\n            throw new RuntimeException(\"try\");\n        } finally {\n            throw new IllegalArgumentException(\"finally\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`try`","1":"`finally`","2":"A `RuntimeException` is printed to the console.","3":"The program crashes without printing anything."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102926,"difficulty":"hard","type":"multiple","question":"Which statements are true about a multi-catch block like `catch (IOException | SQLException e)`? (Choose all that apply)","choices":{"0":"The exception parameter `e` is implicitly final.","1":"The exceptions listed must not have a parent-child relationship.","2":"You can assign a new exception object to the parameter `e` inside the block.","3":"This syntax was introduced in Java 8."},"answers":["0","1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102927,"difficulty":"hard","type":"single","question":"What happens when this method is called?\n\\begin{verbatim}\npublic class Test {\n    public void go() {\n        try {\n            System.out.println(\"Trying\");\n            return;\n        } finally {\n            System.out.println(\"Finalizing\");\n            throw new RuntimeException(\"Error in finally\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"The method prints `Trying` and `Finalizing` and then returns normally.","1":"The method prints `Trying` and then returns normally.","2":"The method prints `Trying` and `Finalizing` and then completes abruptly with a `RuntimeException`.","3":"The code does not compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102928,"difficulty":"hard","type":"single","question":"What is the final output of this program?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            System.out.print(\"A\");\n            danger();\n        } catch (Exception e) {\n            System.out.print(\"B\");\n        } finally {\n            System.out.print(\"C\");\n        }\n    }\n    static void danger() {\n        try {\n            throw new Error();\n        } finally {\n            System.out.print(\"D\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`ADBC`","1":"`ADC`","2":"`AD` followed by an `Error` being thrown.","3":"`A` followed by an `Error` being thrown."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102929,"difficulty":"hard","type":"single","question":"An exception is thrown in a `try` block. A matching `catch` block executes and also throws a new exception. A `finally` block exists. What is the sequence of events?","choices":{"0":"`try` -> `catch` (throws new exception) -> execution stops, `finally` is skipped.","1":"`try` -> `catch` (throws new exception) -> `finally` executes -> new exception from `catch` is propagated.","2":"`try` -> `catch` (throws new exception) -> `finally` executes -> original exception from `try` is propagated.","3":"This scenario results in a compilation error."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103000,"difficulty":"easy","type":"single","question":"Which keyword is used in a method signature to declare that it might throw a particular type of exception?","choices":{"0":"`throw`","1":"`try`","2":"`catch`","3":"`throws`"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103001,"difficulty":"easy","type":"single","question":"Which code snippet correctly throws a new `IllegalArgumentException`?","choices":{"0":"`throws new IllegalArgumentException(\"Invalid input\");`","1":"`throw new IllegalArgumentException(\"Invalid input\");`","2":"`new IllegalArgumentException(\"Invalid input\");`","3":"`throw IllegalArgumentException(\"Invalid input\");`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103002,"difficulty":"easy","type":"single","question":"What is the primary difference between a checked and an unchecked exception in Java?","choices":{"0":"Checked exceptions are subclasses of `Error`, while unchecked exceptions are subclasses of `Exception`.","1":"Checked exceptions must be handled (in a `try-catch` block) or declared (in a `throws` clause), while unchecked exceptions do not have this requirement from the compiler.","2":"Unchecked exceptions must be handled (in a `try-catch` block) or declared (in a `throws` clause), while checked exceptions do not have this requirement.","3":"Checked exceptions can only be thrown by the JVM, while unchecked exceptions can be thrown by application code."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103003,"difficulty":"easy","type":"single","question":"Which is the correct way to define a custom checked exception class named `DataFormatException`?","choices":{"0":"`class DataFormatException extends RuntimeException { }`","1":"`class DataFormatException implements Throwable { }`","2":"`class DataFormatException extends Exception { }`","3":"`class DataFormatException extends Error { }`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103004,"difficulty":"easy","type":"single","question":"What is the output of the following code snippet?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            System.out.print(\"A\");\n            throw new RuntimeException(\"Error\");\n        } catch (RuntimeException e) {\n            System.out.print(\"B\");\n        }\n        System.out.print(\"C\");\n    }\n}\n\\end{verbatim}","choices":{"0":"`A`","1":"`AB`","2":"`ABC`","3":"`AC`","4":"The code does not compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103005,"difficulty":"easy","type":"multiple","question":"Which of the following are valid statements to throw an exception? (Choose all that apply)","choices":{"0":"`throw new NullPointerException();`","1":"`throw Exception;`","2":"`Exception e = new ArithmeticException(); throw e;`","3":"`throws new java.io.IOException();`"},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103006,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\nimport java.io.IOException;\n\npublic class Device {\n    public void turnOn() throws IOException {\n        throw new IOException(\"Device failed to start\");\n    }\n\n    public static void main(String[] args) {\n        Device d = new Device();\n        d.turnOn(); // line X\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles and runs, but throws an `IOException` at runtime.","1":"The code compiles and runs without any output or exception.","2":"A compilation error occurs at line X.","3":"The code compiles, but a `NullPointerException` is thrown at runtime."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103007,"difficulty":"medium","type":"single","question":"Given the following classes, what is the result of attempting to compile the `AdvancedCalculator` class?\n\\begin{verbatim}\nimport java.io.IOException;\n\nclass Calculator {\n    public void calculate() throws IOException { }\n}\n\nclass AdvancedCalculator extends Calculator {\n    @Override\n    public void calculate() throws Exception { // line Y\n        // ...\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation is successful.","1":"A compilation error occurs at line Y because an overriding method cannot throw new or broader checked exceptions.","2":"A compilation error occurs at line Y because `Exception` is an abstract class.","3":"A compilation error occurs at line Y because the `@Override` annotation is used incorrectly."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103008,"difficulty":"medium","type":"single","question":"Consider the code below. What is the result?\n\\begin{verbatim}\nimport java.io.*;\n\nclass Service {\n    void process() throws IOException { }\n}\n\nclass FastService extends Service {\n    @Override\n    void process() throws FileNotFoundException { // line Z\n        // ...\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"The code fails to compile because `FileNotFoundException` is unrelated to `IOException`.","2":"The code fails to compile at line Z because an overriding method cannot declare any checked exceptions.","3":"The code fails to compile at line Z because `FileNotFoundException` is a broader exception than `IOException`."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103009,"difficulty":"medium","type":"single","question":"What is the output of the following program?\n\\begin{verbatim}\nclass MyException extends Exception {}\n\npublic class TestFlow {\n    public static void main(String[] args) {\n        try {\n            System.out.print(\"1\");\n            processData();\n            System.out.print(\"2\");\n        } catch (MyException e) {\n            System.out.print(\"3\");\n        }\n        System.out.print(\"4\");\n    }\n\n    public static void processData() throws MyException {\n        System.out.print(\"A\");\n        throw new MyException();\n    }\n}\n\\end{verbatim}","choices":{"0":"`1A234`","1":"`1A34`","2":"`1A24`","3":"`134`","4":"Compilation fails."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103010,"difficulty":"medium","type":"single","question":"What happens when this code is executed?\n\\begin{verbatim}\nimport java.io.*;\n\npublic class Catcher {\n    public static void main(String[] args) {\n        try {\n            throw new FileNotFoundException();\n        } catch (IOException e) {\n            System.out.println(\"Caught IOException\");\n        } catch (Exception e) {\n            System.out.println(\"Caught Exception\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `Caught IOException`.","1":"It prints `Caught Exception`.","2":"It prints both `Caught IOException` and `Caught Exception`.","3":"A compilation error occurs because `FileNotFoundException` is not explicitly caught.","4":"A compilation error occurs because the second catch block is unreachable."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103011,"difficulty":"medium","type":"single","question":"What is the output of this code?\n\\begin{verbatim}\npublic class FinallyTest {\n    public static void main(String[] args) {\n        System.out.print(getValue());\n    }\n\n    public static int getValue() {\n        try {\n            System.out.print(\"A\");\n            throw new RuntimeException();\n        } catch (RuntimeException e) {\n            System.out.print(\"B\");\n            return 2;\n        } finally {\n            System.out.print(\"C\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`ABC2`","1":"`A2C`","2":"`AB2C`","3":"`AC` followed by a `RuntimeException`","4":"`ABC`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103012,"difficulty":"medium","type":"single","question":"What is the result of executing the following code?\n\\begin{verbatim}\npublic class UncaughtFinally {\n    public static void main(String[] args) {\n        try {\n            System.out.print(\"Start\");\n            int result = 5 / 0;\n            System.out.print(\"End\");\n        } finally {\n            System.out.print(\"Finally\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`StartEndFinally`","1":"`StartFinally`","2":"`StartFinally` followed by an `ArithmeticException`.","3":"`Start` followed by an `ArithmeticException`.","4":"The code does not compile."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103013,"difficulty":"medium","type":"single","question":"Which definition creates a custom unchecked exception?","choices":{"0":"`public class MyUnchecked extends Exception { }`","1":"`public class MyUnchecked extends Throwable { }`","2":"`public class MyUnchecked extends Error { }`","3":"`public class MyUnchecked extends RuntimeException { }`"},"answers":["3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103014,"difficulty":"medium","type":"single","question":"What is the outcome of running this `main` method?\n\\begin{verbatim}\npublic class TestCatch {\n    public static void main(String[] args) {\n        try {\n            System.out.print(\"T\");\n            throw new NullPointerException();\n        } catch (IllegalArgumentException e) {\n            System.out.print(\"C\");\n        } finally {\n            System.out.print(\"F\");\n        }\n        System.out.print(\"E\");\n    }\n}\n\\end{verbatim}","choices":{"0":"`TFE`","1":"`TCFE`","2":"`TF` followed by a `NullPointerException`.","3":"`T` followed by a `NullPointerException`.","4":"The code will not compile."},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103015,"difficulty":"medium","type":"single","question":"What is the result of the following code?\n\\begin{verbatim}\nclass BadInit {\n    BadInit() throws Exception {\n        throw new Exception(\"Failed to create\");\n    }\n}\n\npublic class ConstructorTest {\n    public static void main(String[] args) {\n        try {\n            BadInit b = new BadInit();\n            System.out.print(\"Created\");\n        } catch (Exception e) {\n            System.out.print(e.getMessage());\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`Created`","1":"`Failed to create`","2":"The code runs and prints nothing.","3":"A `NullPointerException` is printed.","4":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103016,"difficulty":"medium","type":"single","question":"Which code snippet correctly creates and throws a `SQLException` with a `cause`?\n\\begin{verbatim}\n// Assume 'ioe' is a previously caught IOException\nIOException ioe = new IOException(\"Disk Read Error\");\n\\end{verbatim}","choices":{"0":"`throw new SQLException(ioe, \"DB Error\");`","1":"`throw new SQLException(\"DB Error\").setCause(ioe);`","2":"`throw new SQLException(\"DB Error\", ioe);`","3":"`throw new SQLException(\"DB Error\").initCause(ioe);`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103017,"difficulty":"medium","type":"multiple","question":"Which of the following classes are direct or indirect subclasses of `RuntimeException`? (Choose all that apply)","choices":{"0":"`java.lang.ArrayIndexOutOfBoundsException`","1":"`java.io.IOException`","2":"`java.lang.ClassCastException`","3":"`java.sql.SQLException`","4":"`java.lang.IllegalArgumentException`"},"answers":["0","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103018,"difficulty":"medium","type":"multiple","question":"Given the base method signature `public void connect() throws java.io.IOException;`, which of the following are valid overrides in a subclass? (Choose all that apply)","choices":{"0":"`public void connect() throws java.io.FileNotFoundException;`","1":"`public void connect() throws Exception;`","2":"`public void connect();`","3":"`public void connect() throws java.io.IOException, java.sql.SQLException;`","4":"`public void connect() throws java.lang.RuntimeException;`"},"answers":["0","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103019,"difficulty":"medium","type":"multiple","question":"Which statements are true about creating custom exception classes in Java? (Choose all that apply)","choices":{"0":"A custom exception must extend `java.lang.Throwable` directly.","1":"It is a common convention to provide a no-arg constructor and a constructor that accepts a `String` message.","2":"To create a checked exception, the custom class must extend `java.lang.Exception` or one of its subclasses (that is not `RuntimeException`).","3":"To create an unchecked exception, the custom class must extend `java.lang.RuntimeException` or one of its subclasses.","4":"A custom exception class must be declared `final`."},"answers":["1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103020,"difficulty":"medium","type":"multiple","question":"What is true about the following code snippet? (Choose all that apply)\n\\begin{verbatim}\nclass E1 extends Exception { }\nclass E2 extends E1 { }\n\npublic class MultiCatch {\n    public static void main(String[] args) {\n        try {\n            throw new E2();\n        } catch (E1 e) {\n            System.out.println(\"Caught E1\");\n        } catch (Exception e) {\n            System.out.println(\"Caught Exception\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"The code will not compile.","1":"The code prints `Caught E1`.","2":"The code prints `Caught Exception`.","3":"If `throw new E1();` replaced `throw new E2();`, the output would be `Caught E1`.","4":"The second `catch` block is considered unreachable code by the compiler."},"answers":["1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103021,"difficulty":"hard","type":"single","question":"What is the result of executing the `main` method?\n\\begin{verbatim}\npublic class Suppressed {\n    public static void main(String[] args) {\n        try {\n            danger();\n        } catch (Exception e) {\n            System.out.println(e.getMessage());\n        }\n    }\n\n    static void danger() throws Exception {\n        try {\n            throw new IllegalStateException(\"In Try\");\n        } finally {\n            System.out.println(\"Finally\");\n            throw new RuntimeException(\"In Finally\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`Finally` is printed, then `In Try` is printed.","1":"`Finally` is printed, then `In Finally` is printed.","2":"`In Try` is printed.","3":"`In Finally` is printed.","4":"The code does not compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103022,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\npublic class StaticFail {\n    static {\n        if (true) {\n            throw new RuntimeException(\"Initialization failed\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles and prints `Hello`.","1":"The code does not compile.","2":"The code compiles, but throws a `RuntimeException` when run.","3":"The code compiles, but throws an `ExceptionInInitializerError` when run.","4":"The code compiles, but throws a `NoClassDefFoundError` when run."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103023,"difficulty":"hard","type":"single","question":"What is printed to the console when the following code is executed?\n\\begin{verbatim}\nclass Door implements AutoCloseable {\n    public Door() { System.out.print(\"O\"); }\n    public void close() throws Exception {\n        System.out.print(\"C\");\n        throw new Exception(\"Close\");\n    }\n}\n\npublic class TryWithResourcesTest {\n    public static void main(String[] args) {\n        try (Door d = new Door()) {\n            System.out.print(\"T\");\n            throw new Exception(\"Try\");\n        } catch (Exception e) {\n            System.out.print(\"E\");\n            System.out.print(e.getMessage());\n            for (Throwable t : e.getSuppressed()) {\n                System.out.print(t.getMessage());\n            }\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`OTECloseTry`","1":"`OTETryClose`","2":"`OTCECloseTry`","3":"`OTCETryClose`"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103024,"difficulty":"hard","type":"single","question":"What is the result of compiling this code?\n\\begin{verbatim}\nimport java.io.*;\n\npublic class CatchOrder {\n    public void process() {\n        try {\n            if (System.currentTimeMillis() % 2 == 0) {\n                throw new IOException();\n            } else {\n                throw new FileNotFoundException();\n            }\n        } catch (IOException e) { // line X\n            System.out.println(\"IO\");\n        } catch (FileNotFoundException e) { // line Y\n            System.out.println(\"File Not Found\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation succeeds.","1":"Compilation fails at line X.","2":"Compilation fails at line Y.","3":"Compilation fails at both line X and line Y."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103025,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run this code?\n\\begin{verbatim}\nimport java.io.IOException;\n\npublic class Caller {\n    void process() throws Exception { // line P\n        throw new IOException(\"IO\");\n    }\n\n    public static void main(String[] args) {\n        Caller c = new Caller();\n        try {\n            c.process();\n        } catch (IOException e) { // line M\n            System.out.println(\"Caught!\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation fails at line P.","1":"Compilation fails at line M.","2":"Compilation succeeds, but the `main` method must also declare `throws Exception`.","3":"Compilation succeeds, and `Caught!` is printed when run."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103026,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile the following code?\n\\begin{verbatim}\nimport java.io.IOException;\n\npublic class UnreachableThrow {\n    public void processData() throws IOException { // line X\n        try {\n            // some code that does not throw IOException\n            System.out.println(\"Processing\");\n        } catch (RuntimeException e) {\n            System.out.println(\"Runtime\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"A compilation error occurs at line X because `IOException` is a checked exception and is never thrown from the method body.","2":"A compilation error occurs because there is no `finally` block.","3":"A compilation error occurs because `RuntimeException` is not handled correctly."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103027,"difficulty":"hard","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\npublic class TrickyReturn {\n    public static void main(String[] args) {\n        System.out.println(check());\n    }\n\n    static String check() {\n        try {\n            System.out.print(\"A\");\n            throw new Exception();\n        } catch (Exception e) {\n            System.out.print(\"B\");\n            return \"From Catch\";\n        } finally {\n            System.out.print(\"C\");\n            return \"From Finally\";\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`ABCFrom Finally`","1":"`ABCFrom Catch`","2":"`ABFrom Finally`","3":"`ACFrom Finally`","4":"The code does not compile because of multiple return statements."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103028,"difficulty":"hard","type":"multiple","question":"Given the following exception hierarchy and code snippet, which `catch` clauses are valid if placed at `// CATCH HERE`? (Choose all that apply)\n\\begin{verbatim}\nclass E_A extends Exception {}\nclass E_B extends E_A {}\nclass E_C extends E_A {}\n// ...\ntry {\n    // code that can throw E_B or E_C\n} // CATCH HERE\n\\end{verbatim}","choices":{"0":"`catch (E_B | E_C e) { }`","1":"`catch (E_A | E_B e) { }`","2":"`catch (E_B e) { } catch (E_C e) { }`","3":"`catch (E_A e) { } catch (E_C e) { }`","4":"`catch (Exception | E_A e) { }`"},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103029,"difficulty":"hard","type":"multiple","question":"Consider the following code. Which statements about its execution are true? (Choose all that apply)\n\\begin{verbatim}\nclass Resource implements AutoCloseable {\n    String name;\n    public Resource(String name) throws Exception {\n        this.name = name;\n        if (\"bad\".equals(name)) throw new Exception(\"ConstructorFail\");\n        System.out.print(name + \":Open \");\n    }\n    public void close() throws Exception {\n        System.out.print(name + \":Close \");\n        throw new Exception(name + \":CloseFail\");\n    }\n}\n\npublic class ComplexClose {\n    public static void main(String[] args) {\n        try (Resource r1 = new Resource(\"R1\")) {\n            throw new RuntimeException(\"TryFail\");\n        } catch (Exception e) {\n            System.out.print(\"Caught:\" + e.getMessage());\n            for(Throwable t : e.getSuppressed()) {\n                System.out.print(\" Suppressed:\" + t.getMessage());\n            }\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"The primary exception caught by the `catch` block will have the message `R1:CloseFail`.","1":"The primary exception caught by the `catch` block will have the message `TryFail`.","2":"A suppressed exception with the message `R1:CloseFail` will be attached to the primary exception.","3":"The output will contain `R1:Open`.","4":"If the `Resource` constructor was called with `new Resource(\"bad\")`, the `catch` block would catch an exception with the message `ConstructorFail` and there would be no suppressed exceptions."},"answers":["1","2","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103100,"difficulty":"easy","type":"single","question":"To be used in a `try-with-resources` statement, a class must implement which interface?","choices":{"0":"`java.io.Serializable`","1":"`java.lang.AutoCloseable`","2":"`java.lang.Runnable`","3":"`java.io.Closeable` is required; `AutoCloseable` is not sufficient."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103101,"difficulty":"easy","type":"single","question":"What is the name of the method that is automatically invoked by a `try-with-resources` statement to clean up a resource?","choices":{"0":"`finalize()`","1":"`dispose()`","2":"`close()`","3":"`cleanup()`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103102,"difficulty":"easy","type":"single","question":"Which code snippet demonstrates the correct basic syntax for a `try-with-resources` statement?","choices":{"0":"`try (new FileReader(\"f.txt\")) { ... }`","1":"`try { FileReader f = new FileReader(\"f.txt\"); ... } with (f)`","2":"`try (FileReader f = new FileReader(\"f.txt\")) { ... }`","3":"`try-with-resources (FileReader f = new FileReader(\"f.txt\")) { ... }`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103103,"difficulty":"easy","type":"single","question":"What is the output of the following code? Assume `MyResource` is a valid `AutoCloseable` class.\n\\begin{verbatim}\nclass MyResource implements AutoCloseable {\n    public MyResource() { System.out.print(\"C\"); }\n    public void close() { System.out.print(\"X\"); }\n    public void use() { System.out.print(\"U\"); }\n}\npublic class Test {\n    public static void main(String[] args) {\n        try (MyResource r = new MyResource()) {\n            r.use();\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`CUX`","1":"`UCX`","2":"`CXU`","3":"The code does not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103104,"difficulty":"easy","type":"single","question":"Can a `try-with-resources` statement have `catch` and `finally` blocks?","choices":{"0":"No, it is a replacement for `try-catch-finally`.","1":"Yes, it can have both `catch` and `finally` blocks.","2":"It can have a `catch` block, but not a `finally` block.","3":"It can have a `finally` block, but not a `catch` block."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103105,"difficulty":"easy","type":"multiple","question":"Which of the following statements about `try-with-resources` are true? (Choose all that apply)","choices":{"0":"The resource is implicitly `final` (or effectively final).","1":"The resource declared is available in the `catch` and `finally` blocks associated with the `try-with-resources` statement.","2":"The `close()` method is called before any `catch` or `finally` blocks are executed.","3":"Multiple resources can be declared, separated by semicolons."},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103106,"difficulty":"medium","type":"single","question":"What is the order of closing when multiple resources are declared in a `try-with-resources` statement?","choices":{"0":"The order is not guaranteed.","1":"They are closed in the order they are declared.","2":"They are closed in the reverse order of their declaration.","3":"They are closed in parallel."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103107,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nclass R implements AutoCloseable {\n    String name;\n    R(String n) { name = n; System.out.print(name + \"C\"); }\n    public void close() { System.out.print(name + \"X\"); }\n}\npublic class TestOrder {\n    public static void main(String[] args) {\n        try (R r1 = new R(\"A\"); R r2 = new R(\"B\")) {\n            System.out.print(\"T\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`ACBCBXTXA`","1":"`ACBCBTXAXB`","2":"`ACBCTBXA`","3":"`ACBCBTAB`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103108,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\nclass Pen {}\npublic class TestResource {\n    public static void main(String[] args) {\n        try (Pen p = new Pen()) { // line X\n            System.out.println(\"Write\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles and prints `Write`.","1":"The code compiles but throws a `ClassCastException` at runtime.","2":"A compilation error occurs at line X.","3":"The code compiles but throws an `IllegalStateException` at runtime."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103109,"difficulty":"medium","type":"single","question":"What is the result of the following code snippet?\n\\begin{verbatim}\nimport java.util.Scanner;\npublic class TestScope {\n    public static void main(String[] args) {\n        try (Scanner s = new Scanner(System.in)) {\n            s.nextLine();\n        }\n        s.close(); // line Y\n    }\n}\n\\end{verbatim}","choices":{"0":"A compilation error occurs at line Y.","1":"The code compiles but throws an `IllegalStateException` because the resource is already closed.","2":"The code compiles and runs successfully.","3":"The code compiles but throws a `NullPointerException`."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103110,"difficulty":"medium","type":"single","question":"What is the execution order of the blocks in the following code, assuming no exceptions are thrown?\n\\begin{verbatim}\ntry (MyResource r = new MyResource()) { // implicit close at C\n    // Block T (try)\n} catch (Exception e) {\n    // Block E (catch)\n} finally {\n    // Block F (finally)\n}\n\\end{verbatim}","choices":{"0":"T, E, C, F","1":"T, F, C","2":"T, C, F","3":"C, T, F"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103111,"difficulty":"medium","type":"single","question":"What is the key difference between the `close()` method in `java.io.Closeable` and `java.lang.AutoCloseable`?","choices":{"0":"There is no difference; `Closeable` is just a marker interface.","1":"`Closeable.close()` throws `IOException`, while `AutoCloseable.close()` throws `Exception`.","2":"`AutoCloseable.close()` is `protected`, while `Closeable.close()` is `public`.","3":"`AutoCloseable.close()` is idempotent, while `Closeable.close()` is not required to be."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103112,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nclass BadClose implements AutoCloseable {\n    public void close() throws Exception {\n        System.out.print(\"C\");\n        throw new Exception(\"From Close\");\n    }\n}\npublic class TestCloseException {\n    public static void main(String[] args) {\n        try (BadClose b = new BadClose()) {\n            System.out.print(\"T\");\n        } catch (Exception e) {\n            System.out.print(\"E:\" + e.getMessage());\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`TCE:From Close`","1":"`CT`","2":"`CTE:`","3":"The code does not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103113,"difficulty":"medium","type":"single","question":"What happens if resource initialization throws an exception?\n\\begin{verbatim}\nclass BadResource implements AutoCloseable {\n    public BadResource() throws Exception {\n        throw new Exception(\"Init Fail\");\n    }\n    public void close() { /* does nothing */ }\n}\npublic class TestInitFail {\n    public static void main(String[] args) {\n        try (BadResource br = new BadResource()) {\n            System.out.println(\"In Try\");\n        } catch (Exception e) {\n            System.out.println(e.getMessage());\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`Init Fail`","1":"`In Try` followed by `Init Fail`","2":"A `NullPointerException` is thrown.","3":"The code fails to compile."},"answers":["0"],"attempts":1,"attempted":true,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103114,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile this Java 8 code?\n\\begin{verbatim}\nimport java.io.*;\npublic class OldSchool {\n    public static void main(String[] args) throws IOException {\n        FileWriter fw = new FileWriter(\"a.txt\");\n        try (fw) { // line X\n            fw.write(\"test\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"A compilation error occurs at line X because the resource must be declared and initialized within the parentheses.","2":"The code compiles but throws an `IllegalStateException` at runtime.","3":"A compilation error occurs at line X because `FileWriter` does not implement `AutoCloseable`."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103115,"difficulty":"medium","type":"single","question":"What is the output of the code?\n\\begin{verbatim}\nclass Resource implements AutoCloseable {\n    public void close() { System.out.print(\"Close\"); }\n}\n\npublic class TryFinally {\n    public static void main(String[] args) {\n        try (Resource r = new Resource()) {\n            System.out.print(\"Try \");\n        } finally {\n            System.out.print(\"Finally\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`Try FinallyClose`","1":"`Try CloseFinally`","2":"`FinallyTry Close`","3":"The code does not compile."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103116,"difficulty":"medium","type":"single","question":"Given the `try-with-resources` statement below, what can be said about the variable `r`?\n\\begin{verbatim}\ntry (MyResource r = new MyResource()) {\n    r.process();\n}\n\\end{verbatim}","choices":{"0":"`r` is effectively final and cannot be reassigned within the `try` block.","1":"`r` must be explicitly declared `final` to be used.","2":"`r` can be reassigned to a new `MyResource` object within the `try` block.","3":"`r`'s scope extends to the `catch` and `finally` blocks."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103117,"difficulty":"medium","type":"multiple","question":"Which of the following code snippets will compile successfully in Java 8? (Choose all that apply)","choices":{"0":"`try (java.io.FileReader r = new java.io.FileReader(\"f.txt\")) { }`","1":"`try (final java.io.FileReader r = new java.io.FileReader(\"f.txt\")) { }`","2":"`try (java.io.FileReader r1 = new java.io.FileReader(\"f1.txt\"); java.io.FileWriter w1 = new java.io.FileWriter(\"f2.txt\")) { }`","3":"`java.io.FileReader r = new java.io.FileReader(\"f.txt\"); try(r) { }`","4":"`try (java.lang.String s = \"hello\") { }`"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103118,"difficulty":"medium","type":"multiple","question":"Which of the following interfaces directly extend `java.lang.AutoCloseable`? (Choose all that apply)","choices":{"0":"`java.io.Closeable`","1":"`java.util.stream.Stream`","2":"`java.sql.Connection`","3":"`java.util.Scanner`"},"answers":["0","1","2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103119,"difficulty":"medium","type":"multiple","question":"You have a class `Device` that implements `AutoCloseable`. Its `close()` method can throw a `SQLException`. What is true about using it in a `try-with-resources` statement? (Choose all that apply)\n\\begin{verbatim}\n// public class Device implements AutoCloseable {\n//   public void close() throws SQLException { ... }\n// }\n\\end{verbatim}","choices":{"0":"The code `try (Device d = new Device()) {}` will not compile unless it is inside a method that declares `throws SQLException`.","1":"The code `try (Device d = new Device()) {}` will not compile unless it is followed by a `catch` block that can handle `SQLException`.","2":"The compiler error will point to the `close()` method declaration in the `Device` class.","3":"If the `try` block is surrounded by a `catch(Exception e)` block, the code will compile."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103120,"difficulty":"medium","type":"multiple","question":"Given the code below, which statements are true? (Choose all that apply)\n\\begin{verbatim}\nclass R implements AutoCloseable {\n    public void close() throws Exception { System.out.print(\"C\"); }\n}\npublic class Test {\n    public static void main(String[] args) throws Exception {\n        try (R r = new R()) {\n            System.out.print(\"T\");\n            throw new java.io.IOException();\n        } catch (java.io.IOException e) {\n            System.out.print(\"I\");\n        } finally {\n            System.out.print(\"F\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"The output is `TCIF`.","1":"The output is `TIF` followed by an `Exception` from the `close()` method.","2":"The code will not compile.","3":"The `IOException` is caught by the `catch` block.","4":"The `close()` method is called before the `catch` block executes."},"answers":["0","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103121,"difficulty":"hard","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nclass Door implements AutoCloseable {\n    public void close() throws Exception {\n        System.out.print(\"D\");\n        throw new Exception(\"From Close\");\n    }\n}\npublic class Suppress {\n    public static void main(String[] args) {\n        try (Door d = new Door()) {\n            System.out.print(\"T\");\n            throw new RuntimeException(\"From Try\");\n        } catch (Exception e) {\n            System.out.print(\"C:\" + e.getMessage());\n            System.out.print(\":S:\" + e.getSuppressed()[0].getMessage());\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`TDC:From Close:S:From Try`","1":"`TDC:From Try:S:From Close`","2":"`TDC:From Try`","3":"The code does not compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103122,"difficulty":"hard","type":"single","question":"An exception is thrown from a `try-with-resources` block, another from the resource's `close()` method, and a third from the `finally` block. Which exception is ultimately propagated to the caller?","choices":{"0":"The exception from the `try` block.","1":"The exception from the `close()` method.","2":"The exception from the `finally` block.","3":"A new wrapper exception containing all three."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103123,"difficulty":"hard","type":"single","question":"What is the output of this code?\n\\begin{verbatim}\nclass R implements AutoCloseable {\n    public R() throws Exception { throw new Exception(\"R_INIT\"); }\n    public void close() { System.out.print(\"R_CLOSE\"); }\n}\npublic class TestFinal {\n    public static void main(String[] args) {\n        try (R r = new R()) {\n            System.out.print(\"TRY\");\n        } catch (Exception e) {\n            System.out.print(e.getMessage());\n        } finally {\n            System.out.print(\"_FINAL\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`R_INIT_FINAL`","1":"`TRY_R_CLOSE_FINAL`","2":"`R_INIT_R_CLOSE_FINAL`","3":"`R_INIT`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103124,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile this code?\n\\begin{verbatim}\nclass Box implements AutoCloseable {\n    private void close() throws Exception {}\n}\npublic class TestPrivateClose {\n    public static void main(String[] args) {\n        try (Box b = new Box()) {\n            // ...\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles but fails at runtime with an `IllegalAccessException`.","1":"A compilation error occurs because the `close()` method is private.","2":"The code compiles and runs without issue, as the JVM can access the private method.","3":"A compilation error occurs because the `main` method doesn't handle the `Exception` from `close()`."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103125,"difficulty":"hard","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nclass One implements AutoCloseable {\n    public void close() { System.out.print(\"1\"); }\n}\nclass Two implements AutoCloseable {\n    public void close() { System.out.print(\"2\"); throw new RuntimeException(); }\n}\npublic class TestTwoExceptions {\n    public static void main(String[] args) {\n        try (One o = new One(); Two t = new Two()) {\n            System.out.print(\"T\");\n        } catch (Exception e) {\n            System.out.print(\"C\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`T21C`","1":"`T2` followed by a `RuntimeException`","2":"`T12C`","3":"`T` followed by a `RuntimeException`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103126,"difficulty":"hard","type":"single","question":"Examine the following code. Which exception is caught by the `catch` block?\n\\begin{verbatim}\nclass Fail implements AutoCloseable {\n    public void close() throws IllegalStateException {\n        throw new IllegalStateException(\"Close\");\n    }\n}\npublic class TestAllFails {\n    public static void main(String[] args) throws Exception {\n        try (Fail f = new Fail()) {\n            throw new java.io.IOException(\"Try\");\n        } \n    }\n}\n\\end{verbatim}","choices":{"0":"`java.io.IOException`","1":"`java.lang.IllegalStateException`","2":"A wrapper exception containing both.","3":"Neither, the code does not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103127,"difficulty":"hard","type":"single","question":"What is the result of compiling this code?\n\\begin{verbatim}\nimport java.io.IOException;\n\npublic class BadTWR {\n    void go() {\n        try (MyResource r = new MyResource()) {\n            r.use();\n        }\n    }\n}\n\ninterface MyResource extends AutoCloseable {\n    void use();\n    void close() throws IOException;\n}\n\\end{verbatim}","choices":{"0":"Compilation succeeds.","1":"Compilation fails because `MyResource` is an interface and cannot be instantiated.","2":"Compilation fails because the `go()` method does not handle or declare `IOException`.","3":"Compilation fails because an interface cannot extend `AutoCloseable`."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103128,"difficulty":"hard","type":"multiple","question":"Which of the following are valid `try-with-resources` constructs in Java 8? (Choose all that apply)\n\\begin{verbatim}\n// Assume R1 and R2 are valid AutoCloseable classes\n\\end{verbatim}","choices":{"0":"`try (R1 r1 = new R1();) { } // Note the trailing semicolon`","1":"`try (R1 r1 = new R1()) ; // Note the empty try block`","2":"`try (R1 r1 = new R1(); R2 r2 = null) { }`","3":"`try (R1 r1 = new R1()) { r1 = new R1(); }`"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1031,"topic":"Try-with-Resources","questionId":103129,"difficulty":"hard","type":"multiple","question":"Given the code below, which statements are true? (Choose all that apply)\n\\begin{verbatim}\nclass E1 extends Exception { public E1(String m) { super(m); } }\nclass E2 extends Exception { public E2(String m) { super(m); } }\nclass R implements AutoCloseable {\n    public void close() throws E1 {\n        throw new E1(\"From Close\");\n    }\n}\npublic class TestFinalFail {\n    public static void main(String[] args) {\n        try (R r = new R()) {\n            throw new E2(\"From Try\");\n        } catch (Exception e) {\n            System.out.println(e.getMessage());\n            for (Throwable t : e.getSuppressed()) {\n                System.out.println(t.getMessage());\n            }\n        } finally {\n            throw new RuntimeException(\"From Finally\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`From Try` and `From Close` will be printed to the console.","1":"The program terminates due to an uncaught `RuntimeException`.","2":"The `catch` block will execute before the `finally` block begins execution.","3":"The exception thrown from the `finally` block will have two suppressed exceptions attached to it.","4":"The program will not compile."},"answers":["1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103200,"difficulty":"easy","type":"single","question":"Which of the following is a fundamental requirement for an interface to be considered a functional interface?","choices":{"0":"It must be annotated with `@FunctionalInterface`.","1":"It must declare exactly one abstract method.","2":"It must not contain any default or static methods.","3":"It must extend `java.lang.Functional`."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103201,"difficulty":"easy","type":"single","question":"Which of the following is the most concise, valid lambda expression that implements the `Runnable` interface?","choices":{"0":"`() -> System.out.println(\"Run\");`","1":"`() -> { return; }`","2":"`() -> {}`","3":"`void () -> System.out.println(\"Run\");`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103202,"difficulty":"easy","type":"single","question":"What is the purpose of the `@FunctionalInterface` annotation?","choices":{"0":"It is required for an interface to be treated as a functional interface by the JVM at runtime.","1":"It is a marker interface that provides special methods for lambda creation.","2":"It is an optional annotation that instructs the compiler to generate an error if the annotated interface is not a valid functional interface.","3":"It provides metadata to the garbage collector about lambda instances."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103203,"difficulty":"easy","type":"single","question":"Given the functional interface below, which lambda expression is a valid implementation?\n\\begin{verbatim}\n@FunctionalInterface\ninterface Calculator {\n    int operate(int a, int b);\n}\n\\end{verbatim}","choices":{"0":"`a, b -> a + b;`","1":"(a, b) -> a * b;","2":"`(int a, int b) -> { return a - b; }`","3":"`int (a, b) -> a / b;`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103204,"difficulty":"easy","type":"single","question":"Which standard functional interface from the `java.util.function` package is best suited to represent a function that takes one argument and produces a boolean result?","choices":{"0":"`Function<T, Boolean>`","1":"`Consumer<T>`","2":"`Predicate<T>`","3":"`Supplier<Boolean>`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103205,"difficulty":"easy","type":"multiple","question":"Which of the following are valid lambda expressions? (Choose all that apply)","choices":{"0":"`() -> \"Hello\"`","1":"`x -> x * x`","2":"`(String s) -> { System.out.println(s); }`","3":"`x, y -> x + y`"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103206,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\ninterface Greeter { String greet(String name); }\n\npublic class Test {\n    public static void main(String[] args) {\n        Greeter g = (s) -> \"Hello, \" + s;\n        System.out.println(g.greet(\"World\"));\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles and prints `Hello, World`.","1":"A compilation error occurs because the parameter type is not specified.","2":"A compilation error occurs because the `return` keyword is missing.","3":"The code compiles and prints `Hello, s`."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103207,"difficulty":"medium","type":"single","question":"What is the result of executing the following code?\n\\begin{verbatim}\nimport java.util.function.Predicate;\n\npublic class CheckString {\n    public static void main(String[] args) {\n        Predicate<String> p = (s) -> s.isEmpty();\n        System.out.println(p.test(\"\"));\n    }\n}\n\\end{verbatim}","choices":{"0":"`true`","1":"`false`","2":"A `NullPointerException` is thrown.","3":"The code does not compile."},"answers":["0"],"attempts":1,"attempted":true,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103208,"difficulty":"medium","type":"single","question":"Which of the following statements about a lambda's access to local variables from the enclosing scope is true?","choices":{"0":"A lambda can access and modify any local variable from the enclosing scope.","1":"A lambda can only access local variables that are declared `final`.","2":"A lambda can access local variables that are `final` or `effectively final`.","3":"A lambda can access local variables, but it receives a copy, so modifications are not visible outside the lambda."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103209,"difficulty":"medium","type":"single","question":"What is the result of the following code snippet?\n\\begin{verbatim}\npublic class TestScope {\n    public static void main(String[] args) {\n        int count = 10;\n        Runnable r = () -> {\n            // count++; // line X\n            System.out.println(count);\n        };\n        r.run();\n    }\n}\n\\end{verbatim}","choices":{"0":"If line X is uncommented, the code fails to compile.","1":"If line X is uncommented, the code compiles and prints `11`.","2":"With line X commented out, the code prints `10`.","3":"With line X commented out, the code fails to compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103210,"difficulty":"medium","type":"single","question":"How is the `this` keyword interpreted inside a lambda expression?","choices":{"0":"`this` refers to the lambda expression itself.","1":"`this` refers to the instance of the functional interface.","2":"`this` is lexically scoped; it refers to the `this` of the enclosing class.","3":"Using `this` inside a lambda expression is a compilation error."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103211,"difficulty":"medium","type":"single","question":"What is the output of this code?\n\\begin{verbatim}\nimport java.util.function.UnaryOperator;\n\npublic class OperatorTest {\n    public static void main(String[] args) {\n        UnaryOperator<Integer> square = (x) -> x * x;\n        System.out.println(square.apply(5));\n    }\n}\n\\end{verbatim}","choices":{"0":"`5`","1":"`10`","2":"`25`","3":"The code does not compile."},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103212,"difficulty":"medium","type":"single","question":"Consider the following interface. Why does it fail to compile?\n\\begin{verbatim}\n@FunctionalInterface\ninterface Processor<T> {\n    void process(T t);\n    boolean equals(Object obj);\n}\n\\end{verbatim}","choices":{"0":"A functional interface cannot be generic.","1":"A functional interface cannot declare a method that has the same signature as a public method in `java.lang.Object`.","2":"The code compiles successfully.","3":"The abstract method `equals` does not count towards the single abstract method count, so the code compiles.","4":"The annotation is misplaced."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103213,"difficulty":"medium","type":"single","question":"What is the result of the following code?\n\\begin{verbatim}\nimport java.util.function.Supplier;\n\npublic class TestSupplier {\n    public static void main(String[] args) {\n        Supplier<String> s = () -> { return \"Java\"; };\n        System.out.println(s.get());\n    }\n}\n\\end{verbatim}","choices":{"0":"`Java`","1":"The code prints the memory address of the `Supplier` object.","2":"The code does not compile because of the curly braces.","3":"A `NullPointerException` is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103214,"difficulty":"medium","type":"single","question":"Which of the following lambda expressions is NOT a valid implementation for `BinaryOperator<String>`?","choices":{"0":"`(s1, s2) -> s1 + s2`","1":"`(s1, s2) -> s1.concat(s2)`","2":"`(String s1, String s2) -> { return s1.toUpperCase(); }`","3":"`(s1, s2) -> \"Hello\"`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103215,"difficulty":"medium","type":"single","question":"What is printed by the following code?\n\\begin{verbatim}\nimport java.util.function.Function;\n\npublic class Chain {\n    public static void main(String[] args) {\n        Function<String, Integer> f1 = s -> s.length();\n        Function<Integer, Boolean> f2 = i -> i > 5;\n\n        System.out.println(f1.andThen(f2).apply(\"Java 8\"));\n    }\n}\n\\end{verbatim}","choices":{"0":"`true`","1":"`false`","2":"`6`","3":"The code does not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103216,"difficulty":"medium","type":"single","question":"What happens when you try to compile this interface?\n\\begin{verbatim}\n@FunctionalInterface\ninterface Broken {\n    void one();\n    void two();\n}\n\\end{verbatim}","choices":{"0":"It compiles, but cannot be used by a lambda expression.","1":"It fails to compile because it has more than one abstract method.","2":"It compiles, but only the `one()` method can be implemented by a lambda.","3":"It compiles because the annotation is just a suggestion."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103217,"difficulty":"medium","type":"multiple","question":"Which of the following are valid ways to write a lambda expression that takes a `String` and returns its length? (Choose all that apply)","choices":{"0":"`s -> s.length()`","1":"`(String s) -> s.length()`","2":"`(var s) -> s.length()`","3":"`(String s) -> { return s.length(); }`","4":"`String s -> s.length()`"},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103218,"difficulty":"medium","type":"multiple","question":"Which of these interfaces from `java.util.function` are valid functional interfaces? (Choose all that apply)","choices":{"0":"`Consumer<T>`","1":"`Predicate<T>`","2":"`Comparable<T>`","3":"`Supplier<T>`","4":"`Function<T, R>`"},"answers":["0","1","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103219,"difficulty":"medium","type":"multiple","question":"What is true about the following functional interface definition? (Choose all that apply)\n\\begin{verbatim}\n@FunctionalInterface\npublic interface Converter<F, T> {\n    T convert(F from);\n    static <F, T> Converter<F, T> from(Function<F, T> func) {\n        return (from) -> func.apply(from);\n    }\n    default void doNothing() {}\n}\n\\end{verbatim}","choices":{"0":"This is a valid functional interface.","1":"The `static` method makes this an invalid functional interface.","2":"The `default` method makes this an invalid functional interface.","3":"This interface can be implemented by the lambda `x -> String.valueOf(x)` if `F` is `Integer` and `T` is `String`."},"answers":["0","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103220,"difficulty":"medium","type":"multiple","question":"Given the code snippet, which assignments at `// line X` will compile? (Choose all that apply)\n\\begin{verbatim}\nimport java.util.function.*;\npublic class Assignments {\n    // line X\n}\n\\end{verbatim}","choices":{"0":"`Predicate<String> p = s -> s.length;`","1":"`Function<Integer, String> f = i -> { return i > 0 ? \"+\" : \"-\"; };`","2":"`Consumer<Integer> c = System.out::println;`","3":"`Supplier<Integer> s = new Random().nextInt();`"},"answers":["1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103221,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\nimport java.util.function.*;\npublic class Overload {\n    void invoke(Runnable r) { System.out.println(\"Runnable\"); }\n    void invoke(Supplier<String> s) { System.out.println(\"Supplier\"); }\n\n    public static void main(String[] args) {\n        Overload o = new Overload();\n        o.invoke(() -> \"Done\");\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `Runnable`.","1":"It prints `Supplier`.","2":"The code fails to compile due to an ambiguous method call.","3":"It prints `Runnable` and `Supplier`."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103222,"difficulty":"hard","type":"single","question":"What is the result of this code?\n\\begin{verbatim}\n@FunctionalInterface\ninterface Thrower {\n    void run() throws java.io.IOException;\n}\n\npublic class TestException {\n    public static void main(String[] args) {\n        Thrower t = () -> { throw new java.io.IOException(); }; // line X\n        t.run(); // line Y\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation fails at line X.","1":"Compilation fails at line Y.","2":"The code compiles and throws an `IOException` at runtime.","3":"The code compiles but throws an `UndeclaredThrowableException`."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103223,"difficulty":"hard","type":"single","question":"What will be printed to the console?\n\\begin{verbatim}\nimport java.util.function.IntPredicate;\n\npublic class Logic {\n    public static void main(String[] args) {\n        IntPredicate isEven = i -> i % 2 == 0;\n        IntPredicate isPositive = i -> i > 0;\n\n        System.out.println(isEven.and(isPositive).test(6));\n        System.out.println(isEven.or(isPositive.negate()).test(-3));\n    }\n}\n\\end{verbatim}","choices":{"0":"`true` followed by `true`","1":"`true` followed by `false`","2":"`false` followed by `true`","3":"`false` followed by `false`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103224,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile the following code?\n\\begin{verbatim}\nimport java.io.Serializable;\n\n@FunctionalInterface\ninterface Task extends Serializable {\n    void execute();\n}\n\npublic class SerializationTest {\n    public static void main(String[] args) {\n        Task task = () -> System.out.println(\"Executing\");\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles without issue.","1":"A compilation error occurs because lambdas cannot be assigned to `Serializable` types.","2":"A compilation error occurs because `Task` is not a valid functional interface.","3":"The code compiles, but will throw a `NotSerializableException` if serialization is attempted on a non-capturing lambda."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103225,"difficulty":"hard","type":"single","question":"Why does this code fail to compile?\n\\begin{verbatim}\nimport java.util.function.Function;\n\npublic class Ambiguous {\n    static void apply(Function<String, Integer> f) {}\n    static void apply(Function<String, String> f) {}\n\n    public static void main(String[] args) {\n        apply(s -> s.toLowerCase()); // line X\n    }\n}\n\\end{verbatim}","choices":{"0":"The lambda expression `s -> s.toLowerCase()` is invalid.","1":"The type of `s` cannot be inferred by the compiler.","2":"The return type of the lambda is ambiguous for the overloaded `apply` method.","3":"The code compiles because the compiler chooses the most specific `apply` method."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103226,"difficulty":"hard","type":"single","question":"What is the result of the following code?\n\\begin{verbatim}\nimport java.util.function.Function;\n\npublic class TrickyThis {\n    private String value = \"Enclosing\";\n\n    public Function<String, String> create() {\n        return x -> this.value + \":\" + x;\n    }\n\n    public static void main(String[] args) {\n        TrickyThis t = new TrickyThis();\n        System.out.println(t.create().apply(\"Lambda\"));\n    }\n}\n\\end{verbatim}","choices":{"0":"`Enclosing:Lambda`","1":"`Lambda:Enclosing`","2":"A compilation error occurs due to the use of `this`.","3":"A `NullPointerException` is thrown at runtime."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103227,"difficulty":"hard","type":"single","question":"Which of the following assignments will cause a compilation error?\n\\begin{verbatim}\nimport java.util.function.*;\nimport java.io.IOException;\n\\end{verbatim}","choices":{"0":"`Function<String, Integer> f = s -> { if(s==null) throw new IOException(); return s.length(); };`","1":"`Runnable r = () -> { try { Thread.sleep(100); } catch (Exception e) {} };`","2":"`Predicate<String> p = (final String s) -> s.isEmpty();`","3":"`Object o = (Runnable) () -> System.out.println(\"Hi\");`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103228,"difficulty":"hard","type":"multiple","question":"Which of the following are true statements about lambda expressions and functional interfaces? (Choose all that apply)","choices":{"0":"A lambda expression can implement an interface with two abstract methods if one of them is an override of a public method from `java.lang.Object`.","1":"The type of a lambda expression is determined at compile time based on its target type.","2":"A lambda can be cast to `java.lang.Object`.","3":"A lambda expression has its own `this` scope, separate from the enclosing class.","4":"A functional interface can extend another interface, even if the parent interface is not a functional interface, as long as the child interface has only one abstract method."},"answers":["0","1","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103229,"difficulty":"hard","type":"multiple","question":"Which of the following functional interface declarations will compile successfully? (Choose all that apply)","choices":{"0":"`@FunctionalInterface interface A { int m(); default int n() {return 0;} }`","1":"`@FunctionalInterface interface B extends A { }`","2":"`@FunctionalInterface interface C { <T> T m(T t); }`","3":"`@FunctionalInterface interface D extends java.util.Comparator { }`","4":"`@FunctionalInterface interface E { void m(); String toString(); }`"},"answers":["0","1","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103300,"difficulty":"easy","type":"single","question":"What is the output of the following code snippet? This question tests your understanding of the immutability of `java.time` objects.\n\\begin{verbatim}\nimport java.time.LocalDate;\n\npublic class DateTest {\n    public static void main(String[] args) {\n        LocalDate date = LocalDate.of(2025, 8, 2);\n        date.plusDays(10);\n        System.out.println(date);\n    }\n}\n\\end{verbatim}","choices":{"0":"`2025-08-02`","1":"`2025-08-12`","2":"The code fails to compile.","3":"A `DateTimeException` is thrown at runtime."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103301,"difficulty":"easy","type":"single","question":"Which code snippet correctly creates a `LocalTime` object representing 1:30 PM (13:30)?\n\\begin{verbatim}\n// Assume imports are correct\n\\end{verbatim}","choices":{"0":"`LocalTime time = new LocalTime(13, 30);`","1":"`LocalTime time = LocalTime.of(1, 30, \"PM\");`","2":"`LocalTime time = LocalTime.of(13, 30);`","3":"`LocalTime time = LocalTime.parse(\"1:30 PM\");`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103302,"difficulty":"easy","type":"single","question":"What is the output of the following code snippet? Pay attention to how the `java.time` API handles month-end adjustments.\n\\begin{verbatim}\nimport java.time.LocalDateTime;\n\npublic class DateTimeTest {\n    public static void main(String[] args) {\n        LocalDateTime dt = LocalDateTime.of(2025, 1, 31, 10, 0);\n        dt = dt.plusMonths(1);\n        System.out.println(dt);\n    }\n}\n\\end{verbatim}","choices":{"0":"`2025-02-28T10:00`","1":"`2025-03-03T10:00`","2":"`2025-03-02T10:00`","3":"A `DateTimeException` is thrown at runtime."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103303,"difficulty":"easy","type":"single","question":"What is the output of the following code? This question highlights a common pitfall with static factory methods.\n\\begin{verbatim}\nimport java.time.Period;\n\npublic class PeriodTest {\n    public static void main(String[] args) {\n        Period p = Period.ofYears(2).ofMonths(3);\n        System.out.println(p);\n    }\n}\n\\end{verbatim}","choices":{"0":"`P2Y3M`","1":"`P3M`","2":"`P2Y`","3":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103304,"difficulty":"easy","type":"single","question":"Which code snippet correctly calculates the duration between two `LocalTime` objects?\n\\begin{verbatim}\nimport java.time.Duration;\nimport java.time.LocalTime;\n// ...\nLocalTime t1 = LocalTime.of(9, 0);\nLocalTime t2 = LocalTime.of(10, 30);\n// INSERT CODE HERE\n\\end{verbatim}","choices":{"0":"`Duration d = Duration.between(t1, t2);`","1":"`Period p = Period.between(t1, t2);`","2":"`Duration d = t2.minus(t1);`","3":"The code does not compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103305,"difficulty":"easy","type":"multiple","question":"Which of the following classes are part of the `java.time` package and represent date and/or time information without a time zone? (Choose all that apply)","choices":{"0":"`LocalDate`","1":"`LocalTime`","2":"`LocalDateTime`","3":"`ZonedDateTime`","4":"`java.util.Date`","5":"`Instant`"},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103320,"difficulty":"medium","type":"single","question":"What is the output of the following code snippet? This is a classic test of immutability.\n\\begin{verbatim}\nimport java.time.LocalDate;\nimport java.time.Period;\n\npublic class DateTest {\n    public static void main(String[] args) {\n        LocalDate date = LocalDate.of(2025, 5, 10);\n        Period p = Period.ofDays(5);\n        date.plus(p);\n        System.out.println(date);\n    }\n}\n\\end{verbatim}","choices":{"0":"`2025-05-15`","1":"`2025-05-10`","2":"`2025-05-05`","3":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103321,"difficulty":"medium","type":"single","question":"What is the result of executing the following code? This question tests knowledge of predefined formatters.\n\\begin{verbatim}\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\n\npublic class FormatTest {\n    public static void main(String[] args) {\n        LocalDateTime dt = LocalDateTime.of(2025, 8, 2, 14, 30);\n        String formatted = dt.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME);\n        System.out.println(formatted);\n    }\n}\n\\end{verbatim}","choices":{"0":"`2025-08-02 14:30`","1":"`2025-08-02T14:30`","2":"`2025-08-02T14:30:00`","3":"A `DateTimeFormatException` is thrown."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103322,"difficulty":"medium","type":"single","question":"What is the output of the following code? This question assesses your knowledge of default parsing formats.\n\\begin{verbatim}\nimport java.time.LocalDate;\n\npublic class ParseTest {\n    public static void main(String[] args) {\n        String dateStr = \"2025-08-02\";\n        LocalDate d1 = LocalDate.parse(dateStr);\n        LocalDate d2 = LocalDate.of(2025, 8, 2);\n        System.out.println(d1.equals(d2));\n    }\n}\n\\end{verbatim}","choices":{"0":"`true`","1":"`false`","2":"The code fails to compile.","3":"A runtime exception is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103323,"difficulty":"medium","type":"single","question":"What is the result of executing the following code snippet? This question tests the applicability of `Period` vs. `Duration`.\n\\begin{verbatim}\nimport java.time.LocalTime;\nimport java.time.Period;\n\npublic class TimePeriodTest {\n    public static void main(String[] args) {\n        LocalTime time = LocalTime.of(10, 0);\n        Period period = Period.ofDays(1);\n        System.out.println(time.plus(period));\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `10:00`.","1":"The code fails to compile.","2":"An `UnsupportedTemporalTypeException` is thrown at runtime.","3":"It prints the time for the next day, `10:00`."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103324,"difficulty":"medium","type":"single","question":"What is the result of executing the following code? Pay close attention to the year.\n\\begin{verbatim}\nimport java.time.LocalDate;\n\n// ...\nLocalDate.of(2025, 2, 29);\n\\end{verbatim}","choices":{"0":"It creates a `LocalDate` for `2025-02-28`.","1":"It creates a `LocalDate` for `2025-03-01`.","2":"The code fails to compile.","3":"It throws a `DateTimeException` at runtime."},"answers":["3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103325,"difficulty":"medium","type":"single","question":"What is the output of this code snippet, which combines a `LocalDate` and `LocalTime`?\n\\begin{verbatim}\nimport java.time.LocalDate;\nimport java.time.LocalTime;\nimport java.time.LocalDateTime;\n\npublic class CombineTest {\n    public static void main(String[] args) {\n        LocalDate date = LocalDate.of(2025, 11, 20);\n        LocalTime time = LocalTime.of(18, 0);\n        LocalDateTime dt = time.atDate(date);\n        System.out.println(dt);\n    }\n}\n\\end{verbatim}","choices":{"0":"`2025-11-20T18:00`","1":"`18:00T2025-11-20`","2":"The code does not compile.","3":"A `ClassCastException` is thrown at runtime."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103326,"difficulty":"medium","type":"single","question":"What is the output of the following code using the `truncatedTo` method?\n\\begin{verbatim}\nimport java.time.LocalDateTime;\nimport java.time.temporal.ChronoUnit;\n\npublic class TruncateTest {\n    public static void main(String[] args) {\n        LocalDateTime dt = LocalDateTime.of(2025, 8, 2, 13, 55, 45);\n        dt = dt.truncatedTo(ChronoUnit.HOURS);\n        System.out.println(dt);\n    }\n}\n\\end{verbatim}","choices":{"0":"`2025-08-02T13:00`","1":"`2025-08-02T14:00`","2":"`2025-08-02T13:55:45`","3":"A `DateTimeException` is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103327,"difficulty":"medium","type":"single","question":"What is the output of this code, which calculates the period between two dates?\n\\begin{verbatim}\nimport java.time.LocalDate;\nimport java.time.Period;\n\npublic class PeriodBetweenTest {\n    public static void main(String[] args) {\n        LocalDate d1 = LocalDate.of(2025, 1, 15);\n        LocalDate d2 = LocalDate.of(2026, 2, 20);\n        Period period = Period.between(d1, d2);\n        System.out.println(period);\n    }\n}\n\\end{verbatim}","choices":{"0":"`P1Y1M5D`","1":"`P1Y1M6D`","2":"`P13M5D`","3":"`P401D`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103328,"difficulty":"medium","type":"single","question":"What is the result of executing the following code? This tests formatting with a custom pattern.\n\\begin{verbatim}\nimport java.time.LocalDate;\nimport java.time.format.DateTimeFormatter;\n\npublic class FormatCustomTest {\n    public static void main(String[] args) {\n        LocalDate date = LocalDate.of(2025, 8, 2);\n        DateTimeFormatter f = DateTimeFormatter.ofPattern(\"MMM dd, yyyy\");\n        System.out.println(date.format(f));\n    }\n}\n\\end{verbatim}","choices":{"0":"`August 02, 2025`","1":"`Aug 2, 2025`","2":"`Aug 02, 2025`","3":"The code throws a runtime exception."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103329,"difficulty":"medium","type":"single","question":"What is the output of the following code involving `Duration` and nanoseconds?\n\\begin{verbatim}\nimport java.time.Duration;\nimport java.time.LocalDateTime;\n\npublic class DurationTest {\n    public static void main(String[] args) {\n        LocalDateTime dt1 = LocalDateTime.of(2025, 8, 2, 10, 0, 0);\n        LocalDateTime dt2 = LocalDateTime.of(2025, 8, 2, 10, 0, 30, 500000000);\n        Duration duration = Duration.between(dt1, dt2);\n        System.out.println(duration);\n    }\n}\n\\end{verbatim}","choices":{"0":"`PT30S`","1":"`PT31S`","2":"`PT30.5S`","3":"`P30.5S`"},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103330,"difficulty":"medium","type":"single","question":"What is the output of this code snippet? Carefully trace the chained operations.\n\\begin{verbatim}\nimport java.time.LocalDate;\n\npublic class ChainTest {\n    public static void main(String[] args) {\n        LocalDate date = LocalDate.of(2025, 1, 1).plusYears(1).minusMonths(1).plusDays(1);\n        System.out.println(date);\n    }\n}\n\\end{verbatim}","choices":{"0":"`2026-01-01`","1":"`2025-12-02`","2":"`2026-02-02`","3":"`2025-12-31`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103331,"difficulty":"medium","type":"multiple","question":"Which of the following code snippets correctly create a `Period` object representing exactly 1 week (7 days)? (Choose all that apply)","choices":{"0":"`Period.ofWeeks(1);`","1":"`Period.ofDays(7);`","2":"`Period.parse(\"P1W\");`","3":"`Period.parse(\"P7D\");`","4":"`new Period(0, 0, 7);`"},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103332,"difficulty":"medium","type":"multiple","question":"Which of the following lines of code will throw a `DateTimeParseException` at runtime? (Choose all that apply)\n\\begin{verbatim}\n// Assume imports are correct\n\\end{verbatim}","choices":{"0":"`LocalDate.parse(\"2025/08/02\");`","1":"`LocalTime.parse(\"14:30:00\");`","2":"`LocalDate.parse(\"Jan 01, 2025\");`","3":"`LocalDateTime.parse(\"2025-08-02T10:00\");`"},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103333,"difficulty":"medium","type":"multiple","question":"Which of the following `java.time` related classes are immutable? (Choose all that apply)","choices":{"0":"`LocalDate`","1":"`Period`","2":"`LocalDateTime`","3":"`DateTimeFormatter`","4":"`java.time.format.DateTimeFormatterBuilder`"},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103334,"difficulty":"medium","type":"multiple","question":"Which of the following are valid ways to create a `Duration` of exactly 1 hour? (Choose all that apply)","choices":{"0":"`Duration.ofHours(1);`","1":"`Duration.of(1, ChronoUnit.HOURS);`","2":"`Duration.ofMinutes(60);`","3":"`Duration.parse(\"PT1H\");`","4":"`Duration.of(3600, ChronoUnit.SECONDS);`"},"answers":["0","1","2","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103350,"difficulty":"hard","type":"single","question":"What is the output of the following code? This question tests your understanding of date arithmetic across a leap day.\n\\begin{verbatim}\nimport java.time.LocalDate;\n\npublic class LeapTest {\n    public static void main(String[] args) {\n        LocalDate date = LocalDate.of(2024, 2, 29);\n        LocalDate date2 = date.plusYears(1).plusDays(1);\n        System.out.println(date2);\n    }\n}\n\\end{verbatim}","choices":{"0":"`2025-02-28`","1":"`2025-03-01`","2":"A `DateTimeException` is thrown when creating `date`.","3":"A `DateTimeException` is thrown when `plusYears(1)` is called."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103351,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run the following code? This question checks your knowledge of object instantiation rules for the Date-Time API.\n\\begin{verbatim}\nimport java.time.LocalDate;\n\npublic class ConstructorTest {\n    public static void main(String[] args) {\n        LocalDate date = new LocalDate(2025, 8, 2);\n        System.out.println(date);\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `2025-08-02`.","1":"It throws a `DateTimeException` at runtime.","2":"It fails to compile.","3":"It prints a reference to the object."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103352,"difficulty":"hard","type":"single","question":"What is the output of this code snippet involving adding a month to the end of January?\n\\begin{verbatim}\nimport java.time.LocalDate;\nimport java.time.Period;\n\npublic class AdjustTest {\n    public static void main(String[] args) {\n        LocalDate date = LocalDate.of(2025, 1, 31);\n        date = date.plus(Period.ofMonths(1));\n        System.out.println(date);\n    }\n}\n\\end{verbatim}","choices":{"0":"`2025-02-28`","1":"`2025-03-03`","2":"`2025-03-02`","3":"A `DateTimeException` is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103353,"difficulty":"hard","type":"single","question":"What is the result of the following code? This question combines custom parsing with standard formatting.\n\\begin{verbatim}\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\n\npublic class MixFormatParseTest {\n    public static void main(String[] args) {\n        DateTimeFormatter f = DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH:mm:ss\");\n        LocalDateTime dt = LocalDateTime.parse(\"2025-08-02T14:30:00\", f);\n        System.out.println(dt.format(DateTimeFormatter.ISO_DATE));\n    }\n}\n\\end{verbatim}","choices":{"0":"`2025-08-02T14:30:00`","1":"`2025-08-02`","2":"A `DateTimeParseException` is thrown.","3":"The code does not compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103354,"difficulty":"hard","type":"single","question":"What is the output of the following code? This tests how `Duration.between` handles times that cross midnight.\n\\begin{verbatim}\nimport java.time.Duration;\nimport java.time.LocalTime;\n\npublic class MidnightTest {\n    public static void main(String[] args) {\n        LocalTime t1 = LocalTime.of(22, 0); // 10 PM\n        LocalTime t2 = LocalTime.of(2, 0);  // 2 AM\n        Duration d = Duration.between(t1, t2);\n        System.out.println(d);\n    }\n}\n\\end{verbatim}","choices":{"0":"`PT4H`","1":"`PT-20H`","2":"`PT20H`","3":"An `UnsupportedTemporalTypeException` is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103355,"difficulty":"hard","type":"single","question":"What is the output of the following code snippet regarding `Period` normalization?\n\\begin{verbatim}\nimport java.time.Period;\n\npublic class NormalizeTest {\n    public static void main(String[] args) {\n        Period p = Period.of(0, 13, 35);\n        p = p.normalized();\n        System.out.println(p);\n    }\n}\n\\end{verbatim}","choices":{"0":"`P1Y2M4D`","1":"`P1Y1M35D`","2":"`P1Y2M5D`","3":"`P13M35D`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103356,"difficulty":"hard","type":"single","question":"What is the result of executing the following code? This question tests the case-sensitivity and symbol correctness of formatter patterns.\n\\begin{verbatim}\nimport java.time.LocalDate;\nimport java.time.format.DateTimeFormatter;\n\npublic class PatternCaseTest {\n    public static void main(String[] args) {\n        String dateStr = \"2-8-2025\";\n        DateTimeFormatter f = DateTimeFormatter.ofPattern(\"d-m-yyyy\");\n        LocalDate date = LocalDate.parse(dateStr, f);\n        System.out.println(date);\n    }\n}\n\\end{verbatim}","choices":{"0":"`2025-08-02`","1":"`2025-02-08`","2":"The code does not compile.","3":"A `DateTimeParseException` is thrown."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103357,"difficulty":"hard","type":"multiple","question":"Which of the following lines of code, if executed independently, will result in a runtime exception? (Choose all that apply)\n\\begin{verbatim}\n// Assume all necessary imports from java.time and java.time.temporal\n\\end{verbatim}","choices":{"0":"`LocalDate.of(2025, 13, 1);`","1":"`Duration.between(LocalDate.now(), LocalDateTime.now());`","2":"`Period.of(1, 1, 1).plus(Duration.ofHours(1));`","3":"`LocalTime.now().truncatedTo(ChronoUnit.DAYS);`","4":"`Period.ofMonths(12).normalized();`"},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103358,"difficulty":"hard","type":"multiple","question":"Given the string `String text = \"2025-AUG-02 10:30\";`, which of the following formatters will successfully parse this string into a `LocalDateTime`? (Choose all that apply)\n\\begin{verbatim}\n// Assume imports are correct and a suitable default Locale (e.g., US)\n\\end{verbatim}","choices":{"0":"`DateTimeFormatter.ofPattern(\"yyyy-MMM-dd HH:mm\");`","1":"`DateTimeFormatter.ofPattern(\"yyyy-MMMM-dd HH:mm\");`","2":"`DateTimeFormatter.ofPattern(\"yyyy-MMM-dd hh:mm a\");`","3":"`DateTimeFormatter.ofPattern(\"uuuu-LLL-dd HH:mm\");`","4":"`DateTimeFormatter.ofPattern(\"yyyy-MMM-dd HH:mm\").withLocale(java.util.Locale.FRENCH);`"},"answers":["0","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103400,"difficulty":"easy","type":"single","question":"What is the output of the following Java code?\n\\begin{verbatim}\nimport static java.lang.Math.PI;\n\npublic class Circle {\n    public static void main(String[] args) {\n        double radius = 2.0;\n        double area = PI * radius * radius;\n        System.out.printf(\"%.2f\", area);\n    }\n}\n\\end{verbatim}","choices":{"0":"`3.14`","1":"`12.57`","2":"The code does not compile because `PI` is not defined.","3":"The code does not compile because of an incorrect import statement."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103401,"difficulty":"easy","type":"single","question":"Which statement correctly imports all static members of the `java.util.Collections` class?","choices":{"0":"`import java.util.Collections;`","1":"`import static java.util.Collections;`","2":"`import java.util.Collections.*;`","3":"`import static java.util.Collections.*;`"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103402,"difficulty":"easy","type":"single","question":"Examine the `java.lang.String` class. Which of the following CANNOT be used with a static import?\n\\begin{verbatim}\n// In the String class:\n// public static String format(String format, Object... args) { ... }\n// public int length() { ... }\n// public static final Comparator<String> CASE_INSENSITIVE_ORDER; \n\\end{verbatim}","choices":{"0":"The `format` method","1":"The `length` method","2":"The `CASE_INSENSITIVE_ORDER` field","3":"All of the above can be statically imported."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103403,"difficulty":"easy","type":"single","question":"What is the output of the following code snippet?\n\\begin{verbatim}\nimport static java.lang.Integer.MAX_VALUE;\n\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(MAX_VALUE > 2000000000);\n    }\n}\n\\end{verbatim}","choices":{"0":"`true`","1":"`false`","2":"Compilation fails.","3":"A runtime exception is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103404,"difficulty":"easy","type":"single","question":"What is the result of the following code?\n\\begin{verbatim}\nimport static java.lang.Math.sqrt;\n\npublic class Calculator {\n    public static void main(String[] args) {\n        System.out.println(sqrt(16));\n    }\n}\n\\end{verbatim}","choices":{"0":"`4`","1":"`4.0`","2":"`16`","3":"Compilation fails."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103405,"difficulty":"easy","type":"multiple","question":"Which of the following are valid static import statements? (Choose all that apply)","choices":{"0":"`import static java.lang.System.out;`","1":"`import static java.util.Arrays;`","2":"`import static java.nio.file.Files.*;`","3":"`static import java.lang.Math.PI;`","4":"`import java.lang.Math.PI static;`"},"answers":["0","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103420,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\n// File: com/app/Constants.java\npackage com.app;\npublic class Constants {\n    public static final String NAME = \"App\";\n}\n\n// File: com/utils/Config.java\npackage com.utils;\npublic class Config {\n    public static final String NAME = \"Config\";\n}\n\n// File: com/test/Test.java\npackage com.test;\nimport static com.app.Constants.NAME;\nimport static com.utils.Config.NAME;\n\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(NAME);\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `App`.","1":"It prints `Config`.","2":"It fails to compile.","3":"It throws a runtime exception."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103421,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\n// File: pkg/A.java\npackage pkg;\npublic class A { \n    public static void run() { System.out.println(\"A\"); } \n}\n\n// File: pkg/B.java\npackage pkg;\npublic class B { \n    public static void run() { System.out.println(\"B\"); } \n}\n\n// File: Main.java\nimport static pkg.A.*;\nimport static pkg.B.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        run();\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `A`.","1":"It prints `B`.","2":"It fails to compile due to an ambiguous call.","3":"It throws an exception at runtime."},"answers":["2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103422,"difficulty":"medium","type":"single","question":"What is the output of the following code? This question tests variable shadowing.\n\\begin{verbatim}\nimport static java.lang.Integer.MAX_VALUE;\n\npublic class ShadowTest {\n    static String MAX_VALUE = \"High\";\n\n    public static void main(String[] args) {\n        System.out.println(MAX_VALUE);\n    }\n}\n\\end{verbatim}","choices":{"0":"`2147483647`","1":"`High`","2":"The code fails to compile due to ambiguity.","3":"A runtime exception is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103423,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\n// File: com/app/Logger.java\npackage com.app;\npublic class Logger {\n    private static void log(String msg) {\n        System.out.println(msg);\n    }\n}\n\n// File: com/test/Test.java\npackage com.test;\nimport static com.app.Logger.log;\n\npublic class Test {\n    public static void main(String[] args) {\n        log(\"Hello\");\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `Hello`.","1":"It fails to compile because `log` is private.","2":"It compiles but throws an `IllegalAccessException` at runtime.","3":"It prints nothing."},"answers":["1"],"attempts":1,"attempted":true,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103424,"difficulty":"medium","type":"single","question":"Given the following code, what is the output?\n\\begin{verbatim}\n// Parent.java\npublic class Parent {\n    public static String GREETING = \"Hello from Parent\";\n}\n\n// Child.java\npublic class Child extends Parent {}\n\n// Main.java\nimport static Child.GREETING;\n\npublic class Main {\n    public static void main(String[] args) {\n        System.out.println(GREETING);\n    }\n}\n\\end{verbatim}","choices":{"0":"`Hello from Parent`","1":"The code fails to compile because `GREETING` is not defined in `Child`.","2":"The code fails to compile because static members cannot be inherited for static imports.","3":"The code throws a runtime exception."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103425,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile the following code?\n\\begin{verbatim}\npackage com.test;\n\nimport static java.util.List;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<String> list = null;\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"The code fails to compile because `import static` cannot be used on a class/interface.","2":"The code compiles but throws an exception at runtime.","3":"The code fails to compile because `List` is an interface."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103426,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nimport static java.util.Arrays.asList;\n\npublic class Runner {\n    public static void main(String[] args) {\n        System.out.println(asList(\"a\", \"b\").size());\n    }\n}\n\\end{verbatim}","choices":{"0":"`1`","1":"`2`","2":"`3`","3":"Compilation fails."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103427,"difficulty":"medium","type":"single","question":"Which statement about the `out` in `System.out.println()` is true?","choices":{"0":"`out` is a static method in the `System` class.","1":"`out` is an instance variable in the `System` class.","2":"`out` is a static variable in the `System` class.","3":"`out` is a local variable in the `println` method."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103428,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nimport static java.lang.System.out;\n\npublic class Greeter {\n    static java.io.PrintStream out = java.lang.System.err;\n\n    public static void main(String[] args) {\n        out.println(\"Hello\");\n    }\n}\n\\end{verbatim}","choices":{"0":"The text \"Hello\" is printed to standard output.","1":"The text \"Hello\" is printed to standard error.","2":"The code fails to compile due to an ambiguous reference to `out`.","3":"The code compiles but throws a runtime exception."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103429,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile this code?\n\\begin{verbatim}\nimport static java.lang.Math.PI;\n\npublic class Constants {\n    public static void main(String[] args) {\n        PI = 3.14159; // Re-assigning the imported constant\n        System.out.println(PI);\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `3.14159`","1":"It prints the original value of PI from `java.lang.Math`","2":"It fails to compile.","3":"It throws a runtime exception."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103430,"difficulty":"medium","type":"single","question":"Given the following class, what is the output?\n\\begin{verbatim}\nimport static java.util.Collections.sort;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Sorter {\n    // static void sort(List<String> list) { System.out.println(\"Local Sort\"); }\n    \n    public static void main(String[] args) {\n        List<String> list = Arrays.asList(\"c\", \"a\", \"b\");\n        sort(list);\n        System.out.println(list);\n    }\n}\n\\end{verbatim}","choices":{"0":"`[a, b, c]`","1":"`[c, a, b]`","2":"`Local Sort`","3":"The code fails to compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103431,"difficulty":"medium","type":"multiple","question":"Given the following class, which members can be legally imported and used via a static import by another class in a different package? (Choose all that apply)\n\\begin{verbatim}\npackage com.lib;\n\npublic class LibUtils {\n    public static void doPublic() {}\n    protected static void doProtected() {}\n    static void doPackage() {}\n    private static void doPrivate() {}\n    public int nonStatic = 0;\n}\n\\end{verbatim}","choices":{"0":"`doPublic`","1":"`doProtected`","2":"`doPackage`","3":"`doPrivate`","4":"`nonStatic`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103432,"difficulty":"medium","type":"multiple","question":"Which statements about static imports in Java are true? (Choose all that apply)","choices":{"0":"They can import static methods.","1":"They can import static final variables.","2":"They can import instance (non-static) methods.","3":"Using a wildcard `*` imports all members, including instance members.","4":"They can be used to import constructors.","5":"They can import static nested classes."},"answers":["0","1","5"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103433,"difficulty":"medium","type":"multiple","question":"Given the following code, which of the options, if inserted independently at `// INSERT HERE`, will cause a compilation error? (Choose all that apply)\n\\begin{verbatim}\n// File A.java\npublic class A { public static int VALUE = 1; }\n\n// File B.java\npublic class B { public static int VALUE = 2; }\n\n// File C.java\npublic class C { public static void VALUE() {} }\n\n// File Test.java\n// INSERT HERE\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(VALUE);\n    }\n}\n\\end{verbatim}","choices":{"0":"`import static A.VALUE;`","1":"`import static A.*; import static B.*;`","2":"`import static A.VALUE; import static B.VALUE;`","3":"`import static C.VALUE;`"},"answers":["1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103434,"difficulty":"medium","type":"multiple","question":"Consider the following code. Which of the import statements, if inserted at line 1, will allow the code to compile? (Choose all that apply)\n\\begin{verbatim}\n// line 1: INSERT IMPORT HERE\n\npublic class Main {\n    public static void main(String[] args) {\n        List<String> data = asList(\"x\", \"y\");\n        out.println(data);\n    }\n}\n\\end{verbatim}","choices":{"0":"`import java.util.*;\nimport static java.lang.System.*;`","1":"`import java.util.List;\nimport static java.util.Arrays.asList;\nimport static java.lang.System.out;`","2":"`import static java.util.Arrays.*;\nimport static java.lang.System.out;\nimport java.util.List;`","3":"`import static java.util.Arrays.asList;\nimport static java.lang.System.*;`"},"answers":["1","2"],"attempts":1,"attempted":true,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103450,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile this code? This tests the precedence rules between type imports and static imports.\n\\begin{verbatim}\n// File: com/app/Config.java\npackage com.app;\npublic class Config {\n    public static String Level = \"DEBUG\";\n}\n\n// File: com/test/Test.java\npackage com.test;\nimport java.util.logging.Level;\nimport static com.app.Config.*;\n\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(Level.INFO);\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `INFO`.","1":"It prints `DEBUG`.","2":"The code fails to compile because the reference to `Level` is ambiguous.","3":"The code fails to compile because `INFO` is not a member of `com.app.Config.Level`."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103451,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run the following code? This question involves method hiding and static imports.\n\\begin{verbatim}\n// File: P.java\nclass P {\n    static int x() { return 1; }\n}\n\n// File: C.java\nclass C extends P {\n    static int x() { return 2; }\n}\n\n// File: Main.java\nimport static C.x;\n\npublic class Main {\n    public static void main(String[] args) {\n        System.out.println(x());\n    }\n}\n\\end{verbatim}","choices":{"0":"`1`","1":"`2`","2":"Compilation fails due to ambiguity.","3":"Compilation fails for another reason."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103452,"difficulty":"hard","type":"single","question":"What is the output of the following code, which uses a statically imported nested class?\n\\begin{verbatim}\n// File: Encloser.java\npublic class Encloser {\n    public static class Nested {\n        public void hi() { System.out.println(\"Hi\"); }\n    }\n}\n\n// File: Main.java\nimport static Encloser.Nested;\n\npublic class Main {\n    public static void main(String[] args) {\n        Nested n = new Nested();\n        n.hi();\n    }\n}\n\\end{verbatim}","choices":{"0":"`Hi`","1":"The code fails to compile because you cannot statically import a class.","2":"The code fails to compile because `Nested` must be instantiated via `Encloser.Nested`.","3":"The code fails to compile for a different reason."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103453,"difficulty":"hard","type":"single","question":"Consider an interface with a static method (a Java 8 feature). What is the result of this code?\n\\begin{verbatim}\n// File: I.java\npublic interface I {\n    static void run() { System.out.println(\"I\"); }\n}\n\n// File: C.java\npublic class C {\n    public static void run() { System.out.println(\"C\"); }\n}\n\n// File: Main.java\nimport static I.*;\nimport static C.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        run();\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `I`.","1":"It prints `C`.","2":"The code fails to compile due to ambiguity.","3":"The code fails to compile because you cannot statically import methods from an interface."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103454,"difficulty":"hard","type":"single","question":"What is the output of the following code? This question combines static imports with method resolution rules.\n\\begin{verbatim}\n// File: Utils.java\npublic class Utils {\n    public static void process(Object o) { System.out.println(\"Object\"); }\n}\n\n// File: Main.java\nimport static Utils.process;\n\npublic class Main {\n    static void process(String s) { System.out.println(\"String\"); }\n    public static void main(String[] args) {\n        process(\"hello\");\n    }\n}\n\\end{verbatim}","choices":{"0":"`Object`","1":"`String`","2":"The code fails to compile due to an ambiguous call.","3":"The code compiles but throws a runtime exception."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103455,"difficulty":"hard","type":"single","question":"What is the output of the following code? Pay close attention to the method signatures and types.\n\\begin{verbatim}\nimport static java.util.Arrays.asList;\nimport static java.lang.String.join;\n\npublic class TextProcessor {\n    public static void main(String... args) {\n        String result = join(\",\", asList(\"A\",\"B\",\"C\"));\n        System.out.println(result);\n    }\n}\n\\end{verbatim}","choices":{"0":"`A,B,C`","1":"`[A, B, C]`","2":"The code fails to compile because `join` expects a `CharSequence...` not a `List`.","3":"The code fails to compile for another reason."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103456,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile this code?\n\\begin{verbatim}\nimport static java.lang.Integer.*;\n\npublic class Test {\n    public static void main(String[] args) {\n        Integer i = 10;\n        System.out.println(toString(i));\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `10`.","1":"The code fails to compile because the call to `toString` is ambiguous between `Integer.toString(int)` and `Object.toString()`.","2":"The code fails to compile because there is no static `toString(Integer)` method in the `Integer` class.","3":"The code fails to compile because `Object.toString()` is not static and takes precedence."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103457,"difficulty":"hard","type":"multiple","question":"Given the following setup, which of the code snippets in the choices will compile successfully? (Choose all that apply)\n\\begin{verbatim}\n// File: pkg/A.java\npackage pkg;\npublic class A {\n    public static void m1() {}\n    public static void m2() {}\n}\n\n// File: pkg/B.java\npackage pkg;\npublic class B {\n    public static void m1() {}\n    public static void m3() {}\n}\n\\end{verbatim}","choices":{"0":"\\begin{verbatim}\nimport static pkg.A.*;\npublic class T1 { public static void main(String[] args) { m1(); } } \n\\end{verbatim}","1":"\\begin{verbatim}\nimport static pkg.A.*;\nimport static pkg.B.*;\npublic class T2 { public static void main(String[] args) { m2(); } } \n\\end{verbatim}","2":"\\begin{verbatim}\nimport static pkg.A.*;\nimport static pkg.B.*;\npublic class T3 { public static void main(String[] args) { m1(); } } \n\\end{verbatim}","3":"\\begin{verbatim}\nimport static pkg.A.m1;\nimport static pkg.B.m1;\npublic class T4 { public static void main(String[] args) { m1(); } } \n\\end{verbatim}","4":"\\begin{verbatim}\nimport static pkg.A.m1;\npublic class T5 { public static void main(String[] args) { m1(); } } \n\\end{verbatim}"},"answers":["0","1","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1034,"topic":"Static Imports","questionId":103458,"difficulty":"hard","type":"multiple","question":"Which of the following statements regarding name conflict resolution with static imports are true? (Choose all that apply)","choices":{"0":"A static member explicitly imported (single static import) takes precedence over one imported via a wildcard (`*`).","1":"A member in the current class takes precedence over a statically imported member with the same name.","2":"An explicit type import (e.g., `import java.util.List;`) takes precedence over a statically imported member with the same name (e.g., a field named `List`).","3":"If two wildcard static imports introduce members with the same name, they are only considered ambiguous if the member is actually used in the code.","4":"Static members inherited from a superclass can create ambiguity with statically imported members."},"answers":["0","1","2","3","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103500,"difficulty":"easy","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\npublic class Calculator {\n    public static void sum(int... numbers) {\n        int total = 0;\n        for (int n : numbers) {\n            total += n;\n        }\n        System.out.println(total);\n    }\n\n    public static void main(String[] args) {\n        sum(1, 2, 3);\n    }\n}\n\\end{verbatim}","choices":{"0":"`3`","1":"`6`","2":"The code fails to compile because `main` cannot call `sum`.","3":"The code fails to compile because of the `int...` syntax."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103501,"difficulty":"easy","type":"single","question":"Which of the following method signatures is a valid declaration for the main method of a Java application?","choices":{"0":"`public static void main(String args)`","1":"`public static int main(String[] args)`","2":"`public static void main(String... args)`","3":"`public void main(String[] args)`"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103502,"difficulty":"easy","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\nclass Helper {\n    private void help() {\n        System.out.println(\"Helping!\");\n    }\n}\n\npublic class Test {\n    public static void main(String[] args) {\n        Helper h = new Helper();\n        h.help();\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `Helping!`.","1":"The code fails to compile.","2":"It compiles but throws an `IllegalAccessException` at runtime.","3":"It prints nothing."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103503,"difficulty":"easy","type":"single","question":"What is the result of attempting to compile the following class?\n\\begin{verbatim}\npublic class Test {\n    public int getValue() {\n        return \"10\";\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation is successful.","1":"Compilation fails because the return type is `int` but a `String` is returned.","2":"Compilation fails because the method is not static.","3":"Compilation is successful, but a runtime exception occurs if `getValue` is called."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103504,"difficulty":"easy","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\npublic class Printer {\n    public static void print(String... messages) {\n        System.out.println(messages.length);\n    }\n\n    public static void main(String[] args) {\n        print();\n    }\n}\n\\end{verbatim}","choices":{"0":"`0`","1":"`1`","2":"The code fails to compile because no arguments are provided.","3":"A `NullPointerException` is thrown at runtime."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103505,"difficulty":"easy","type":"multiple","question":"Which of the following are valid method declarations using varargs? (Choose all that apply)","choices":{"0":"`public void process(String... data)`","1":"`public void setup(int id, String... names)`","2":"`public void config(String... options, int retries)`","3":"`public void run(String[]... args)`","4":"`public void log(String... messages, int... levels)`"},"answers":["0","1","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103520,"difficulty":"medium","type":"single","question":"What is the output of the following code? This question tests method overloading resolution with varargs.\n\\begin{verbatim}\npublic class OverloadTest {\n    public static void go(int... x) { System.out.println(\"int...\"); }\n    public static void go(long x, long y) { System.out.println(\"long, long\"); }\n\n    public static void main(String[] args) {\n        go(1, 2);\n    }\n}\n\\end{verbatim}","choices":{"0":"`int...`","1":"`long, long`","2":"The code fails to compile due to an ambiguous call.","3":"A runtime exception is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103521,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile this class?\n\\begin{verbatim}\npublic class OrderTest {\n    public void process(int... values, String name) {}\n}\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"The code fails to compile because the varargs parameter is not the last parameter.","2":"The code fails to compile because a varargs parameter cannot be a primitive type.","3":"The code fails to compile because the method has no return statement."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103522,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\npublic class ArrayTest {\n    public static void print(String... elements) {\n        System.out.println(elements.length);\n    }\n\n    public static void main(String[] args) {\n        String[] myArray = {\"A\", \"B\"};\n        print(myArray);\n    }\n}\n\\end{verbatim}","choices":{"0":"`1`","1":"`2`","2":"The code fails to compile.","3":"A runtime exception is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103523,"difficulty":"medium","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\npublic class AmbiguousCall {\n    static void fly(int... lengths) {}\n    static void fly(Integer... lengths) {}\n\n    public static void main(String[] args) {\n        fly(1, 2, 3);\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles and the `int...` version is called.","1":"The code compiles and the `Integer...` version is called.","2":"The code fails to compile due to an ambiguous method call.","3":"The code compiles but throws a runtime exception."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103524,"difficulty":"medium","type":"single","question":"Which change allows this code to compile?\n\\begin{verbatim}\npublic abstract class Shape {\n    public abstract void draw();\n    public abstract float getArea();\n}\n\npublic class Circle extends Shape {\n    public void draw() { /* implementation */ }\n    public int getArea() { return 10; }\n}\n\\end{verbatim}","choices":{"0":"Change the return type of `getArea` in `Circle` to `float`.","1":"Make the `getArea` method in `Circle` `final`.","2":"Change the return type of `draw` in `Circle` to `String`.","3":"The code already compiles."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103525,"difficulty":"medium","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\npublic class FinalParam {\n    public void process(final int x) {\n        x = 10; // This line is the focus\n        System.out.println(x);\n    }\n}\n\\end{verbatim}","choices":{"0":"The code prints `10`.","1":"The code prints the original value passed to `process`.","2":"The code fails to compile.","3":"The code compiles but throws a runtime exception."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103526,"difficulty":"medium","type":"single","question":"What happens when you pass `null` to a varargs method?\n\\begin{verbatim}\npublic class NullTest {\n    public static void run(int... x) {\n        System.out.println(x.length);\n    }\n\n    public static void main(String[] args) {\n        run(null);\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `0`.","1":"It prints `1`.","2":"It fails to compile.","3":"It throws a `NullPointerException` at runtime."},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103527,"difficulty":"medium","type":"single","question":"Consider the following code snippet. Which statement is true?\n\\begin{verbatim}\npublic class Test {\n    public void process() {\n        // some logic...\n        if (true) return;\n        System.out.println(\"Done\"); // This line is the focus\n    }\n}\n\\end{verbatim}","choices":{"0":"The code prints `Done`.","1":"The code compiles successfully but prints nothing.","2":"The code fails to compile.","3":"The code compiles but throws a runtime exception."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103528,"difficulty":"medium","type":"single","question":"What is the output of the following code? This question examines how a `null` argument is handled in method overloading.\n\\begin{verbatim}\npublic class NullOverload {\n    public static void test(Object o) { System.out.println(\"Object\"); }\n    public static void test(String s) { System.out.println(\"String\"); }\n\n    public static void main(String[] args) {\n        test(null);\n    }\n}\n\\end{verbatim}","choices":{"0":"`Object`","1":"`String`","2":"The code fails to compile due to ambiguity.","3":"A `NullPointerException` is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103529,"difficulty":"medium","type":"single","question":"What is the output of the following program?\n\\begin{verbatim}\npublic class VarargsType {\n    public static void check(Object... args) {\n        System.out.println(args.getClass().getSimpleName());\n    }\n\n    public static void main(String[] args) {\n        check(1, \"A\");\n    }\n}\n\\end{verbatim}","choices":{"0":"`Object`","1":"`Object[]`","2":"`Object...`","3":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103530,"difficulty":"medium","type":"single","question":"Which access modifier allows a method to be accessed by any class within the same package, and by subclasses in any package?","choices":{"0":"`public`","1":"`private`","2":"`protected`","3":"Default (package-private)"},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103531,"difficulty":"medium","type":"multiple","question":"Which of the following method declarations are illegal in Java? (Choose all that apply)","choices":{"0":"`public void method(String... x, int y)`","1":"`private final void method(int x)`","2":"`public void method(String... x, int... y)`","3":"`abstract void method();`","4":"`public native final void method();`"},"answers":["0","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103532,"difficulty":"medium","type":"multiple","question":"Given the method `public void print(int... nums)`, which of the following calls are valid? (Choose all that apply)","choices":{"0":"`print(1, 2, 3);`","1":"`print();`","2":"`print(new int[]{4, 5, 6});`","3":"`print(null);`","4":"`print(7);`"},"answers":["0","1","2","4"],"attempts":1,"attempted":true,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103533,"difficulty":"medium","type":"multiple","question":"Which statements are true about method design in Java? (Choose all that apply)","choices":{"0":"A method's return type is part of its signature for overloading.","1":"A method can be overloaded by changing only the names of its parameters.","2":"A `final` method cannot be overridden in a subclass.","3":"An `abstract` method cannot be `private`.","4":"A method parameter can be declared as `final`."},"answers":["2","3","4"],"attempts":1,"attempted":true,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103534,"difficulty":"medium","type":"multiple","question":"You have a method with the signature `void process(Number... n)`. Which of the following can be passed to this method? (Choose all that apply)","choices":{"0":"`new Integer(1)`","1":"`new Double(2.0)`","2":"`3.0f`","3":"`new Byte((byte)4)`","4":"`new Object()`"},"answers":["0","1","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103550,"difficulty":"hard","type":"single","question":"What is the output of the following code? This question tests the 'most specific' rule in method overloading with varargs.\n\\begin{verbatim}\npublic class SpecificityTest {\n    static void compute(int x, int... y) { System.out.println(\"int, int...\"); }\n    static void compute(int... z) { System.out.println(\"int...\"); }\n\n    public static void main(String[] args) {\n        compute(5);\n    }\n}\n\\end{verbatim}","choices":{"0":"`int, int...`","1":"`int...`","2":"The code fails to compile due to ambiguity.","3":"The code fails to compile for another reason."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103551,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run this code? This tests overloading resolution with autoboxing and varargs.\n\\begin{verbatim}\npublic class BoxingTest {\n    static void run(Integer i) { System.out.println(\"Integer\"); }\n    static void run(long... l) { System.out.println(\"long...\"); }\n\n    public static void main(String[] args) {\n        int myInt = 10;\n        run(myInt);\n    }\n}\n\\end{verbatim}","choices":{"0":"`Integer`","1":"`long...`","2":"The code fails to compile due to ambiguity.","3":"The code fails to compile for another reason."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103552,"difficulty":"hard","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\npublic class TrickyOverload {\n    static void test(long l) { System.out.println(\"long\"); }\n    static void test(Integer i) { System.out.println(\"Integer\"); }\n\n    public static void main(String[] args) {\n        int value = 5;\n        test(value);\n    }\n}\n\\end{verbatim}","choices":{"0":"`long`","1":"`Integer`","2":"The code fails to compile due to ambiguity.","3":"A runtime exception is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103553,"difficulty":"hard","type":"single","question":"What is the output of this code, which passes a 2D array to a varargs method?\n\\begin{verbatim}\npublic class TwoDArrayTest {\n    public static void walk(Object... args) {\n        System.out.println(args.length);\n    }\n\n    public static void main(String... args) {\n        int[][] twoD = {{1, 2}, {3, 4}};\n        walk(twoD);\n    }\n}\n\\end{verbatim}","choices":{"0":"`1`","1":"`2`","2":"`4`","3":"The code fails to compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103554,"difficulty":"hard","type":"single","question":"What happens when the compiler encounters this method signature?\n\\begin{verbatim}\npublic class BadSignature {\n    public void process(int... numbers, String... names) {}\n}\n\\end{verbatim}","choices":{"0":"The code compiles, but a call is always ambiguous.","1":"The code compiles if only one varargs parameter is used in a call.","2":"The code fails to compile.","3":"The code compiles, but will throw an exception at runtime."},"answers":["2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103555,"difficulty":"hard","type":"single","question":"Examine the following code. Which method is called at runtime?\n\\begin{verbatim}\nclass Parent {\n    void process(int... x) { System.out.println(\"Parent\"); }\n}\n\nclass Child extends Parent {\n    void process(int[] x) { System.out.println(\"Child\"); }\n}\n\npublic class Test {\n    public static void main(String[] args) {\n        new Child().process(new int[]{1, 2});\n    }\n}\n\\end{verbatim}","choices":{"0":"`Parent`","1":"`Child`","2":"The code fails to compile due to an invalid override.","3":"The code fails to compile due to ambiguity."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103556,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile this code involving generics and varargs?\n\\begin{verbatim}\nimport java.util.List;\n\npublic class GenericVarargs {\n    public static <T> void addToList(List<T> list, T... elements) {\n        for (T element : elements) {\n            list.add(element);\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles successfully.","1":"The code compiles but with a heap pollution warning.","2":"The code fails to compile because `T` cannot be resolved.","3":"The code fails to compile because varargs cannot be used with generic types."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103557,"difficulty":"hard","type":"multiple","question":"Which of the following method calls are ambiguous and will cause a compilation error? (Choose all that apply)\n\\begin{verbatim}\nclass Ambiguity {\n    static void m(int a, long b) {} // M1\n    static void m(long a, int b) {} // M2\n    static void m(int... a) {}      // M3\n    static void m(Number n) {}      // M4\n    static void m(Object o) {}      // M5\n}\n\\end{verbatim}","choices":{"0":"`Ambiguity.m(5, 10);`","1":"`Ambiguity.m(5L, 10L);`","2":"`Ambiguity.m(5);`","3":"`Ambiguity.m(new Integer(5));`","4":"`Ambiguity.m(null);`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103558,"difficulty":"hard","type":"multiple","question":"Which of the following method declarations are valid in a concrete (non-abstract) class? (Choose all that apply)","choices":{"0":"`private final static void methodA();`","1":"`protected abstract void methodB();`","2":"`public final synchronized void methodC(String... s) {}`","3":"`void methodD(final int... x) {}`","4":"`static { System.out.println(\"I am not a method.\"); }`"},"answers":["2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103600,"difficulty":"easy","type":"single","question":"What is the output of the following code? This question tests the fundamental rule of passing primitive types.\n\\begin{verbatim}\npublic class PrimitiveTest {\n    public static void update(int value) {\n        value = 20;\n    }\n\n    public static void main(String[] args) {\n        int myValue = 10;\n        update(myValue);\n        System.out.println(myValue);\n    }\n}\n\\end{verbatim}","choices":{"0":"`10`","1":"`20`","2":"The code fails to compile.","3":"A runtime exception is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103601,"difficulty":"easy","type":"single","question":"What is the output of the following code? This demonstrates passing a mutable object reference.\n\\begin{verbatim}\npublic class MutableTest {\n    public static void modify(StringBuilder sb) {\n        sb.append(\" World\");\n    }\n\n    public static void main(String[] args) {\n        StringBuilder myString = new StringBuilder(\"Hello\");\n        modify(myString);\n        System.out.println(myString);\n    }\n}\n\\end{verbatim}","choices":{"0":"`Hello`","1":"`Hello World`","2":"`World`","3":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103602,"difficulty":"easy","type":"single","question":"Which statement most accurately describes how arguments are passed to methods in Java?","choices":{"0":"Java uses pass-by-reference, where a reference to the original variable is passed.","1":"Java uses pass-by-value, where a copy of the variable's value is passed.","2":"Java uses pass-by-reference for objects and pass-by-value for primitives.","3":"Java uses pass-by-copy, which is a synonym for pass-by-reference."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103603,"difficulty":"easy","type":"single","question":"What is the output of the following code involving an immutable String object?\n\\begin{verbatim}\npublic class StringTest {\n    public static void change(String text) {\n        text = text + \" Changed\";\n    }\n\n    public static void main(String[] args) {\n        String myText = \"Original\";\n        change(myText);\n        System.out.println(myText);\n    }\n}\n\\end{verbatim}","choices":{"0":"`Original`","1":"`Original Changed`","2":"The code fails to compile.","3":"A `NullPointerException` is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103604,"difficulty":"easy","type":"single","question":"What is the output of the following code, which passes an array and modifies an element?\n\\begin{verbatim}\nimport java.util.Arrays;\n\npublic class ArrayElementTest {\n    public static void updateFirst(int[] data) {\n        data[0] = 99;\n    }\n\n    public static void main(String[] args) {\n        int[] myArray = {1, 2, 3};\n        updateFirst(myArray);\n        System.out.println(Arrays.toString(myArray));\n    }\n}\n\\end{verbatim}","choices":{"0":"`[1, 2, 3]`","1":"`[99, 2, 3]`","2":"`[99]`","3":"The code fails to compile."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103605,"difficulty":"easy","type":"multiple","question":"Which of the following statements about passing data to methods in Java are true? (Choose all that apply)","choices":{"0":"When a primitive is passed to a method, the method receives a copy of the primitive's value.","1":"When an object reference is passed to a method, the method receives a copy of the reference.","2":"A method can change the state of an object that was passed to it, if the object is mutable.","3":"A method can change the value of a caller's primitive variable.","4":"Java is sometimes called \"pass-by-reference\" for objects, which is technically correct."},"answers":["0","1","2"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103620,"difficulty":"medium","type":"single","question":"What is the output of the following code? This is a classic question testing your understanding of passing object references.\n\\begin{verbatim}\nclass Dog { String name; Dog(String n) { name = n; } }\n\npublic class ReferenceTest {\n    public static void main(String[] args) {\n        Dog aDog = new Dog(\"Max\");\n        foo(aDog);\n        System.out.println(aDog.name);\n    }\n\n    public static void foo(Dog d) {\n        d = new Dog(\"Fifi\");\n    }\n}\n\\end{verbatim}","choices":{"0":"`Max`","1":"`Fifi`","2":"The code fails to compile.","3":"A `NullPointerException` is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103621,"difficulty":"medium","type":"single","question":"What is the output of the following code involving a wrapper class?\n\\begin{verbatim}\npublic class WrapperTest {\n    public static void increment(Integer number) {\n        number++;\n    }\n\n    public static void main(String[] args) {\n        Integer myNumber = 10;\n        increment(myNumber);\n        System.out.println(myNumber);\n    }\n}\n\\end{verbatim}","choices":{"0":"`10`","1":"`11`","2":"The code fails to compile.","3":"A `NullPointerException` is thrown."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103622,"difficulty":"medium","type":"single","question":"What is the output of the following code, which reassigns an array reference?\n\\begin{verbatim}\nimport java.util.Arrays;\n\npublic class ArrayReassignTest {\n    public static void reassign(int[] data) {\n        data = new int[]{4, 5, 6};\n    }\n\n    public static void main(String[] args) {\n        int[] myArray = {1, 2, 3};\n        reassign(myArray);\n        System.out.println(Arrays.toString(myArray));\n    }\n}\n\\end{verbatim}","choices":{"0":"`[1, 2, 3]`","1":"`[4, 5, 6]`","2":"`null`","3":"The code fails to compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103623,"difficulty":"medium","type":"single","question":"Consider the following code. What is printed to the console?\n\\begin{verbatim}\nclass Data { public int value = 0; }\n\npublic class MethodChain {\n    public static void main(String[] args) {\n        Data data = new Data();\n        process(data);\n        System.out.println(data.value);\n    }\n    \n    public static void process(Data d) {\n        d.value = 10;\n        reset(d);\n    }\n\n    public static void reset(Data d) {\n        d = new Data();\n        d.value = 0;\n    }\n}\n\\end{verbatim}","choices":{"0":"`0`","1":"`10`","2":"The code fails to compile.","3":"A `NullPointerException` is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103624,"difficulty":"medium","type":"single","question":"What is the output of the following code that passes a null reference?\n\\begin{verbatim}\nclass Book { String title; }\n\npublic class NullPassTest {\n    public static void createBook(Book b) {\n        b = new Book();\n        b.title = \"Java\";\n    }\n\n    public static void main(String[] args) {\n        Book myBook = null;\n        createBook(myBook);\n        if (myBook == null) {\n            System.out.println(\"Still null\");\n        } else {\n            System.out.println(myBook.title);\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`Still null`","1":"`Java`","2":"A `NullPointerException` is thrown inside `main`.","3":"A `NullPointerException` is thrown inside `createBook`."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103625,"difficulty":"medium","type":"single","question":"What is the output of the code below?\n\\begin{verbatim}\npublic class ReturnValueTest {\n    public static int transform(int x) {\n        x = x * 2;\n        return x;\n    }\n\n    public static void main(String[] args) {\n        int val = 5;\n        transform(val);\n        System.out.println(val);\n    }\n}\n\\end{verbatim}","choices":{"0":"`5`","1":"`10`","2":"The code fails to compile.","3":"The output is unpredictable."},"answers":["0"],"attempts":1,"attempted":true,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103626,"difficulty":"medium","type":"single","question":"The following code involves a static field. What is its output?\n\\begin{verbatim}\npublic class StaticFieldTest {\n    static int counter = 0;\n\n    public static void increment(int num) {\n        num++;\n        counter++;\n    }\n\n    public static void main(String[] args) {\n        int localCounter = 0;\n        increment(localCounter);\n        increment(localCounter);\n        System.out.println(counter + \" \" + localCounter);\n    }\n}\n\\end{verbatim}","choices":{"0":"`2 0`","1":"`2 2`","2":"`0 0`","3":"`0 2`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103627,"difficulty":"medium","type":"single","question":"What does the following code print?\n\\begin{verbatim}\npublic class SwapTest {\n    public static void swap(StringBuilder s1, StringBuilder s2) {\n        StringBuilder temp = s1;\n        s1 = s2;\n        s2 = temp;\n    }\n\n    public static void main(String[] args) {\n        StringBuilder sb1 = new StringBuilder(\"A\");\n        StringBuilder sb2 = new StringBuilder(\"B\");\n        swap(sb1, sb2);\n        System.out.println(sb1 + \",\" + sb2);\n    }\n}\n\\end{verbatim}","choices":{"0":"`A,B`","1":"`B,A`","2":"`null,null`","3":"The code fails to compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103628,"difficulty":"medium","type":"single","question":"What is the final value of `p.name` printed at the end of the `main` method?\n\\begin{verbatim}\nclass Person { public String name; }\n\npublic class Test {\n    public static void main(String[] args) {\n        Person p = new Person();\n        p.name = \"Alice\";\n        method1(p);\n        System.out.println(p.name);\n    }\n    public static void method1(Person p) {\n        p.name = \"Bob\";\n        method2(p);\n    }\n    public static void method2(Person p) {\n        p = new Person();\n        p.name = \"Charles\";\n    }\n}\n\\end{verbatim}","choices":{"0":"`Alice`","1":"`Bob`","2":"`Charles`","3":"`null`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103629,"difficulty":"medium","type":"single","question":"What is the output?\n\\begin{verbatim}\npublic class ShadowTest {\n    String name = \"Class\";\n    void printName(String name) {\n        System.out.println(name);\n    }\n    public static void main(String[] args) {\n        new ShadowTest().printName(\"Method\");\n    }\n}\n\\end{verbatim}","choices":{"0":"`Class`","1":"`Method`","2":"`null`","3":"The code fails to compile due to ambiguity."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103630,"difficulty":"medium","type":"single","question":"What is printed by this code?\n\\begin{verbatim}\npublic class ArrayTest2 {\n    public static void main(String[] args) {\n        String[] letters = {\"A\", \"B\", \"C\"};\n        modify(letters);\n        for(String s : letters) System.out.print(s);\n    }\n    public static void modify(String[] arr) {\n        arr[1] = \"X\";\n        arr = new String[]{\"D\", \"E\", \"F\"};\n        arr[1] = \"Y\";\n    }\n}\n\\end{Vebatim}","choices":{"0":"`AXC`","1":"`AYC`","2":"`DYF`","3":"`ABC`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103631,"difficulty":"medium","type":"multiple","question":"Given the `Student` class, which methods below will change the name of the `student` object in the `main` method to \"David\"? (Choose all that apply)\n\\begin{verbatim}\nclass Student { public String name; }\n\n// Methods to consider:\npublic void m1(Student s) { s.name = \"David\"; }\npublic void m2(Student s) { s = new Student(); s.name = \"David\"; }\npublic Student m3(Student s) { s.name = \"David\"; return s; }\npublic Student m4(Student s) { s = new Student(); s.name = \"David\"; return s; }\n\n// In main:\nStudent student = new Student();\nstudent.name = \"Charles\";\n// Which method call(s) result in student.name being \"David\"?\n\\end{verbatim}","choices":{"0":"Calling `m1(student);`","1":"Calling `m2(student);`","2":"Calling `m3(student);`","3":"Calling `student = m4(student);`"},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103632,"difficulty":"medium","type":"multiple","question":"Which code snippets correctly demonstrate that Java is pass-by-value? (Choose all that apply)","choices":{"0":"\\begin{verbatim}\nint x = 5; modify(x); // x is still 5\nvoid modify(int val) { val = 10; }\n\\end{verbatim}","1":"\\begin{verbatim}\nStringBuilder s = new StringBuilder(\"A\");\nmodify(s); // s is now \"AB\"\nvoid modify(StringBuilder sb) { sb.append(\"B\"); }\n\\end{verbatim}","2":"\\begin{verbatim}\nString s = \"A\"; modify(s); // s is still \"A\"\nvoid modify(String str) { str = \"B\"; }\n\\end{verbatim}","3":"\\begin{verbatim}\nint[] arr = {1}; modify(arr); // arr[0] is still 1\nvoid modify(int[] a) { a = new int[]{2}; }\n\\end{verbatim}"},"answers":["0","2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103633,"difficulty":"medium","type":"multiple","question":"What are the final values of `x`, `y.value`, and `z` at the end of the `main` method? (Choose all that apply)\n\\begin{verbatim}\nclass Wrapper { public int value; }\n\npublic class FinalValues {\n    public static void main(String[] args) {\n        int x = 10;\n        Wrapper y = new Wrapper(); y.value = 20;\n        String z = \"30\";\n        modify(x, y, z);\n        // What are the values here?\n    }\n    public static void modify(int x, Wrapper y, String z) {\n        x = 15;\n        y.value = 25;\n        z = \"35\";\n    }\n}\n\\end{verbatim}","choices":{"0":"`x` is 10","1":"`y.value` is 20","2":"`y.value` is 25","3":"`z` is \"30\"","4":"`z` is \"35\""},"answers":["0","2","3"],"attempts":1,"attempted":true,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103634,"difficulty":"medium","type":"multiple","question":"When an object reference is passed to a method, which of the following actions inside the method will be visible to the caller? (Choose all that apply)","choices":{"0":"Reassigning the parameter to point to a new object.","1":"Reassigning the parameter to `null`.","2":"Calling a method on the parameter that changes the object's internal state (e.g., `list.add(item)`).","3":"Modifying a public field of the object referenced by the parameter (e.g., `person.name = \"New Name\"`)."},"answers":["2","3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103650,"difficulty":"hard","type":"single","question":"What is the output of the following code? This question tests `final` parameters.\n\\begin{verbatim}\nclass Box { public int size; }\n\npublic class FinalParamTest {\n    public static void modify(final Box b) {\n        b.size = 100;\n        // b = new Box(); // This line is commented out\n    }\n\n    public static void main(String[] args) {\n        Box box = new Box();\n        box.size = 10;\n        modify(box);\n        System.out.println(box.size);\n    }\n}\n\\end{verbatim}","choices":{"0":"`10`","1":"`100`","2":"The code fails to compile because a method cannot modify a `final` parameter.","3":"The code fails to compile for another reason."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103651,"difficulty":"hard","type":"single","question":"What is the output of the following program?\n\\begin{verbatim}\npublic class ArrayOfObjects {\n    static class Bulb { boolean on = false; }\n\n    public static void main(String[] args) {\n        Bulb[] bulbs = {new Bulb(), new Bulb()};\n        turnOn(bulbs);\n        System.out.println(bulbs[0].on + \",\" + bulbs[1].on);\n    }\n\n    public static void turnOn(Bulb[] lights) {\n        lights[0].on = true;\n        lights[1] = new Bulb();\n        lights[1].on = true;\n    }\n}\n\\end{verbatim}","choices":{"0":"`true,true`","1":"`true,false`","2":"`false,true`","3":"`false,false`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103652,"difficulty":"hard","type":"single","question":"Examine the following recursive method. What is printed?\n\\begin{verbatim}\npublic class RecursionTest {\n    public static void main(String[] args) {\n        StringBuilder s = new StringBuilder(\"a\");\n        recurse(s, 3);\n        System.out.println(s);\n    }\n\n    public static void recurse(StringBuilder str, int count) {\n        if (count <= 0) return;\n        str.append(count);\n        recurse(str, count - 1);\n        str = new StringBuilder(\"x\"); // Key line\n    }\n}\n\\end{verbatim}","choices":{"0":"`a`","1":"`a321`","2":"`x`","3":"A `StackOverflowError` is thrown."},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103653,"difficulty":"hard","type":"single","question":"What is the output of this code which passes and returns references?\n\\begin{verbatim}\nclass Num { public int val; }\n\npublic class ReturnTest {\n    public static void main(String[] args) {\n        Num a = new Num(); a.val = 1;\n        Num b = new Num(); b.val = 2;\n        b = process(a, b);\n        System.out.println(a.val + \",\" + b.val);\n    }\n\n    public static Num process(Num x, Num y) {\n        x.val = y.val;\n        y = new Num();\n        y.val = 3;\n        return y;\n    }\n}\n\\end{verbatim}","choices":{"0":"`1,2`","1":"`2,3`","2":"`2,2`","3":"`1,3`"},"answers":["1"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103654,"difficulty":"hard","type":"single","question":"What is the output of the following code snippet?\n\\begin{verbatim}\npublic class TrickyWrapper {\n    public static void main(String[] args) {\n        Integer i = 10;\n        Integer j = 20;\n        swap(i, j);\n        System.out.println(\"i = \" + i + \", j = \" + j);\n    }\n\n    public static void swap(Integer a, Integer b) {\n        Integer temp = a;\n        a = b;\n        b = temp;\n    }\n}\n\\end{verbatim}","choices":{"0":"`i = 10, j = 20`","1":"`i = 20, j = 10`","2":"`i = null, j = null`","3":"The code fails to compile."},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103655,"difficulty":"hard","type":"single","question":"What is the output of the program?\n\\begin{verbatim}\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class ListTest {\n    public static void main(String[] args) {\n        List<String> list = new ArrayList<>();\n        list.add(\"A\");\n        modify(list);\n        list.add(\"C\");\n        System.out.println(list);\n    }\n\n    public static void modify(List<String> data) {\n        data.add(\"B\");\n        data = new ArrayList<>();\n        data.add(\"X\");\n    }\n}\n\\end{verbatim}","choices":{"0":"`[A, B, C]`","1":"`[A, B, X, C]`","2":"`[X, C]`","3":"`[A, C]`"},"answers":["0"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103656,"difficulty":"hard","type":"single","question":"What is the result of the following code?\n\\begin{verbatim}\npublic class StringConcat {\n    public static String concat(String s1, String s2) {\n        s1 = s1 + s2;\n        return s1;\n    }\n\n    public static void main(String[] args) {\n        String a = \"A\";\n        String b = \"B\";\n        String c = concat(a, b);\n        System.out.println(a + b + c);\n    }\n}\n\\end{verbatim}","choices":{"0":"`ABAB`","1":"`A B AB`","2":"`AB`","3":"`ABABAB`"},"answers":["3"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103657,"difficulty":"hard","type":"multiple","question":"Given the `Data` class, which of the following lines in `main` will print `true`? (Choose all that apply)\n\\begin{verbatim}\nclass Data { int val; }\n\npublic class TruthTest {\n    public static void m1(int x) { x = 100; }\n    public static void m2(Data d) { d.val = 100; }\n    public static void m3(Data d) { d = new Data(); d.val = 100; }\n\n    public static void main(String[] args) {\n        int x = 10;\n        Data d = new Data(); d.val = 10;\n\n        m1(x);\n        System.out.println(x == 10); // Line 1\n\n        m2(d);\n        System.out.println(d.val == 100); // Line 2\n\n        d.val = 10; // reset\n        m3(d);\n        System.out.println(d.val == 10); // Line 3\n    }\n}\n\\end{verbatim}","choices":{"0":"Line 1 will print `true`.","1":"Line 1 will print `false`.","2":"Line 2 will print `true`.","3":"Line 2 will print `false`.","4":"Line 3 will print `true`.","5":"Line 3 will print `false`."},"answers":["0","2","4"],"attempts":0,"attempted":false,"answered":false},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103658,"difficulty":"hard","type":"multiple","question":"You are given the class `DataWrapper { public int value = 0; }`. Which of the following code blocks, when placed in a `main` method, will result in the `dw` object having `value == 100` at the end? (Choose all that apply)","choices":{"0":"\\begin{verbatim}\nDataWrapper dw = new DataWrapper();\nnew Processor().changeValue(dw.value);\n// Processor is: void changeValue(int v) { v = 100; }\n\\end{verbatim}","1":"\\begin{verbatim}\nDataWrapper dw = new DataWrapper();\nnew Processor().changeState(dw);\n// Processor is: void changeState(DataWrapper w) { w.value = 100; }\n\\end{verbatim}","2":"\\begin{verbatim}\nDataWrapper dw = new DataWrapper();\ndw = new Processor().reassign(dw);\n// Processor is: DataWrapper reassign(DataWrapper w) { w = new DataWrapper(); w.value = 100; return w; }\n\\end{verbatim}","3":"\\begin{verbatim}\nDataWrapper dw = new DataWrapper();\nnew Processor().tryReassign(dw);\n// Processor is: void tryReassign(DataWrapper w) { w = new DataWrapper(); w.value = 100; }\n\\end{verbatim}","4":"\\begin{verbatim}\nDataWrapper dw = new DataWrapper();\ndw.value = new Processor().getNewValue();\n// Processor is: int getNewValue() { return 100; }\n\\end{verbatim}"},"answers":["1","2","4"],"attempts":0,"attempted":false,"answered":false}]