[{"examId":100,"questionCount":56,"examQuestions":[{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100127,"difficulty":"hard","type":"multiple","question":"Which of the following `main` method signatures will cause a `java.lang.NoSuchMethodError: main` exception at runtime, assuming the class is compiled successfully? (Choose all that apply)","choices":{"0":"`public static void main(String... args)`","1":"`public void main(String[] args)`","2":"`public static void Main(String[] args)`","3":"`public static void main(String args)`","4":"`public static int main(String[] args)`"},"answers":["1","2","3","4"],"attempts":1,"answered":false,"attempted":true},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100926,"difficulty":"hard","type":"single","question":"Examine this code carefully. What is the result?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        Integer i = 128;\n        Integer j = 128;\n        int k = 128;\n\n        if (i == j) {\n            System.out.print(\"A\");\n        }\n        if (i == k) {\n            System.out.print(\"B\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"A","1":"B","2":"AB","3":"No output is produced."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102427,"difficulty":"hard","type":"single","question":"What is the final value of \\verb|sum|?\\begin{verbatim}\nlong[][] arr = new long[2][2];\narr[0] = new long[]{1, 2};\narr[1] = arr[0];\narr[0][0] = 5;\nlong sum = arr[0][0] + arr[1][0];\n\\end{verbatim}","choices":{"0":"6","1":"7","2":"10","3":"Compilation fails."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101026,"difficulty":"hard","type":"single","question":"What will be printed after this code executes?\\n\\begin{verbatim}\nString[] data = {\"a\", \"b\", \"c\"};\nint x = 0;\nfor(;;){\n    try {\n        System.out.print(data[x++]);\n    } catch (ArrayIndexOutOfBoundsException e) {\n        break;\n    }\n}\n\\end{verbatim}","choices":{"0":"abc","1":"ab","2":"a","3":"An infinite loop occurs."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101129,"difficulty":"hard","type":"multiple","question":"Given the following code, which statements are true? (Choose all that apply)\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String... args) {\n        String result = \"\";\n        loop:\n        for (int i=0; i<4; i++) {\n            if (i % 2 == 0) {\n                continue;\n            }\n            switch(i) {\n                case 1: result += \"A\"; break;\n                case 3: result += \"B\"; break loop;\n                case 5: result += \"C\";\n            }\n            result += \"D\";\n        }\n        System.out.println(result);\n    }\n}\n\\end{verbatim}","choices":{"0":"The `continue` statement is executed when `i` is 0 and 2.","1":"The code enters the `switch` statement when `i` is 1 and 3.","2":"The string `\"D\"` is appended to `result` exactly once.","3":"The `break loop;` statement is executed.","4":"The final output is `ABD`.","5":"The final output is `AB`."},"answers":["0","1","2","3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102223,"difficulty":"hard","type":"single","question":"What is the result of attempting to access `MyDevice.NAME` in another class?\\n\\begin{verbatim}\ninterface Device {\n    String NAME = \"Device\";\n}\ninterface Gadget {\n    String NAME = \"Gadget\";\n}\nclass MyDevice implements Device, Gadget {\n    // Some code\n}\n// In another class:\n// System.out.println(MyDevice.NAME);\n\\end{verbatim}","choices":{"0":"It prints \"Device\".","1":"It prints \"Gadget\".","2":"It results in a compile-time error due to an ambiguous field.","3":"It prints `null`."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100029,"difficulty":"hard","type":"multiple","question":"Which of these are valid command line argument arrays in a main method signature? (Choose all that apply)","choices":{"0":"\\verb|String args[]|","1":"\\verb|String... args|","2":"\\verb|String[] myArgs|","3":"\\verb|String[] _args|","4":"\\verb|String..._args|"},"answers":["0","1","2","3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101826,"difficulty":"hard","type":"multiple","question":"Select all lines of code after which at least one `Gadget` object becomes eligible for garbage collection.\n\\begin{verbatim}\nclass Gadget {}\npublic class GadgetFactory {\n    static Gadget staticGadget = new Gadget(); // Line 1\n    Gadget instanceGadget = new Gadget();      // Line 2\n\n    public static void main(String[] args) {\n        GadgetFactory gf = new GadgetFactory(); // Line 3\n        Gadget g1 = new Gadget();               // Line 4\n        gf.build(g1);\n        g1 = null;                              // Line 5\n        gf = null;                              // Line 6\n    }\n\n    void build(Gadget g) {\n        Gadget g2 = new Gadget();               // Line 7\n    } // End of build method is effectively Line 8\n}\n\\end{verbatim}","choices":{"0":"Line 5","1":"Line 6","2":"Line 8","3":"The line after the `main` method completes.","4":"Line 3"},"answers":["0","1","2","3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102722,"difficulty":"hard","type":"single","question":"What is the result of this code?\n\\begin{verbatim}\nComparator<Integer> c = (i1, i2) -> i1 - i2;\nList<Integer> list = Arrays.asList(Integer.MAX_VALUE, Integer.MIN_VALUE);\nCollections.sort(list, c);\nSystem.out.println(list);\n\\end{verbatim}","choices":{"0":"`[-2147483648, 2147483647]`","1":"`[2147483647, -2147483648]`","2":"An `ArithmeticException` is thrown.","3":"The list remains unchanged."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100723,"difficulty":"hard","type":"single","question":"Consider the following class. What is the outcome?\\n\\begin{verbatim}\npublic class Test {\n    static {\n        i = 20; // Forward reference is ok in assignment\n    }\n    static int i = 10;\n\n    public static void main(String[] args) {\n        System.out.println(i);\n    }\n}\n\\end{verbatim}","choices":{"0":"20","1":"10","2":"Compilation fails due to illegal forward reference.","3":"0"},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102126,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile this code snippet?\\n\\begin{verbatim}\nimport java.util.*;\n\npublic class GenericsTest {\n    public static void main(String[] args) {\n        List<String> stringList = new ArrayList<>();\n        if (stringList instanceof List<Integer>) {\n            System.out.println(\"It's a list of Integers\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles and runs, but the `if` block is never executed.","1":"The code compiles and throws a `ClassCastException` at runtime.","2":"A compile-time error occurs.","3":"The code compiles and runs, and the `if` block is executed due to type erasure."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100421,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile the following code snippet?\n\\begin{verbatim}\nint i = 10;\nbyte b = i;\n\\end{verbatim}","choices":{"0":"It compiles successfully because the value of `i` (10) is within the range of a `byte`.","1":"It fails to compile because `i` is an `int` variable, and assigning it to a `byte` requires an explicit cast.","2":"It compiles, but will throw a runtime exception if `i` were greater than 127.","3":"It compiles because the compiler can determine the constant value of `i` at compile time."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1012,"topic":"Enums","questionId":101227,"difficulty":"hard","type":"multiple","question":"Which of the following are true about enums in Java? (Choose all that apply)","choices":{"0":"An enum can be a generic type, e.g., `public enum MyEnum<T> { ... }`","1":"Enum constants are implicitly `public`, `static`, and `final`.","2":"An enum can contain a `main` method and can be executed as a standalone program.","3":"An enum type cannot be a subtype of another enum."},"answers":["1","2","3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101622,"difficulty":"hard","type":"single","question":"What is the output of this program?\\n\\begin{verbatim}\\npublic class ForwardReference {\\n    {\\n        System.out.print(value + \" \");\\n    }\\n    private int value = 1;\\n    {\\n        System.out.print(value + \" \");\\n    }\\n\\n    public ForwardReference() {\\n        System.out.print(value);\\n    }\\n\\n    public static void main(String... args) {\\n        new ForwardReference();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"1 1 1","1":"0 1 1","2":"0 0 1","3":"The code fails to compile."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102022,"difficulty":"hard","type":"single","question":"What is the result?\n\\begin{verbatim}\nclass SuperClass {\n    static String ID = \"Super\";\n    void printID() { System.out.println(ID); }\n}\n\nclass SubClass extends SuperClass {\n    static String ID = \"Sub\";\n    void printID() { System.out.println(ID); }\n}\n\npublic class TestHiding {\n    public static void main(String[] args) {\n        SuperClass sup = new SubClass();\n        System.out.println(sup.ID);\n        sup.printID();\n    }\n}\n\\end{verbatim}","choices":{"0":"Super\\nSub","1":"Sub\\nSub","2":"Super\\nSuper","3":"Sub\\nSuper","4":"Compilation fails."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1031,"topic":"Try-with-Resources","questionId":103122,"difficulty":"hard","type":"single","question":"An exception is thrown from a `try-with-resources` block, another from the resource's `close()` method, and a third from the `finally` block. Which exception is ultimately propagated to the caller?","choices":{"0":"The exception from the `try` block.","1":"The exception from the `close()` method.","2":"The exception from the `finally` block.","3":"A new wrapper exception containing all three."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100424,"difficulty":"hard","type":"single","question":"What value is stored in the variable `result` after this code is executed?\n\\begin{verbatim}\nlong result = 2_147_483_647 + 1;\n\\end{verbatim}","choices":{"0":"`2147483648`","1":"`-2147483648`","2":"The code fails to compile.","3":"`21474836471`"},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1034,"topic":"Static Imports","questionId":103452,"difficulty":"hard","type":"single","question":"What is the output of the following code, which uses a statically imported nested class?\n\\begin{verbatim}\n// File: Encloser.java\npublic class Encloser {\n    public static class Nested {\n        public void hi() { System.out.println(\"Hi\"); }\n    }\n}\n\n// File: Main.java\nimport static Encloser.Nested;\n\npublic class Main {\n    public static void main(String[] args) {\n        Nested n = new Nested();\n        n.hi();\n    }\n}\n\\end{verbatim}","choices":{"0":"`Hi`","1":"The code fails to compile because you cannot statically import a class.","2":"The code fails to compile because `Nested` must be instantiated via `Encloser.Nested`.","3":"The code fails to compile for a different reason."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100722,"difficulty":"hard","type":"single","question":"What will the following code print?\\n\\begin{verbatim}\npublic class ScopePuzzle {\n    int x = 5;\n\n    public static void main(String[] args) {\n        ScopePuzzle p = new ScopePuzzle();\n        p.go();\n    }\n\n    void go() {\n        int x;\n        go2();\n        // System.out.println(x); // Line X\n    }\n\n    void go2() {\n        x = 10;\n    }\n}\n\\end{verbatim}","choices":{"0":"If Line X is uncommented, the code will print 10.","1":"If Line X is uncommented, the code will print 5.","2":"If Line X is uncommented, the code will fail to compile.","3":"The code as is will compile and run without error."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102320,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\npublic class Finalizer {\n    private final int value;\n    public Finalizer(int v) {\n        this.value = v;\n    }\n    public int getValue() {\n        return this.value;\n    }\n    public static void main(String[] args) {\n        final Finalizer f = new Finalizer(20);\n        // Line X\n        System.out.println(f.getValue());\n    }\n    public void modify(Finalizer fin) {\n        fin = new Finalizer(30);\n    }\n}\n\\end{verbatim}\nWhat would happen if `modify(f);` was inserted at 'Line X'?","choices":{"0":"The code would fail to compile because `f` is final.","1":"The code would print 30.","2":"The code would print 20.","3":"The code would throw a runtime exception."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100924,"difficulty":"hard","type":"single","question":"What are the final values of `x` and `y` after this code snippet runs?\\n\\begin{verbatim}\nint x = 10;\nint y = 20;\nif (++x <= 10 && --y > 15) {\n    x++;\n    y++;\n}\n\\end{verbatim}","choices":{"0":"`x` is 11, `y` is 20","1":"`x` is 11, `y` is 19","2":"`x` is 12, `y` is 20","3":"`x` is 10, `y` is 20"},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101627,"difficulty":"hard","type":"single","question":"What is the result of compiling this class? \\n\\begin{verbatim}\\npublic class FinalChallenge {\\n    private final int value;\\n\\n    public FinalChallenge() {\\n        this(10);\\n        // value = 20; // Line A\\n    }\\n\\n    public FinalChallenge(int value) {\\n        this.value = value;\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"The code compiles successfully as is.","1":"The code fails to compile because a final field is assigned in one constructor but not the other.","2":"If Line A is uncommented, the code will fail to compile.","3":"The code fails to compile because a final field cannot be assigned in a constructor that uses `this()`."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101729,"difficulty":"hard","type":"multiple","question":"Given `public class Test { static int x = 1; int y = 2; }`, which of the following lines of code are valid if placed inside the `main` method of another class? (Choose all that apply)","choices":{"0":"`System.out.println(Test.x);`","1":"`System.out.println(Test.y);`","2":"`Test t = new Test(); System.out.println(t.x);`","3":"`Test t = new Test(); System.out.println(t.y);`","4":"`Test t = null; System.out.println(t.x);`","5":"`Test t = null; System.out.println(t.y);`"},"answers":["0","2","3","4"],"attempts":1,"answered":false,"attempted":true},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100524,"difficulty":"hard","type":"single","question":"What is the final value of `s`?\n\\begin{verbatim}\nshort s = 32767;\ns++;\n\\end{verbatim}","choices":{"0":"`32768`","1":"`-32768`","2":"`0`","3":"The code does not compile."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100827,"difficulty":"hard","type":"single","question":"Which statement best describes the evaluation of the following expression?\\n\\begin{verbatim}\nint a = 1, b = 2, c = 3, d = 4;\nint result = a + b * c / d > a ? b + c : d - a;\n\\end{verbatim}","choices":{"0":"The expression evaluates to 5.","1":"The expression evaluates to 3.","2":"The multiplication `b*c` is performed first.","3":"The ternary operator `? :` has higher precedence than `>`."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101924,"difficulty":"hard","type":"single","question":"Given the code:\n\\begin{verbatim}\n// In package company.parts\npackage company.parts;\npublic class Engine {\n    // package-private constructor\n    Engine() {}\n}\n\n// In package company.parts\npackage company.parts;\npublic class PartsFactory {\n    public static Engine getEngine() {\n        return new Engine();\n    }\n}\n\n// In package company.vehicles\npackage company.vehicles;\nimport company.parts.*;\npublic class Car {\n    public static void main(String[] args) {\n        Engine e = PartsFactory.getEngine(); // Line X\n        System.out.println(\"Engine acquired\");\n    }\n}\n\\end{verbatim}\nWhat is the result?","choices":{"0":"Compilation fails at Line X because `Engine`'s constructor is not visible.","1":"Compilation fails at Line X because the `Engine` class is not visible.","2":"Compilation succeeds, and \"Engine acquired\" is printed.","3":"Compilation fails because `PartsFactory.getEngine()` returns a type whose constructor is not public."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101528,"difficulty":"hard","type":"multiple","question":"Which statements are true regarding the initialization of a new object? (Choose all that apply)","choices":{"0":"The constructor body is executed before instance initializers.","1":"If present, a call to another constructor using `this()` must be the very first statement in a constructor.","2":"Static variables are initialized after the constructor completes.","3":"Instance variables are assigned their default values (e.g., 0, false, null) before any instance initializers or constructors are run.","4":"Instance initializers are executed in the order they appear in the source code.","5":"It is valid for a class to have multiple instance initializer blocks."},"answers":["1","3","4","5"],"attempts":1,"answered":false,"attempted":true},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102520,"difficulty":"hard","type":"single","question":"What is the result of executing the following code?\\begin{verbatim}\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<Integer> list = new ArrayList<>();\n        list.add(1);\n        list.add(2);\n        list.add(3);\n        list.remove(2);\n        System.out.println(list);\n    }\n}\n\\end{verbatim}","choices":{"0":"[1, 2]","1":"[1, 3]","2":"[2, 3]","3":"An `IndexOutOfBoundsException` is thrown."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101425,"difficulty":"hard","type":"single","question":"Which line of code, when inserted at `// INSERT`, will result in both `boolean` variables being `true`?\n\\begin{verbatim}\nStringBuilder sb1 = new StringBuilder(\"A\");\nStringBuilder sb2 = new StringBuilder(\"A\");\nString s1 = new String(\"A\");\n\n// INSERT\n\nboolean b1 = sb1.toString().equals(s1);\nboolean b2 = sb1 == sb2;\n\\end{verbatim}","choices":{"0":"`sb2 = sb1;`","1":"`sb1 = new StringBuilder(s1);`","2":"`s1 = sb1.toString(); sb2 = sb1;`","3":"It's impossible to make both `true`."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102928,"difficulty":"hard","type":"single","question":"What is the final output of this program?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        try {\n            System.out.print(\"A\");\n            danger();\n        } catch (Exception e) {\n            System.out.print(\"B\");\n        } finally {\n            System.out.print(\"C\");\n        }\n    }\n    static void danger() {\n        try {\n            throw new Error();\n        } finally {\n            System.out.print(\"D\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"`ADBC`","1":"`ADC`","2":"`AD` followed by an `Error` being thrown.","3":"`A` followed by an `Error` being thrown."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100125,"difficulty":"hard","type":"single","question":"Consider the following code:\n\\begin{verbatim}\npackage com.test;\npublic class Runner {\n    public static void main(String[] args) {\n        System.out.println(\"OK\");\n    }\n}\n\\end{verbatim}\nAfter compiling with `javac -d . com/test/Runner.java`, you are in the `com/test` directory. You execute `java Runner`. What is the result?","choices":{"0":"It prints \"OK\".","1":"A `ClassNotFoundException` is thrown.","2":"A `NoClassDefFoundError` is thrown.","3":"A `SecurityException` is thrown."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100227,"difficulty":"hard","type":"multiple","question":"Which of the following statements about `import` declarations are true? (Choose all that apply)","choices":{"0":"`import` statements are required to use any class outside the current package.","1":"A static import can import all static members of a class using a wildcard (`*`).","2":"Importing a package, such as `java.util.*`, also imports its subpackages, like `java.util.concurrent`.","3":"Importing a class with the same simple name from two different packages requires one of them to be referred to by its fully qualified name.","4":"`import` statements increase the size of the final `.class` file."},"answers":["1","3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100327,"difficulty":"hard","type":"single","question":"What is the result of compiling and running this code?\n\\begin{verbatim}\npublic class TrickyScope {\n    public static void main(String[] args) {\n        int i = 0;\n        if (true) {\n            // The following comment looks like it closes the block\n            /*\n                System.out.println(\"Inside comment\");\n            }\n            */\n            i = 1;\n        } \n        System.out.println(i);\n    }\n}\n\\end{verbatim}","choices":{"0":"It fails to compile due to a syntax error with braces.","1":"It compiles and prints `0`.","2":"It compiles and prints `1`.","3":"It compiles but throws a runtime exception."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103229,"difficulty":"hard","type":"multiple","question":"Which of the following functional interface declarations will compile successfully? (Choose all that apply)","choices":{"0":"`@FunctionalInterface interface A { int m(); default int n() {return 0;} }`","1":"`@FunctionalInterface interface B extends A { }`","2":"`@FunctionalInterface interface C { <T> T m(T t); }`","3":"`@FunctionalInterface interface D extends java.util.Comparator { }`","4":"`@FunctionalInterface interface E { void m(); String toString(); }`"},"answers":["0","1","2","4"],"attempts":1,"answered":false,"attempted":true},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101529,"difficulty":"hard","type":"multiple","question":"You have an encapsulated `MutableDate` class. Which of the following getter method implementations for a `Person` class would risk breaking the encapsulation of the `Person` object's state? (Choose all that apply)\\n\\begin{verbatim}\\n// Assume MutableDate is a class like java.util.Date\\n// with public methods to change its state.\\nclass MutableDate { /* ... setters ... */ }\\n\\nclass Person {\\n    private String name;\\n    private MutableDate birthDate;\\n\\n    public Person(String name, MutableDate birthDate) {\\n        this.name = name;\\n        this.birthDate = birthDate;\\n    }\\n\\n    // ... getters ...\\n}\\n\\end{verbatim}","choices":{"0":"`public MutableDate getBirthDate() { return this.birthDate; }`","1":"`public String getName() { return this.name; }`","2":"`public MutableDate getBirthDate() { return new MutableDate(this.birthDate.getTime()); }`","3":"`public MutableDate getBirthDate() { return (MutableDate) this.birthDate.clone(); }` (Assume `clone()` is implemented correctly for a deep copy).","4":"`public void printBirthDate() { System.out.println(this.birthDate); }`"},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100823,"difficulty":"hard","type":"single","question":"What is the result of this code snippet?\\n\\begin{verbatim}\nint mask = 0x000F;\nint value = 0x2222;\nSystem.out.println(value & mask);\n\\end{verbatim}","choices":{"0":"15","1":"2","2":"0","3":"2222"},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101327,"difficulty":"hard","type":"multiple","question":"Which statements are true about string concatenation using the `+` operator in a loop? (Choose all that apply)\n\\begin{verbatim}\nString result = \"\";\nfor (int i=0; i<100; i++) {\n    result += i; // Line 3\n}\n\\end{verbatim}","choices":{"0":"A new `String` object is created in each iteration of the loop.","1":"The compiler automatically replaces this code with `StringBuilder` for efficiency.","2":"This is the most memory-efficient way to build a string.","3":"After the loop, the original `result` object (the empty string) has been modified to contain the final value."},"answers":["0","1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101828,"difficulty":"hard","type":"single","question":"Analyze the following code. At Point Y, how many `java.lang.String` objects are eligible for GC, assuming no string pooling optimizations for literals?\n\\begin{verbatim}\npublic class StringGC {\n    public static void main(String[] args) {\n        String s1 = \"one\";\n        String s2 = new String(\"two\");\n        String s3 = \"three\";\n        s3 = s1;\n        s1 = s2;\n        s2 = null;\n\n        // What about the object referred to by s1 originally (\"one\")?\n        // What about the object referred to by s2 originally (\"two\")?\n        // What about the object referred to by s3 originally (\"three\")?\n        // Point Y\n    }\n}\n\\end{verbatim}","choices":{"0":"0","1":"1","2":"2","3":"3"},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103022,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\npublic class StaticFail {\n    static {\n        if (true) {\n            throw new RuntimeException(\"Initialization failed\");\n        }\n    }\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles and prints `Hello`.","1":"The code does not compile.","2":"The code compiles, but throws a `RuntimeException` when run.","3":"The code compiles, but throws an `ExceptionInInitializerError` when run.","4":"The code compiles, but throws a `NoClassDefFoundError` when run."},"answers":["3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101325,"difficulty":"hard","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nString text = \"a.b.c\";\nString[] parts = text.split(\".\");\nSystem.out.println(parts.length);\n\\end{verbatim}","choices":{"0":"0","1":"1","2":"3","3":"An exception is thrown at runtime."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103653,"difficulty":"hard","type":"single","question":"What is the output of this code which passes and returns references?\n\\begin{verbatim}\nclass Num { public int val; }\n\npublic class ReturnTest {\n    public static void main(String[] args) {\n        Num a = new Num(); a.val = 1;\n        Num b = new Num(); b.val = 2;\n        b = process(a, b);\n        System.out.println(a.val + \",\" + b.val);\n    }\n\n    public static Num process(Num x, Num y) {\n        x.val = y.val;\n        y = new Num();\n        y.val = 3;\n        return y;\n    }\n}\n\\end{verbatim}","choices":{"0":"`1,2`","1":"`2,3`","2":"`2,2`","3":"`1,3`"},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103357,"difficulty":"hard","type":"multiple","question":"Which of the following lines of code, if executed independently, will result in a runtime exception? (Choose all that apply)\n\\begin{verbatim}\n// Assume all necessary imports from java.time and java.time.temporal\n\\end{verbatim}","choices":{"0":"`LocalDate.of(2025, 13, 1);`","1":"`Duration.between(LocalDate.now(), LocalDateTime.now());`","2":"`Period.of(1, 1, 1).plus(Duration.ofHours(1));`","3":"`LocalTime.now().truncatedTo(ChronoUnit.DAYS);`","4":"`Period.ofMonths(12).normalized();`"},"answers":["0","1","2","3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100021,"difficulty":"hard","type":"single","question":"Consider the following directory structure and files:\n\\begin{verbatim}\n/project\n    /src\n        /com\n            /example\n                MyClass.java\n    /bin\n\\end{verbatim}\nThe file \\verb|MyClass.java| contains:\n\\begin{verbatim}\npackage com.example;\n\npublic class MyClass {\n    public static void main(String[] args) {\n        System.out.println(\"Running MyClass\");\n    }\n}\n\\end{verbatim}\nYou are currently in the \\verb|/project| directory. Which sequence of commands will successfully compile and run \\verb|MyClass|?","choices":{"0":"\\begin{verbatim}\njavac src/com/example/MyClass.java\njava -cp src com.example.MyClass\n\\end{verbatim}","1":"\\begin{verbatim}\njavac src/com/example/MyClass.java\njava -cp bin com.example.MyClass\n\\end{verbatim}","2":"\\begin{verbatim}\njavac -d bin src/com/example/MyClass.java\njava -cp bin com.example.MyClass\n\\end{verbatim}","3":"\\begin{verbatim}\njavac -d bin src/com/example/MyClass.java\njava com.example.MyClass\n\\end{verbatim}"},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100525,"difficulty":"hard","type":"multiple","question":"Which of the following code snippets will compile successfully? (Choose all that apply)","choices":{"0":"\\begin{verbatim}\nshort s = 10;\ns = s + 5;\n\\end{verbatim}","1":"\\begin{verbatim}\nchar c = 'a';\nc += 5;\n\\end{verbatim}","2":"\\begin{verbatim}\nfinal byte b1 = 10;\nfinal byte b2 = 20;\nbyte b3 = b1 + b2;\n\\end{verbatim}","3":"\\begin{verbatim}\nfloat f = 1.0f;\ndouble d = f;\n\\end{verbatim}"},"answers":["1","2","3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100623,"difficulty":"hard","type":"multiple","question":"Which of the following lines will compile without errors? (Choose all that apply)","choices":{"0":"\\verb|Integer i = new Integer(null);|","1":"\\verb|Double d = null; double d2 = d;|","2":"\\verb|Byte b = 25; |","3":"\\verb|Short s = new Short((short)10);|","4":"\\verb|long l = new Integer(100);|"},"answers":["3","4"],"attempts":1,"answered":false,"attempted":true},{"topicId":1012,"topic":"Enums","questionId":101222,"difficulty":"hard","type":"single","question":"Examine the following code. What is the result?\n\\begin{verbatim}\npublic enum Operation {\n    PLUS {\n        public double apply(double x, double y) { return x + y; }\n    },\n    MINUS {\n        public double apply(double x, double y) { return x - y; }\n    };\n    public abstract double apply(double x, double y);\n}\n\nclass Test {\n    public static void main(String[] args) {\n        System.out.println(Operation.PLUS.apply(5, 3));\n    }\n}\n\\end{verbatim}","choices":{"0":"`8.0`","1":"The code fails to compile because an enum cannot be `abstract`.","2":"The code fails to compile because `apply` is not defined for the `Operation` enum itself.","3":"The code fails to compile because an enum constant cannot provide a method implementation."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100328,"difficulty":"hard","type":"multiple","question":"Which of the following code snippets will fail to compile due to issues with comment syntax? (Choose all that apply)","choices":{"0":"\\begin{verbatim}\nint x = 10; //* A special comment */\n\\end{verbatim}","1":"\\begin{verbatim}\nString s = \"This contains a comment end: */\";\n\\end{verbatim}","2":"\\begin{verbatim}\n/* Is this /* nested comment */ valid? */\nint y = 20;\n\\end{verbatim}","3":"\\begin{verbatim}\n// Another comment \\\nint z = 30;\n\\end{verbatim}"},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1026,"topic":"Generics","questionId":102622,"difficulty":"hard","type":"single","question":"Which of these lines causes a compilation error?\\begin{verbatim}\nimport java.util.*;\n\nclass Mammal {}\nclass Primate extends Mammal {}\nclass Human extends Primate {}\n\npublic class Test {\n    public static void main(String[] args) {\n        List<? super Primate> primates = new ArrayList<Mammal>(); // Line 1\n        primates.add(new Human());                                // Line 2\n        primates.add(new Primate());                              // Line 3\n        primates.add(new Mammal());                               // Line 4\n    }\n}\n\\end{verbatim}","choices":{"0":"Line 1","1":"Line 2","2":"Line 3","3":"Line 4"},"answers":["3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101025,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\nint[] a = {1, 2, 3};\nint[] b = {4, 5, 6};\nfor (int i : a, j : b) {\n    System.out.print(i + j);\n}\n\\end{verbatim}","choices":{"0":"579","1":"142536","2":"The code does not compile.","3":"The code throws a runtime exception."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103558,"difficulty":"hard","type":"multiple","question":"Which of the following method declarations are valid in a concrete (non-abstract) class? (Choose all that apply)","choices":{"0":"`private final static void methodA();`","1":"`protected abstract void methodB();`","2":"`public final synchronized void methodC(String... s) {}`","3":"`void methodD(final int... x) {}`","4":"`static { System.out.println(\"I am not a method.\"); }`"},"answers":["2","3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101122,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile this code?\\n\\begin{verbatim}\npublic class InvalidContinue {\n    public static void main(String[] args) {\n        myLabel: {\n            if (true) {\n                continue myLabel; \n            }\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"It compiles successfully.","1":"It fails to compile because `myLabel` is not on a loop.","2":"It fails to compile because a label cannot be on a simple block.","3":"It fails to compile because of an unreachable statement."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100625,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Test {\n    public static void main(String[] args) {\n        List<Integer> list = new ArrayList<>();\n        list.add(1);\n        list.add(2);\n        list.add(3);\n        list.remove(new Integer(2));\n        System.out.println(list);\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|[1, 2]|","1":"\\verb|[1, 3]|","2":"\\verb|[2, 3]|","3":"An \\verb|IndexOutOfBoundsException| occurs."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101725,"difficulty":"hard","type":"single","question":"What is the output of this code? This tests understanding of `this` within inner classes.\\n\\begin{verbatim}\\npublic class Outer {\\n    String name = \"Outer\";\\n\\n    class Inner {\\n        String name = \"Inner\";\\n        void printNames() {\\n            System.out.println(name);\\n            System.out.println(this.name);\\n            System.out.println(Outer.this.name);\\n        }\\n    }\\n\\n    public static void main(String[] args) {\\n        new Outer().new Inner().printNames();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Inner\\nInner\\nOuter","1":"Outer\\nOuter\\nOuter","2":"Inner\\nOuter\\nOuter","3":"The code fails to compile."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100223,"difficulty":"hard","type":"single","question":"The classpath is set to `-cp dirA:dirB`. `dirA` contains `com/test/Tool.class` version 1. `dirB` contains `com/test/Tool.class` version 2. A program uses `com.test.Tool`. Which version of the class will be loaded by the JVM?","choices":{"0":"Version 1 from `dirA`.","1":"Version 2 from `dirB`.","2":"A compilation error will occur.","3":"A runtime error will occur due to the conflict."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101428,"difficulty":"hard","type":"multiple","question":"Which of these method calls can throw a `StringIndexOutOfBoundsException`? (Choose all that apply)\n\\begin{verbatim}\nStringBuilder sb = new StringBuilder(\"abc\");\n\\end{verbatim}","choices":{"0":"`sb.delete(1, 4);`","1":"`sb.insert(4, \"d\");`","2":"`sb.replace(0, 5, \"x\");`","3":"`sb.setCharAt(3, 'd');`"},"answers":["0","1","2","3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102824,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile this code?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        throw new String(\"This is an error\");\n    }\n}\n\\end{verbatim}","choices":{"0":"It compiles, but throws a `ClassCastException` at runtime.","1":"It compiles, but throws a `RuntimeException` at runtime.","2":"It compiles, but throws an `Error` at runtime.","3":"It does not compile."},"answers":["3"],"attempts":1,"answered":false,"attempted":true}],"difficulty":"hard"},{"examId":101,"questionCount":56,"examQuestions":[{"topicId":1022,"topic":"Abstract Classes and Interfaces","questionId":102228,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run the Test class?\\n\\begin{verbatim}\ninterface I1 {\n    default void go() { System.out.println(\"I1\"); }\n}\ninterface I2 {\n    default void go() { System.out.println(\"I2\"); }\n}\nclass C1 implements I1, I2 {\n    public void go() {\n        I1.super.go();\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n        new C1().go();\n    }\n}\n\\end{verbatim}","choices":{"0":"A compile-time error at `class C1`.","1":"The code compiles and prints \"I1\".","2":"The code compiles and prints \"I2\".","3":"A compile-time error at `I1.super.go();` because `super` can only be used with classes."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1030,"topic":"Throwing and Creating Exceptions","questionId":103024,"difficulty":"hard","type":"single","question":"What is the result of compiling this code?\n\\begin{verbatim}\nimport java.io.*;\n\npublic class CatchOrder {\n    public void process() {\n        try {\n            if (System.currentTimeMillis() % 2 == 0) {\n                throw new IOException();\n            } else {\n                throw new FileNotFoundException();\n            }\n        } catch (IOException e) { // line X\n            System.out.println(\"IO\");\n        } catch (FileNotFoundException e) { // line Y\n            System.out.println(\"File Not Found\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation succeeds.","1":"Compilation fails at line X.","2":"Compilation fails at line Y.","3":"Compilation fails at both line X and line Y."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100124,"difficulty":"hard","type":"single","question":"An abstract class is defined as follows:\n\\begin{verbatim}\nabstract class AbstractRunner {\n    public static void main(String[] args) {\n        System.out.println(\"Running from abstract class\");\n    }\n}\n\\end{verbatim}\nWhat is the outcome of compiling and executing `java AbstractRunner`?","choices":{"0":"Compilation fails.","1":"An `InstantiationException` is thrown at runtime.","2":"An `AbstractMethodError` is thrown at runtime.","3":"It compiles and runs successfully, printing the message."},"answers":["3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100921,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run the following class?\\n\\begin{verbatim}\npublic class SwitchCaseConstant {\n    public static void main(String[] args) {\n        final int a = 1;\n        final int b;\n        b = 2;\n        int x = 0;\n        switch (x) {\n            case a: // case 1\n                System.out.print(\"A\");\n            case b: // case 2\n                System.out.print(\"B\");\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `A`.","1":"It prints `B`.","2":"It prints `AB`.","3":"A compilation error occurs."},"answers":["3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1033,"topic":"Date and Time API (java.time)","questionId":103356,"difficulty":"hard","type":"single","question":"What is the result of executing the following code? This question tests the case-sensitivity and symbol correctness of formatter patterns.\n\\begin{verbatim}\nimport java.time.LocalDate;\nimport java.time.format.DateTimeFormatter;\n\npublic class PatternCaseTest {\n    public static void main(String[] args) {\n        String dateStr = \"2-8-2025\";\n        DateTimeFormatter f = DateTimeFormatter.ofPattern(\"d-m-yyyy\");\n        LocalDate date = LocalDate.parse(dateStr, f);\n        System.out.println(date);\n    }\n}\n\\end{verbatim}","choices":{"0":"`2025-08-02`","1":"`2025-02-08`","2":"The code does not compile.","3":"A `DateTimeParseException` is thrown."},"answers":["3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100229,"difficulty":"hard","type":"multiple","question":"Given the file `pkg/A.java`:\n\\begin{verbatim}\npackage pkg;\npublic class A {\n    public void print() { System.out.println(\"A\"); }\n}\n\\end{verbatim}\nAnd the file `B.java`:\n\\begin{verbatim}\nimport pkg.A;\npublic class B {\n    public static void main(String[] args) {\n        A a = new A();\n        a.print();\n    }\n}\n\\end{verbatim}\nFrom the project root, which command sequences will compile and run the code successfully? (Assume Linux/macOS). (Choose all that apply)","choices":{"0":"`javac pkg/A.java B.java; java B`","1":"`javac -d . pkg/A.java B.java; java B`","2":"`javac B.java; java B` (assuming `pkg/A.class` already exists)","3":"`javac pkg/A.java B.java; java -cp . B`","4":"`javac B.java; java -cp . B` (assuming `pkg/A.class` does not exist)"},"answers":["0","2","3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1012,"topic":"Enums","questionId":101225,"difficulty":"hard","type":"multiple","question":"Which of the following code snippets will result in a compilation error? (Choose all that apply)","choices":{"0":"\\begin{verbatim}public enum E1 { A, B; private E1() {} }\\end{verbatim}","1":"\\begin{verbatim}public enum E2 { C, D; protected E2() {} }\\end{verbatim}","2":"\\begin{verbatim}public enum E3 { E, F; E3() {} }\\end{verbatim}","3":"\\begin{verbatim}public enum E4 { G, H; public E4() {} }\\end{verbatim}"},"answers":["1","3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100523,"difficulty":"hard","type":"single","question":"Examine the following code. What will be the outcome?\n\\begin{verbatim}\nfinal int i = 10;\nbyte b = i;\nSystem.out.println(b);\n\\end{verbatim}","choices":{"0":"The code fails to compile because a cast `(byte)` is required.","1":"The code compiles and prints `10`.","2":"The code fails to compile because `i` is final and cannot be assigned.","3":"The code compiles but throws a runtime exception."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100028,"difficulty":"hard","type":"multiple","question":"You are in the directory \\verb|/root|. You have the following files:\n\\verb|/root/com/example/App.java|\n\\verb|/root/lib/helper.jar|\nThe class \\verb|App| depends on a class inside \\verb|helper.jar|. Which command(s) will successfully compile \\verb|App.java|? (Choose all that apply)","choices":{"0":"\\verb|javac -cp lib/helper.jar com/example/App.java|","1":"\\verb|javac -classpath lib/helper.jar com/example/App.java|","2":"\\verb|javac com/example/App.java -cp lib/helper.jar|","3":"\\verb|javac -cp lib/helper.jar;com/example/App.java|","4":"\\verb|javac -d . -cp lib/helper.jar com/example/App.java|"},"answers":["0","1","2","4"],"attempts":1,"answered":false,"attempted":true},{"topicId":1034,"topic":"Static Imports","questionId":103453,"difficulty":"hard","type":"single","question":"Consider an interface with a static method (a Java 8 feature). What is the result of this code?\n\\begin{verbatim}\n// File: I.java\npublic interface I {\n    static void run() { System.out.println(\"I\"); }\n}\n\n// File: C.java\npublic class C {\n    public static void run() { System.out.println(\"C\"); }\n}\n\n// File: Main.java\nimport static I.*;\nimport static C.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        run();\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `I`.","1":"It prints `C`.","2":"The code fails to compile due to ambiguity.","3":"The code fails to compile because you cannot statically import methods from an interface."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1036,"topic":"Passing Data Among Methods","questionId":103650,"difficulty":"hard","type":"single","question":"What is the output of the following code? This question tests `final` parameters.\n\\begin{verbatim}\nclass Box { public int size; }\n\npublic class FinalParamTest {\n    public static void modify(final Box b) {\n        b.size = 100;\n        // b = new Box(); // This line is commented out\n    }\n\n    public static void main(String[] args) {\n        Box box = new Box();\n        box.size = 10;\n        modify(box);\n        System.out.println(box.size);\n    }\n}\n\\end{verbatim}","choices":{"0":"`10`","1":"`100`","2":"The code fails to compile because a method cannot modify a `final` parameter.","3":"The code fails to compile for another reason."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1000,"topic":"Java Environment and Fundamentals","questionId":100024,"difficulty":"hard","type":"single","question":"What is the result of compiling and running the following class?\n\\begin{verbatim}\npublic class Test {\n    static {\n        System.out.print(\"Static block. \");\n    }\n\n    public static void main(String[] args) {\n        System.out.print(\"Main method.\");\n    }\n}\n\\end{verbatim}","choices":{"0":"Main method.","1":"Static block. Main method.","2":"Main method. Static block.","3":"Compilation fails."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1031,"topic":"Try-with-Resources","questionId":103124,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile this code?\n\\begin{verbatim}\nclass Box implements AutoCloseable {\n    private void close() throws Exception {}\n}\npublic class TestPrivateClose {\n    public static void main(String[] args) {\n        try (Box b = new Box()) {\n            // ...\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"The code compiles but fails at runtime with an `IllegalAccessException`.","1":"A compilation error occurs because the `close()` method is private.","2":"The code compiles and runs without issue, as the JVM can access the private method.","3":"A compilation error occurs because the `main` method doesn't handle the `Exception` from `close()`."},"answers":["3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1020,"topic":"Inheritance and Method Overriding","questionId":102025,"difficulty":"hard","type":"single","question":"Which line causes a compilation error?\n\\begin{verbatim}\nclass T1 {\n    T1() { super(); }\n    T1(int i) { this(); }\n}\nclass T2 extends T1 {\n    T2() { super(5); }\n    T2(int i) { this(); }\n    T2(String s) {}\n}\n\\end{verbatim}","choices":{"0":"`T1() { super(); }`","1":"`T1(int i) { this(); }`","2":"`T2() { super(5); }`","3":"`T2(int i) { this(); }`","4":"`T2(String s) {}`"},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101521,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\npublic class Chain {\\n    private int value;\\n\\n    public Chain() {\\n        this(5);\\n        System.out.print(\"A\");\\n    }\\n\\n    public Chain(int value) {\\n        this(value, \"X\");\\n        System.out.print(\"B\");\\n        this.value += value;\\n    }\\n\\n    public Chain(int value, String s) {\\n        System.out.print(s);\\n        this.value = value;\\n    }\\n\\n    public static void main(String[] args) {\\n        Chain c = new Chain();\\n        System.out.print(c.value);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"XBA5","1":"ABX10","2":"XBA10","3":"The code fails to compile."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101721,"difficulty":"hard","type":"single","question":"What is the output of the following code? This question tests method hiding.\\n\\begin{verbatim}\\nclass Animal {\\n    static void eat() { System.out.println(\"Animal eats\"); }\\n}\\nclass Dog extends Animal {\\n    static void eat() { System.out.println(\"Dog eats\"); }\\n}\\npublic class Test {\\n    public static void main(String[] args) {\\n        Animal myAnimal = new Dog();\\n        myAnimal.eat();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"Animal eats","1":"Dog eats","2":"The code fails to compile.","3":"A runtime exception is thrown."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101326,"difficulty":"hard","type":"multiple","question":"Which of the following code snippets will result in `s2` referring to the same object as `s1` in the string pool? (Choose all that apply)\n\\begin{verbatim}\nString s1 = \"Test\";\n\\end{verbatim}","choices":{"0":"`String s2 = \"Test\";`","1":"`String s2 = new String(\"Test\");`","2":"`String s2 = new String(\"Test\").intern();`","3":"`String s2 = \"Te\" + \"st\";`"},"answers":["0","2","3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100629,"difficulty":"hard","type":"single","question":"What is the output of the code?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        Integer a = 10;\n        Integer b = 10;\n        Integer c = a + b;\n        Integer d = 20;\n        System.out.println(c == d);\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|true|","1":"\\verb|false|","2":"Compilation fails.","3":"An exception is thrown at runtime."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1015,"topic":"Classes and Objects Fundamentals","questionId":101524,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\\nclass Wallet {\\n    public int cash;\\n}\\n\\npublic class Thief {\\n    public static void main(String[] args) {\\n        Wallet w = new Wallet();\\n        w.cash = 100;\\n        steal(w);\\n        System.out.println(w.cash);\\n    }\\n\\n    public static void steal(Wallet victimWallet) {\\n        victimWallet.cash -= 50;\\n        victimWallet = new Wallet(); // Thief gets a new wallet\\n        victimWallet.cash = 10;\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"100","1":"50","2":"10","3":"0"},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100428,"difficulty":"hard","type":"single","question":"What happens when this code is compiled and run?\n\\begin{verbatim}\nSystem.out.println(10 / 0);\n\\end{verbatim}","choices":{"0":"It fails to compile.","1":"It prints `Infinity`.","2":"It prints `NaN`.","3":"It compiles but throws an `ArithmeticException` at runtime."},"answers":["3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101823,"difficulty":"hard","type":"multiple","question":"Which of these statements are true regarding Java's memory management and garbage collection? (Choose all that apply)","choices":{"0":"Objects are stored on the heap, while object references are typically stored on the stack.","1":"The `finalize()` method is a reliable mechanism for cleaning up critical resources like database connections.","2":"An 'island of isolation' refers to a group of objects that reference each other but have no external reachable references, making them eligible for GC.","3":"Generational garbage collectors divide the heap into young and old generations to improve efficiency, assuming most objects die young.","4":"Calling `System.exit(0)` will trigger garbage collection and finalization for all live objects before the JVM shuts down."},"answers":["0","2","3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101021,"difficulty":"hard","type":"single","question":"What is the output of this code with labeled statements?\\n\\begin{verbatim}\npublic class LabeledBreak {\n    public static void main(String[] args) {\n        outer:\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                if (i == 1) {\n                    break outer;\n                }\n                System.out.print(i + \"\" + j + \" \");\n            }\n        }\n    }\n}\n\\end{verbatim}","choices":{"0":"00 01 02 ","1":"00 01 02 20 21 22 ","2":"00 01 02 10 11 12 20 21 22 ","3":"The code does not compile."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1002,"topic":"Packages, Classpath, and JARs","questionId":100224,"difficulty":"hard","type":"single","question":"You execute a program with `java -jar myapp.jar`. The manifest file inside `myapp.jar` contains the line `Class-Path: lib/utils.jar`. The JVM will:","choices":{"0":"Ignore the `Class-Path` attribute in the manifest.","1":"Automatically add `lib/utils.jar` to the classpath.","2":"Throw an error because `Class-Path` is not a valid manifest attribute.","3":"Only use `lib/utils.jar` if the `-cp` flag is also specified."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1023,"topic":"The 'final' Keyword","questionId":102323,"difficulty":"hard","type":"single","question":"Examine the following code. What is its result?\\n\\begin{verbatim}\npublic class Runner {\n    public static void main(String[] args) {\n        int y = 1;\n        Runnable r = () -> {\n            // Line 1\n            System.out.println(y);\n        };\n        // Line 2\n    }\n}\n\\end{verbatim}\nWhat happens if the statement `y = 2;` is placed at Line 2?","choices":{"0":"The code compiles and runs fine.","1":"The code fails to compile due to an error at Line 1 (`System.out.println(y);`).","2":"The code fails to compile due to an error at `y = 2;` because `y` is now effectively final.","3":"The code compiles but throws a runtime exception."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101421,"difficulty":"hard","type":"single","question":"What is the output of the following program?\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        StringBuilder sb = new StringBuilder(\"Initial\");\n        reassign(sb);\n        System.out.print(sb + \":\");\n        modify(sb);\n        System.out.print(sb);\n    }\n    static void reassign(StringBuilder sb) {\n        sb = new StringBuilder(\"New\");\n    }\n    static void modify(StringBuilder sb) {\n        sb.append(\"-Mod\");\n    }\n}\n\\end{verbatim}","choices":{"0":"`Initial:Initial-Mod`","1":"`New:New-Mod`","2":"`Initial:Initial`","3":"`New:Initial-Mod`"},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1026,"topic":"Generics","questionId":102625,"difficulty":"hard","type":"single","question":"Due to type erasure, what does the following generic class effectively become after compilation?\\begin{verbatim}\npublic class Node<T extends Comparable<T>> {\n    private T data;\n    private Node<T> next;\n    public Node(T data, Node<T> next) {\n        this.data = data;\n        this.next = next;\n    }\n    public T getData() { return data; }\n}\n\\end{verbatim}","choices":{"0":"\\begin{verbatim}public class Node {\n    private Comparable data;\n    private Node next;\n    // ... constructor and methods with casts\n}\\end{verbatim}","1":"\\begin{verbatim}public class Node {\n    private Object data;\n    private Node next;\n    // ... constructor and methods with casts\n}\\end{verbatim}","2":"\\begin{verbatim}public class Node<Comparable> {\n    private Comparable data;\n    private Node<Comparable> next;\n    // ...\n}\\end{verbatim}","3":"The generic information is retained fully in the bytecode."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1013,"topic":"String Immutability and Operations","questionId":101320,"difficulty":"hard","type":"single","question":"What is the output of the following code?\n\\begin{verbatim}\nfinal String f = \"Ja\";\nString s1 = f + \"va\";\nString s2 = \"Java\";\nSystem.out.println(s1 == s2);\n\\end{verbatim}","choices":{"0":"`true`","1":"`false`","2":"The code does not compile because `f` is `final`.","3":"An exception is thrown at runtime."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1004,"topic":"Primitive Data Types and Literals","questionId":100426,"difficulty":"hard","type":"single","question":"What is printed to the console by the following code?\n\\begin{verbatim}\nint value = 'a' + 'b';\nSystem.out.println(value);\n\\end{verbatim}","choices":{"0":"`ab`","1":"`195`","2":"The code fails to compile.","3":"`9798`"},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100321,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile the following code?\n\\begin{verbatim}\npublic class NestedComment {\n    /*\n     * This is an outer comment.\n     * /* This is a nested comment. */\n     * The outer comment ends here.\n     */\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n}\n\\end{verbatim}","choices":{"0":"Compilation is successful, and the program prints \"Hello\".","1":"Compilation fails due to an unclosed comment.","2":"Compilation is successful, but a warning is issued about nested comments.","3":"Compilation fails due to illegal syntax inside a comment."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1021,"topic":"Polymorphism and Type Casting","questionId":102125,"difficulty":"hard","type":"single","question":"What is the output of the following code?\\n\\begin{verbatim}\nclass Parent {\n    void process(Object o) {\n        System.out.println(\"Parent-Object\");\n    }\n}\nclass Child extends Parent {\n    @Override\n    void process(Object o) {\n        System.out.println(\"Child-Object\");\n    }\n    void process(String s) {\n        System.out.println(\"Child-String\");\n    }\n}\npublic class Test {\n    public static void main(String[] args) {\n        Parent p = new Child();\n        p.process(\"test\");\n    }\n}\n\\end{verbatim}","choices":{"0":"Parent-Object","1":"Child-Object","2":"Child-String","3":"The code fails to compile."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1024,"topic":"One-Dimensional and Multi-Dimensional Arrays","questionId":102424,"difficulty":"hard","type":"multiple","question":"Which of the following statements are true? (Choose all that apply)","choices":{"0":"\\verb|int[] x, y[];| declares \\verb|x| as a 1D array and \\verb|y| as a 2D array.","1":"An array's size can be changed after it has been created.","2":"\\verb|new int[0]| creates an array of size 0.","3":"An \\verb|ArrayStoreException| is a checked exception."},"answers":["0","2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1032,"topic":"Lambda Expressions and Functional Interfaces","questionId":103226,"difficulty":"hard","type":"single","question":"What is the result of the following code?\n\\begin{verbatim}\nimport java.util.function.Function;\n\npublic class TrickyThis {\n    private String value = \"Enclosing\";\n\n    public Function<String, String> create() {\n        return x -> this.value + \":\" + x;\n    }\n\n    public static void main(String[] args) {\n        TrickyThis t = new TrickyThis();\n        System.out.println(t.create().apply(\"Lambda\"));\n    }\n}\n\\end{verbatim}","choices":{"0":"`Enclosing:Lambda`","1":"`Lambda:Enclosing`","2":"A compilation error occurs due to the use of `this`.","3":"A `NullPointerException` is thrown at runtime."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1025,"topic":"ArrayList and Basic Collections","questionId":102525,"difficulty":"hard","type":"single","question":"Which code snippet demonstrates the correct way to create a generic `ArrayList` that can hold any subclass of `Number`?","choices":{"0":"\\verb|List<? super Number> list = new ArrayList<Integer>();|","1":"\\verb|List<? extends Number> list = new ArrayList<Integer>();|","2":"\\verb|List<T extends Number> list = new ArrayList<T>();|","3":"\\verb|List<Number> list = new ArrayList<Integer>();|"},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1028,"topic":"Exception Hierarchy and Types","questionId":102822,"difficulty":"hard","type":"single","question":"What is the outcome of compiling and running the following code?\n\\begin{verbatim}\npublic class Test {\n    static {\n        if (true) {\n            throw new NullPointerException(\"Error in static block\");\n        }\n    }\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n}\n\\end{verbatim}","choices":{"0":"A `NullPointerException` is caught by the JVM and `Hello` is printed.","1":"The program prints `Hello` and exits normally.","2":"An `ExceptionInInitializerError` is thrown, and the program terminates.","3":"A `NullPointerException` is thrown, and the program terminates."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1035,"topic":"Method Design and Variable Arguments","questionId":103557,"difficulty":"hard","type":"multiple","question":"Which of the following method calls are ambiguous and will cause a compilation error? (Choose all that apply)\n\\begin{verbatim}\nclass Ambiguity {\n    static void m(int a, long b) {} // M1\n    static void m(long a, int b) {} // M2\n    static void m(int... a) {}      // M3\n    static void m(Number n) {}      // M4\n    static void m(Object o) {}      // M5\n}\n\\end{verbatim}","choices":{"0":"`Ambiguity.m(5, 10);`","1":"`Ambiguity.m(5L, 10L);`","2":"`Ambiguity.m(5);`","3":"`Ambiguity.m(new Integer(5));`","4":"`Ambiguity.m(null);`"},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1019,"topic":"Encapsulation and Access Modifiers","questionId":101929,"difficulty":"hard","type":"single","question":"Examine the code:\n\\begin{verbatim}\npublic final class MyData {\n    private final StringBuilder builder;\n\n    public MyData(StringBuilder b) {\n        this.builder = b;\n    }\n\n    public StringBuilder getBuilder() {\n        return builder;\n    }\n}\n\n// Main method in another class\nStringBuilder sb = new StringBuilder(\"Initial\");\nMyData data = new MyData(sb);\nsb.append(\" Changed\");\nSystem.out.println(data.getBuilder());\n\\end{verbatim}\nWhat is the output?","choices":{"0":"Initial","1":"Initial Changed","2":"A new `StringBuilder` object's string representation.","3":"Compilation fails because `final` fields cannot be assigned in a constructor.","4":"Compilation fails because `StringBuilder` is mutable."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100726,"difficulty":"hard","type":"single","question":"What is printed to the console?\\n\\begin{verbatim}\npublic class TrickyScope {\n    static TrickyScope ts = new TrickyScope();\n    static int val = 10;\n    {\n        // instance initializer\n        val = 20;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(val);\n    }\n}\n\\end{verbatim}","choices":{"0":"10","1":"20","2":"0","3":"Compilation fails."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1014,"topic":"StringBuilder and StringBuffer","questionId":101427,"difficulty":"hard","type":"multiple","question":"Given `StringBuilder sb = new StringBuilder(\"abcde\");`. Which statements about its capacity are true? (Choose all that apply)","choices":{"0":"The initial capacity is 21 (5 for \"abcde\" + 16 default).","1":"`sb.trimToSize();` will likely change its capacity to 5.","2":"After `sb.append(\"fghijklmnopqrstuvwxyz\");`, the capacity will be larger than its length.","3":"`sb.ensureCapacity(10);` will not change the capacity."},"answers":["0","1","2","3"],"attempts":1,"answered":false,"attempted":true},{"topicId":1007,"topic":"Variable Scope and Lifetime","questionId":100728,"difficulty":"hard","type":"multiple","question":"Which statements about the following code are correct? (Choose all that apply)\\n\\begin{verbatim}\npublic class Outer {\n    private String name = \"Outer\";\n\n    class Inner {\n        private String name = \"Inner\";\n\n        void printNames() {\n            String name = \"Local\";\n            System.out.println(name);\n            System.out.println(this.name);\n            System.out.println(Outer.this.name);\n        }\n    }\n\n    public static void main(String... args) {\n        new Outer().new Inner().printNames();\n    }\n}\n\\end{verbatim}","choices":{"0":"The code will fail to compile.","1":"The output will be: Local","2":"The output will be: Local Inner Outer","3":"\\verb|this.name| refers to the instance variable of the \\verb|Inner| class.","4":"\\verb|Outer.this.name| is used to access the instance variable of the enclosing \\verb|Outer| class."},"answers":["2","3","4"],"attempts":1,"answered":false,"attempted":true},{"topicId":1001,"topic":"Main Method and Command Line Arguments","questionId":100121,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run the following code?\n\\begin{verbatim}\npublic class TrickyMain {\n    public static void main(String args) {\n        System.out.println(\"Hello\");\n    }\n}\n\\end{verbatim}","choices":{"0":"It compiles and runs, printing \"Hello\".","1":"It fails to compile because the `main` parameter is not an array.","2":"It compiles, but at runtime the JVM reports that `main` is not found.","3":"It compiles and runs, but `args` is null."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101127,"difficulty":"hard","type":"single","question":"Consider the following code. Which line causes a compilation error?\\n\\begin{verbatim}\nlabel1: while (true) {      // Line 1\n    int x = 0;               // Line 2\n    label2: do {             // Line 3\n        x++;                 // Line 4\n        continue label1;     // Line 5\n    } while(x < 5);          // Line 6\n    break label2;            // Line 7\n}\n\\end{verbatim}","choices":{"0":"Line 3","1":"Line 5","2":"Line 7","3":"The code compiles without errors."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1006,"topic":"Wrapper Classes and Autoboxing/Unboxing","questionId":100628,"difficulty":"hard","type":"single","question":"Examine this code. What will be printed to the console?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        Integer i1 = 10;\n        Long l1 = 10L;\n        \n        System.out.println(i1.equals(l1));\n    }\n}\n\\end{verbatim}","choices":{"0":"\\verb|true|","1":"\\verb|false|","2":"The code does not compile.","3":"A runtime exception is thrown."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1018,"topic":"Garbage Collection and Object Lifecycle","questionId":101822,"difficulty":"hard","type":"single","question":"What is the final value of `count` printed to the console?\n\\begin{verbatim}\npublic class GCCount {\n    static int count = 0;\n    int id;\n\n    public GCCount(int id) { this.id = id; }\n\n    public static void main(String[] args) {\n        new GCCount(1);\n        GCCount g2 = new GCCount(2);\n        GCCount g3 = new GCCount(3);\n        g2 = g3;\n        new GCCount(4);\n        g3 = null;\n        // Point X\n        System.gc();\n        System.out.println(count);\n    }\n\n    @Override\n    protected void finalize() {\n        count++;\n    }\n}\n\\end{verbatim}","choices":{"0":"0","1":"2","2":"3","3":"4","4":"The output is not guaranteed."},"answers":["4"],"attempts":1,"answered":false,"attempted":true},{"topicId":1012,"topic":"Enums","questionId":101224,"difficulty":"hard","type":"single","question":"What is true about the serialization of enums?","choices":{"0":"Enums are not serializable by default and require implementing `java.io.Serializable` and defining a `serialVersionUID`.","1":"When an enum is deserialized, the constructor is called again to create a new instance.","2":"Java's serialization mechanism ensures that deserializing an enum constant will always return the pre-existing constant instance, thus preserving singleton identity.","3":"Deserializing an enum may result in a different object instance if the enum declaration has changed, causing `==` to fail."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101625,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run the following code?\\n\\begin{verbatim}\\nabstract class Builder {\\n    Builder() { System.out.print(\"B\"); }\\n}\\n\\npublic class House extends Builder {\\n    House() {\\n        // super() is implicitly called here\\n        System.out.print(\"H\");\\n    }\\n\\n    public static void main(String[] args) {\\n        new House();\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"The code fails to compile because an abstract class cannot have a constructor.","1":"The code compiles and prints \"BH\".","2":"The code compiles and prints \"HB\".","3":"The code fails to compile because `new Builder()` is not allowed."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100821,"difficulty":"hard","type":"single","question":"What is the final value of `a`?\\n\\begin{verbatim}\nint a = 2;\na = a++ * a++;\n\\end{verbatim}","choices":{"0":"4","1":"6","2":"8","3":"9"},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1017,"topic":"Static Members and 'this' Keyword","questionId":101723,"difficulty":"hard","type":"single","question":"What is the output of the following code? This question tests static initialization order.\\n\\begin{verbatim}\\npublic class Init {\\n    static { a = b * 2; }\\n    static int a = 10;\\n    static int b = 5;\\n    static { a = b * 3; }\\n\\n    public static void main(String[] args) {\\n        System.out.println(a);\\n    }\\n}\\n\\end{verbatim}","choices":{"0":"10","1":"15","2":"30","3":"The code fails to compile."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1009,"topic":"Conditional Statements (if/else, switch)","questionId":100929,"difficulty":"hard","type":"multiple","question":"What is true about the following code snippet? (Choose all that apply)\\n\\begin{verbatim}\npublic class Tricky {\n    public static void main(String[] args) {\n        boolean a = true, b = false, c = false;\n        if ( a || (b=true) && (c=true) )\n            ;\n        System.out.println(a + \" \" + b + \" \" + c);\n    }\n}\n\\end{verbatim}","choices":{"0":"The output is `true false false`.","1":"The output is `true true true`.","2":"The variable `b` is assigned `true` during the evaluation of the `if` condition.","3":"The variable `c` is assigned `true` during the evaluation of the `if` condition.","4":"The code does not compile."},"answers":["0"],"attempts":1,"answered":false,"attempted":true},{"topicId":1016,"topic":"Constructors and Initialization Blocks","questionId":101629,"difficulty":"hard","type":"multiple","question":"Which statements correctly describe the complete order of initialization for an object `new Sub()` where `Sub extends Super`? (Choose all that apply)","choices":{"0":"Static initializers of `Super` run before static initializers of `Sub`.","1":"All instance initializers (both `Super` and `Sub`) run before any constructor code.","2":"The constructor body of `Super` runs before the instance initializers of `Sub`.","3":"The constructor body of `Sub` is the very last thing to run for the `Sub` object's initialization.","4":"Static initializers of `Sub` run before instance initializers of `Super`.","5":"Instance initializers of `Sub` run before the constructor body of `Sub`."},"answers":["0","2","3","4","5"],"attempts":1,"answered":false,"attempted":true},{"topicId":1029,"topic":"Try-Catch-Finally Blocks","questionId":102921,"difficulty":"hard","type":"single","question":"What is the value returned by the method `check()`?\n\\begin{verbatim}\npublic class Test {\n    public static int check() {\n        try {\n            return 1;\n        } catch (Exception e) {\n            return 2;\n        } finally {\n            return 3;\n        }\n    }\n    public static void main(String[] args) {\n        System.out.println(check());\n    }\n}\n\\end{verbatim}","choices":{"0":"`1`","1":"`2`","2":"`3`","3":"The code does not compile."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1027,"topic":"Sorting and Searching Collections (Comparable, Comparator)","questionId":102725,"difficulty":"hard","type":"single","question":"What is the output?\n\\begin{verbatim}\nclass Legacy {\n    public int compareTo(Object o) { return 0; }\n}\nclass Generic extends Legacy implements Comparable<Generic> {\n}\n// in a method\nComparable c = new Generic();\nSystem.out.println(c.compareTo(\"test\"));\n\\end{verbatim}","choices":{"0":"`0`","1":"A `ClassCastException` is thrown at runtime.","2":"The code does not compile.","3":"The output is unpredictable."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1005,"topic":"Type Conversion and Casting","questionId":100528,"difficulty":"hard","type":"single","question":"What is the result of the following code snippet?\n\\begin{verbatim}\nfloat f = (float) Double.POSITIVE_INFINITY;\nint i = (int) f;\nSystem.out.println(i);\n\\end{verbatim}","choices":{"0":"`0`","1":"`-1`","2":"`2147483647`","3":"A runtime `ArithmeticException` is thrown."},"answers":["2"],"attempts":1,"answered":false,"attempted":true},{"topicId":1003,"topic":"Java Coding Conventions and Javadoc","questionId":100324,"difficulty":"hard","type":"single","question":"A class contains a method with the following Javadoc comment. What is the result of attempting to compile the source file containing this code?\n\\begin{verbatim}\n/**\n * Processes a request.\n * @parameter name The name of the user.\n * @return The result of the processing.\n */\npublic String process(String name) { return \"Processed: \" + name; }\n\\end{verbatim}","choices":{"0":"Compilation fails because `@parameter` is not a valid Javadoc tag.","1":"Compilation succeeds.","2":"Compilation succeeds, but the `javadoc` tool will fail to execute.","3":"Compilation fails with a warning about the unrecognized tag."},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1008,"topic":"Java Operators and Precedence","questionId":100826,"difficulty":"hard","type":"single","question":"What is the output of the following program?\\n\\begin{verbatim}\npublic class Test {\n    public static void main(String[] args) {\n        int x = 5;\n        boolean b1 = true;\n        boolean b2 = false;\n        if ((x == 4) && !b2 )\n            System.out.print(\"1 \");\n        System.out.print(\"2 \");\n        if ((b2 = true) && b1 )\n            System.out.print(\"3 \");\n    }\n}\n\\end{verbatim}","choices":{"0":"2","1":"2 3","2":"1 2 3","3":"1 2"},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1010,"topic":"Looping Constructs (for, while, do-while)","questionId":101027,"difficulty":"hard","type":"single","question":"What is the final value of `count`?\\n\\begin{verbatim}\nint count = 0;\nfor (int i = 0; i < 5; i++) {\n    for (int j = 0; j < 5; j++) {\n        if (j == 2)\n            continue;\n        count++;\n    }\n}\n\\end{verbatim}","choices":{"0":"25","1":"20","2":"15","3":"10"},"answers":["1"],"attempts":1,"answered":false,"attempted":true},{"topicId":1011,"topic":"Break, Continue, and Labels","questionId":101121,"difficulty":"hard","type":"single","question":"What is the result of attempting to compile and run this code?\\n\\begin{verbatim}\npublic class LabeledBlock {\n    public static void main(String[] args) {\n        int x = 5;\n        myBlock: {\n            if (x == 5) {\n                break myBlock;\n            }\n            System.out.print(\"Inside\");\n        }\n        System.out.print(\"Outside\");\n    }\n}\n\\end{verbatim}","choices":{"0":"It prints `InsideOutside`.","1":"It prints `Outside`.","2":"It prints `Inside`.","3":"It fails to compile."},"answers":["1"],"attempts":1,"answered":false,"attempted":true}],"difficulty":"hard"}]